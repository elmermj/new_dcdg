@startuml
scale 0.5
set namespaceSeparator ::

class "skorlife::maps::insights_model.dart::AsOf" {
  +String? label
  +String? date
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::AsOfNow" {
  +String? label
  +String? date
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Button" {
  +bool? enable
  +String? label
  +Click? click
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Button" o-- "skorlife::maps::insights_model.dart::Click"

class "skorlife::maps::insights_model.dart::Click" {
  +bool? enable
  +int? id
  +String? navigate
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::DisplayStatus" {
  +bool? l2
  +bool? l3
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Data" {
  +bool? show
  +bool? navigation
  +Score? score
  +List<DataInsight>? dataInsights
  +AsOf? asOf
  +Button? button
  +Loader? loader
  +String? disclaimer
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Data" o-- "skorlife::maps::insights_model.dart::Score"
"skorlife::maps::insights_model.dart::Data" o-- "skorlife::maps::insights_model.dart::AsOf"
"skorlife::maps::insights_model.dart::Data" o-- "skorlife::maps::insights_model.dart::Button"
"skorlife::maps::insights_model.dart::Data" o-- "skorlife::maps::insights_model.dart::Loader"

class "skorlife::maps::insights_model.dart::DataInsight" {
  +int? id
  +int? order
  +String? type
  +int? priority
  +String? title
  +String? contribution
  +Insight? insight
  +DisplayStatus? displayStatus
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::DataInsight" o-- "skorlife::maps::insights_model.dart::Insight"
"skorlife::maps::insights_model.dart::DataInsight" o-- "skorlife::maps::insights_model.dart::DisplayStatus"

class "skorlife::maps::insights_model.dart::Detail" {
  +AsOfNow? asOfNow
  +List<Message?>? message
  +String? logo
  +Usage? usage
  +Priority? priority
  +ProgressBar? progressBar
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Detail" o-- "skorlife::maps::insights_model.dart::AsOfNow"
"skorlife::maps::insights_model.dart::Detail" o-- "skorlife::maps::insights_model.dart::Usage"
"skorlife::maps::insights_model.dart::Detail" o-- "skorlife::maps::insights_model.dart::Priority"
"skorlife::maps::insights_model.dart::Detail" o-- "skorlife::maps::insights_model.dart::ProgressBar"

class "skorlife::maps::insights_model.dart::Footer" {
  +Button? button
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Footer" o-- "skorlife::maps::insights_model.dart::Button"

class "skorlife::maps::insights_model.dart::Goal" {
  +String? label
  +int? probability
  +String? color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Insight" {
  +String? heading
  +String? title
  +String? message
  +List<Detail?>? details
  +List<Grids>? grids
  +Button? button
  +Footer? footer
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Insight" o-- "skorlife::maps::insights_model.dart::Button"
"skorlife::maps::insights_model.dart::Insight" o-- "skorlife::maps::insights_model.dart::Footer"

class "skorlife::maps::insights_model.dart::Loader" {
  +int? timeout
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Message" {
  +String? message
  +Style? style
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Message" o-- "skorlife::maps::insights_model.dart::Style"

class "skorlife::maps::insights_model.dart::Priority" {
  +bool? enable
  +String? label
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::ProgressBar" {
  +String? color
  +int? value
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::InsightRoot" {
  +int? code
  +Data? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::InsightRoot" o-- "skorlife::maps::insights_model.dart::Data"

class "skorlife::maps::insights_model.dart::Score" {
  +String? title
  +List<Texts>? titleTexts
  +String? message
  +String? label
  +int? current
  +String? color
  +String? messageBackgroundColor
  +String? goalSelectedValue
  +String? goalSelectedTitle
  +Goal? goal
  +Map<String, dynamic> toJson()
}

"skorlife::maps::insights_model.dart::Score" o-- "skorlife::maps::insights_model.dart::Goal"

class "skorlife::maps::insights_model.dart::Style" {
  +String? bold
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Usage" {
  +String? classification
  +String? use
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::insights_model.dart::Grids" {
  +String code
  +String logo
  +String label
  +bool enable
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashboardRespMap" {
  +int? code
  +DashboardRespDataMap? data
  +String? message
  +bool? retry
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DashboardRespMap" o-- "skorlife::maps::dashboard.dart::DashboardRespDataMap"

class "skorlife::maps::dashboard.dart::DashboardRespDataMap" {
  +Dashboard? dashboard
  +DashbordError? dashboardError
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DashboardRespDataMap" o-- "skorlife::maps::dashboard.dart::Dashboard"
"skorlife::maps::dashboard.dart::DashboardRespDataMap" o-- "skorlife::maps::dashboard.dart::DashbordError"

class "skorlife::maps::dashboard.dart::Dashboard" {
  +AccountAge? accountAge
  +AllAccounts? allAccounts
  +CibilChart? cibilChart
  +CreditInvest? creditInvest
  +CreditMix? creditMix
  +CreditUseage? creditUseage
  +TotalAccount? totalAccount
  +TransactionHistory? transactionHistory
  +DashbordError? dashboardError
  +bool? firstTimeUser
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::AccountAge"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::AllAccounts"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::CibilChart"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::CreditInvest"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::CreditMix"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::CreditUseage"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::TotalAccount"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::TransactionHistory"
"skorlife::maps::dashboard.dart::Dashboard" o-- "skorlife::maps::dashboard.dart::DashbordError"

class "skorlife::maps::dashboard.dart::DashbordError" {
  +String? errorHeader
  +String? code
  +String? errorTitle
  +String? errorDescTitle
  +String? errorFirstMessage
  +String? errorSecondMessage
  +String? errorDisplayMessage1
  +String? errorDisplayMessage2
  +String? errorBtnText
  +String? refreshMessage
  +bool? displayTicketButton
  +bool? refreshFlag
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AccountAge" {
  +AaDetails? aaDetails
  +bool? aaClickable
  +String? aaDesc
  +String? aaImgurl
  +int? aaMonth
  +int? aaScore
  +String? aaStatus
  +String? aaStatusColor
  +String? aaTitle
  +int? aaYear
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::AccountAge" o-- "skorlife::maps::dashboard.dart::AaDetails"

class "skorlife::maps::dashboard.dart::AaDetails" {
  +List<ActiveAccounts>? activeAccounts
  +List<ActiveAccounts>? aaDtActiveAccounts
  +List<ActiveAccounts>? aaDtInActiveAccounts
  +String? aaDtStatus
  +String? aaDtStatusColor
  +String? aaDtInfluance
  +String? aaDtAge
  +String? aaDtDesc
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::ActiveAccounts" {
  +String? aaDtAccountName
  +String? aaDtAccountNumber
  +String? aaDtAccountStatus
  +String? aaDtAccountStatusColor
  +String? aaDtAccountDesc
  +String? aaDtAccountAge
  +String? aaDtAccountImageUrl
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AllAccounts" {
  +List<AllAcc>? allAcc
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AllAcc" {
  +String? allAccAmount
  +String? allAccAmountDesc
  +String? allAccDesc
  +String? allAccImgurl
  +String? allAccName
  +String? allAccNumber
  +String? allAccStatus
  +String? allAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CibilChart" {
  +CibilChartDetails? cibilChartDetails
  +String? cibilChartFlag
  +int? cibilChartFlagScore
  +String? cibilChartKol
  +String? cibilChartScore
  +String? cibilChartStatus
  +String? cibilChartStatusColor
  +String? cibilChartRefreshMessage
  +int? cibilChartRefreshDays
  +bool? cibilChartRefreshFlag
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CibilChart" o-- "skorlife::maps::dashboard.dart::CibilChartDetails"

class "skorlife::maps::dashboard.dart::CibilChartDetails" {
  +CibilChartDtCollectabilityScore? cibilChartDtCollectabilityScore
  +CibilChartDtCreditFactor? cibilChartDtCreditFactor
  +List<CibilChartDtGraphKol>? cibilChartDtGraphKol
  +List<CibilChartDtGraphScore>? cibilChartDtGraphScore
  +dynamic cibilChartDtPercentage
  +String? cibilChartDtScore
  +String? cibilChartDtStatus
  +String? cibilChartDtStatusColor
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CibilChartDetails" o-- "skorlife::maps::dashboard.dart::CibilChartDtCollectabilityScore"
"skorlife::maps::dashboard.dart::CibilChartDetails" o-- "skorlife::maps::dashboard.dart::CibilChartDtCreditFactor"

class "skorlife::maps::dashboard.dart::CibilChartDtCollectabilityScore" {
  +String? cibilChartDtCsFlag
  +int? cibilChartDtCsFlagScore
  +String? cibilChartDtCsNextScore
  +String? cibilChartDtCsStatus
  +String? cibilChartDtCsStatusKol
  +String? cibilChartDtCsStatusDesc
  +String? cibilChartDtCsStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CibilChartDtCreditFactor" {
  +List<CibilChartDtCfDetails>? cibilChartDtCfDetails
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CibilChartDtCfDetails" {
  +bool? cibilChartDtCfClickable
  +String? cibilChartDtCfDesc
  +String? cibilChartDtCfImgurl
  +int? cibilChartDtCfScore
  +String? cibilChartDtCfStatus
  +String? cibilChartDtCfStatusColor
  +String? cibilChartDtCfTitle
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CibilChartDtGraphKol" {
  +String? cibilChartDtKolScoreMonth
  +int? cibilChartDtKolScoreValue
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CibilChartDtGraphScore" {
  +String? cibilChartDtGraphScoreMonth
  +int? cibilChartDtGraphScoreValue
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CreditInvest" {
  +bool? ciClickable
  +String? ciDesc
  +CiDetails? ciDetails
  +String? ciImgurl
  +int? ciScore
  +String? ciStatus
  +String? ciStatusColor
  +String? ciTitle
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CreditInvest" o-- "skorlife::maps::dashboard.dart::CiDetails"

class "skorlife::maps::dashboard.dart::CiDetails" {
  +List<CiDtAccounts>? ciDtAccounts
  +String? ciDtInfluence
  +String? ciDtStatus
  +String? ciDtStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CiDtAccounts" {
  +String? ciDtAccDate
  +String? ciDtAccDesc
  +String? ciDtAccImgurl
  +String? ciDtAccName
  +String? ciDtAccNumber
  +String? ciDtAccStatus
  +String? ciDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CreditMix" {
  +bool? cmClickable
  +String? cmDesc
  +CmDetails? cmDetails
  +String? cmImgurl
  +int? cmScore
  +String? cmStatus
  +String? cmStatusColor
  +String? cmTitle
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CreditMix" o-- "skorlife::maps::dashboard.dart::CmDetails"

class "skorlife::maps::dashboard.dart::CmDetails" {
  +List<CmDtGuaranteedAccount>? cmDtGuaranteedAccount
  +int? cmDtGuaranteedScore
  +String? cmDtInfluence
  +List<CmDtNonGuaranteedAccount>? cmDtNonGuaranteedAccount
  +int? cmDtNonGuaranteedScore
  +String? cmDtStatus
  +String? cmDtStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CmDtGuaranteedAccount" {
  +String? cmDtAccAmount
  +String? cmDtAccAmountDesc
  +String? cmDtAccDesc
  +String? cmDtAccImgurl
  +String? cmDtAccName
  +String? cmDtAccNumber
  +String? cmDtAccStatus
  +String? cmDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CmDtNonGuaranteedAccount" {
  +String? cmDtAccAmount
  +String? cmDtAccAmountDesc
  +String? cmDtAccDesc
  +String? cmDtAccImgurl
  +String? cmDtAccName
  +String? cmDtAccNumber
  +String? cmDtAccStatus
  +String? cmDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CreditUseage" {
  +bool? cuClickable
  +String? cuDesc
  +CuDetails? cuDetails
  +String? cuImgurl
  +int? cuScore
  +String? cuStatus
  +String? cuStatusColor
  +String? cuTitle
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CreditUseage" o-- "skorlife::maps::dashboard.dart::CuDetails"

class "skorlife::maps::dashboard.dart::CuDetails" {
  +List<CuDtAccounts>? cuDtAccounts
  +String? cuDtInfluence
  +String? cuDtStatus
  +String? cuDtStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CuDtAccounts" {
  +String? cuDtAccDesc
  +String? cuDtAccImgurl
  +String? cuDtAccName
  +String? cuDtAccNumber
  +int? cuDtAccScore
  +String? cuDtAccScoreColor
  +String? cuDtAccStatus
  +String? cuDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::TotalAccount" {
  +bool? taClickable
  +String? taDesc
  +TaDetails? taDetails
  +String? taImgurl
  +int? taScore
  +String? taStatus
  +String? taStatusColor
  +String? taTitle
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::TotalAccount" o-- "skorlife::maps::dashboard.dart::TaDetails"

class "skorlife::maps::dashboard.dart::TaDetails" {
  +List<TaDtActiveAccount>? taDtActiveAccount
  +List<TaDtInActiveAccount>? taDtInActiveAccount
  +String? taDtInfluence
  +String? taDtStatus
  +String? taDtStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::TaDtActiveAccount" {
  +String? taDtAccAmount
  +String? taDtAccAmountDesc
  +String? taDtAccDesc
  +String? taDtAccImgurl
  +String? taDtAccName
  +String? taDtAccNumber
  +String? taDtAccStatus
  +String? taDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::TaDtInActiveAccount" {
  +String? taDtAccAmount
  +String? taDtAccAmountDesc
  +String? taDtAccDesc
  +String? taDtAccImgurl
  +String? taDtAccName
  +String? taDtAccNumber
  +String? taDtAccStatus
  +String? taDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::TransactionHistory" {
  +bool? thClickable
  +String? thDesc
  +ThDetails? thDetails
  +String? thImgurl
  +int? thScore
  +String? thStatus
  +String? thStatusColor
  +String? thTitle
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::TransactionHistory" o-- "skorlife::maps::dashboard.dart::ThDetails"

class "skorlife::maps::dashboard.dart::ThDetails" {
  +List<ThDtAccounts>? thDtAccounts
  +String? thDtInfluence
  +String? thDtLatePay
  +String? thDtOnTime
  +String? thDtStatus
  +String? thDtStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::ThDtAccounts" {
  +String? thDtAccDesc
  +String? thDtAccFlag
  +String? thDtAccFlagStatus
  +String? thDtAccImgurl
  +String? thDtAccName
  +String? thDtAccNumber
  +String? thDtAccStatus
  +String? thDtAccStatusColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AppSharing" {
  +int? code
  +AppSharingData? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::AppSharing" o-- "skorlife::maps::dashboard.dart::AppSharingData"

class "skorlife::maps::dashboard.dart::AppSharingData" {
  +String? appStoreUrl
  +String? playStoreUrl
  +String? appShareImageURL
  +MaintenanceClass? maintenance
  +AppFeatures? appFeatures
  +AppVersion? appVersion
  +SelfieVerificationLoading? selfieVerificationLoading
  +Dispute dispute
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::AppSharingData" o-- "skorlife::maps::dashboard.dart::MaintenanceClass"
"skorlife::maps::dashboard.dart::AppSharingData" o-- "skorlife::maps::dashboard.dart::AppFeatures"
"skorlife::maps::dashboard.dart::AppSharingData" o-- "skorlife::maps::dashboard.dart::AppVersion"
"skorlife::maps::dashboard.dart::AppSharingData" o-- "skorlife::maps::dashboard.dart::SelfieVerificationLoading"
"skorlife::maps::dashboard.dart::AppSharingData" o-- "skorlife::maps::dashboard.dart::Dispute"

class "skorlife::maps::dashboard.dart::Dispute" {
  +List<String> queryType
  +List<String> registrationQueryType
  +List<Status> status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Status" {
  +String label
  +String value
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MaintenanceClass" {
  +Registration? registration
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::MaintenanceClass" o-- "skorlife::maps::dashboard.dart::Registration"

class "skorlife::maps::dashboard.dart::SelfieVerificationLoading" {
  +String? title
  +String? message
  +int? timeout
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Registration" {
  +bool? enable
  +String? title
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AppFeatures" {
  +bool? inAppUpdate
  +bool? skorShare
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AppVersion" {
  +AndroidVersion? android
  +IosVersion? ios
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::AppVersion" o-- "skorlife::maps::dashboard.dart::AndroidVersion"
"skorlife::maps::dashboard.dart::AppVersion" o-- "skorlife::maps::dashboard.dart::IosVersion"

class "skorlife::maps::dashboard.dart::AndroidVersion" {
  +String? name
  +int? code
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::IosVersion" {
  +String? name
  +int? code
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashboardCarouselData" {
  +int? code
  +CarouselData? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DashboardCarouselData" o-- "skorlife::maps::dashboard.dart::CarouselData"

class "skorlife::maps::dashboard.dart::CDAccountDetails" {
  +List<CarouselDaAccounts>? carouselDaAccounts
  +String carouselDaTitle
  +DashWidget widget
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CDAccountDetails" o-- "skorlife::maps::dashboard.dart::DashWidget"

class "skorlife::maps::dashboard.dart::CarouselDaAccounts" {
  +String iaDtAccName
  +String iaDtAccNumber
  +String iaDtDate
  +String iaDtStatus
  +String iaDtType
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::ErrorDetails" {
  +CarouselL2Data? carouselL2Data
  +Error? error
  +String? errorCode
  +Redirection? redirection
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::ErrorDetails" o-- "skorlife::maps::dashboard.dart::CarouselL2Data"
"skorlife::maps::dashboard.dart::ErrorDetails" o-- "skorlife::maps::dashboard.dart::Error"
"skorlife::maps::dashboard.dart::ErrorDetails" o-- "skorlife::maps::dashboard.dart::Redirection"

class "skorlife::maps::dashboard.dart::CarouselL2Data" {
  +CarouselMissedData? carouselMissedData
  +List<CarouselL2Accounts>? carouselL2Accounts
  +String? carouselMissedDesc
  +bool? carouselMissedDisplayStatus
  +String? carouselMissedHeading
  +String? carouselL2Footer
  +String? carouselL2Header
  +String? carouselL2Title
  +String? carouselMissedText
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CarouselL2Data" o-- "skorlife::maps::dashboard.dart::CarouselMissedData"

class "skorlife::maps::dashboard.dart::CarouselL2Accounts" {
  +String? aaDtAccName
  +String? aaDtAge
  +String? aaDtDate
  +String? aaDtAcNum
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Error" {
  +String? descFirstMessage
  +String? descSecondMessage
  +String? descTitle
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CarouselData" {
  +Accounts? accounts
  +CDAccountDetails? accountDetails
  +CreditUtilization? creditUtilization
  +AgeAccount? ageAccount
  +IdentityMonitoring? identityMonitoring
  +MissedPayments? missedPayments
  +PaymentStreak? paymentStreak
  +ErrorDetails? errorDetails
  +bool isActive
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::Accounts"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::CDAccountDetails"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::CreditUtilization"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::AgeAccount"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::IdentityMonitoring"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::MissedPayments"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::PaymentStreak"
"skorlife::maps::dashboard.dart::CarouselData" o-- "skorlife::maps::dashboard.dart::ErrorDetails"

class "skorlife::maps::dashboard.dart::Accounts" {
  +int? carouselAccAmount
  +List<CarouselAccounts>? carouselAccountList
  +List<AccountTypes>? accountTypes
  +String? carouselAccBtnText
  +String? carouselAccHeading
  +String? carouselAccText
  +String? carouselAccTotalAmount
  +String? carouselAccTotalText
  +String? carouselAccHelpStatus
  +String? carouselAccHelpMessage
  +bool? carouselAccDisplayStatus
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CarouselAccounts" {
  +String? amount
  +String? color
  +String? text
  +int? totalAmount
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AgeAccount" {
  +String? carouselLimit
  +String? carouselCreditLimitText
  +String? carouselDesc
  +bool? carouselAaDisplayStatus
  +String? carouselAaGraphColor
  +String? carouselHeading
  +String? carouselChange
  +String? carouselLastChangesText
  +String? carouselAaStatus
  +String? carouselText
  +int? carouselAaYear
  +String? carouselCuExcellentText
  +String? carouselCuFairText
  +String? carouselCuGoodText
  +String? carouselCuPoorText
  +String? carouselBtnText
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CreditUtilization" {
  +String? carouselBtnText
  +String? carouselChange
  +String? carouselDesc
  +String? carouselHeading
  +String? carouselLimit
  +String? carouselText
  +String? carouselCuLimitText
  +String? carouselCuChangeText
  +String? carouselCuUtilization
  +String? carouselCuGraphColor
  +String? carouselCuSafeText
  +String? carouselCuBestText
  +String? carouselCuHighText
  +String? carouselCreditLimitText
  +String? carouselLastChangesText
  +bool? carouselCuDisplayStatus
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::IdentityMonitoring" {
  +String? carouselImAsper
  +String? carouselImBtnText
  +String? carouselImColor
  +String? carouselImDesc
  +String? carouselImDesc1
  +String? carouselImDesc2
  +String? carouselImHeading
  +String? carouselImText
  +bool? carouselImBtnDisplay
  +bool? carouselImDisplayStatus
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MissedPayments" {
  +String? carouselMissedAsper
  +String? carouselMissedBtnText
  +CarouselMissedData? carouselMissedData
  +String? carouselMissedDesc
  +String? carouselMissedTitle
  +String? carouselMissedHeading
  +String? carouselMissedText
  +bool? carouselMissedPaymentButton
  +bool? carouselMissedDisplayStatus
  +DashWidget? widget
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::MissedPayments" o-- "skorlife::maps::dashboard.dart::CarouselMissedData"
"skorlife::maps::dashboard.dart::MissedPayments" o-- "skorlife::maps::dashboard.dart::DashWidget"

class "skorlife::maps::dashboard.dart::CarouselMissedData" {
  +List<CarouselMissedDataDetail>? carouselMissedDataDetails
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CarouselMissedDataDetail" {
  +String? carouselKolScore
  +String? carouselKolScoreColor
  +String? carouselKolScoreImg
  +String? carouselMissedDataDetailsAcctNum
  +int? carouselMissedDataDetailsAmount
  +String? carouselMissedDataDetailsAmountLabel
  +String? carouselMissedDataDetailsBillingDateLabel
  +String? carouselMissedDataDetailsBillingDay
  +String? carouselMissedDataDetailsDays
  +String? carouselMissedDataDetailsDaysLabel
  +String? carouselMissedDataDetailsDesc
  +String? carouselMissedDataDetailsLatePaymentDays
  +String? carouselMissedDataDetailsLatePaymentLabel
  +String? carouselMissedDataDetailsName
  +String? carouselMissedDataDetailsTotalAmount
  +String? carouselMissedDataDetailsType
  +String? carouselMissedDataDetailsReminderLebal
  +String? carouselTopLabel
  +String? carouselMissedDataDetailsTypeImg
  +bool? carouselMissedDataDetailsIsReminderRequired
  +Reminder? carouselMissedDataDetailsReminder
  +int? id
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CarouselMissedDataDetail" o-- "skorlife::maps::common.dart::Reminder"

class "skorlife::maps::dashboard.dart::PaymentStreak" {
  +String? carouselPaymentsBtnText
  +CarouselPaymentsConsistent? carouselPaymentsConsistent
  +String? carouselPaymentsDesc
  +String? carouselPaymentsHeading
  +String? carouselPaymentsText
  +bool? carouselPaymentDisplayStatus
  +PaymentConsistency? paymentConsistency
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::PaymentStreak" o-- "skorlife::maps::dashboard.dart::CarouselPaymentsConsistent"
"skorlife::maps::dashboard.dart::PaymentStreak" o-- "skorlife::maps::dashboard.dart::PaymentConsistency"

class "skorlife::maps::dashboard.dart::PaymentConsistency" {
  +String? btnText
  +String? dataAsper
  +String? primaryText
  +String? secondaryText
  +String? title
  +String? month
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CarouselPaymentsConsistent" {
  +String? carouselPaymentsConsistentData
  +String? carouselPaymentsConsistentText
  +String? carouselPaymentsConsistentMonth
  +String? carouselPaymentsConsistentColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PaylaterMapping" {
  +int? code
  +List<PaylaterData>? data
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PaylaterData" {
  +String? providerCode
  +String? imageUrl
  +String? name
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Redirection" {
  +String? carouselL2RedirectionDesc
  +String? carouselL2RedirectionHeading
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::ScoreDashboard" {
  +int code
  +String message
  +SDData data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::ScoreDashboard" o-- "skorlife::maps::dashboard.dart::SDData"

class "skorlife::maps::dashboard.dart::SDData" {
  +String? bureauCode
  +String? fileUploadStatus
  +bool? skorcardWaitListEnabled
  +int? bankstatementUploadEnabled
  +String? bureauType
  +String? heading
  +List<SDCollectibility>? collectibility
  +List<Credit>? credit
  +DownloadReport? downloadReport
  +Refresh? refresh
  +Risk? risk
  +DashError? error
  +List<BudgetData>? budgetData
  +Mailer? mailer
  +FinancialGoalData? financialGoalData
  +List<IncomeData>? incomeData
  +GoalEstimatedData? goalEstimatedData
  +TotalExpenditureData? totalExpenditureData
  +String? currentDateTime
  +Rating? rating
  +bool? repaymentsEnabled
  +DateTime? lastPaymentDate
  +String? lastRefreshDate
  +bool? gmailOauthAccess
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::DownloadReport"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::Refresh"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::Risk"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::DashError"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::common.dart::Mailer"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::FinancialGoalData"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::GoalEstimatedData"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::TotalExpenditureData"
"skorlife::maps::dashboard.dart::SDData" o-- "skorlife::maps::dashboard.dart::Rating"

class "skorlife::maps::dashboard.dart::Rating" {
  +bool isRatingEnabled
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DownloadReportMap" {
  +int? code
  +String? message
  +DownloadReport? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DownloadReportMap" o-- "skorlife::maps::dashboard.dart::DownloadReport"

class "skorlife::maps::dashboard.dart::DownloadReport" {
  +String message
  +String successMessage
  +String buttonText
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::TotalExpenditureData" {
  +String? text
  +String? monthYear
  +String? currency
  +bool? button
  +String? buttonText
  +String? budgetHeading
  +String? goalName
  +int? goalMonthBudgetAmount
  +String? month
  +int? totalAmount
  +WeekData? weekData
  +WeekData? monthData
  +Footer? footer
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::TotalExpenditureData" o-- "skorlife::maps::dashboard.dart::WeekData"
"skorlife::maps::dashboard.dart::TotalExpenditureData" o-- "skorlife::maps::dashboard.dart::Footer"

class "skorlife::maps::dashboard.dart::WeekData" {
  +String? currency
  +String? text
  +String? remainingAmount
  +String? totalAmount
  +int? totalAmountValue
  +String? color
  +double? percentage
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Footer" {
  +String? title
  +String? text
  +String? message
  +String? buttonYesText
  +bool? buttonVisibility
  +String? buttonNoText
  +int? yearID
  +int? monthID
  +int? weekID
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Arrangements" {
  +String? title
  +int? amount
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::GoalEstimatedData" {
  +String? leftTitle
  +String? rightTitle
  +int? months
  +String? bulan
  +String? kolScore
  +String? message
  +StartDate? startDate
  +StartDate? userEstimated
  +StartDate? actualEstimatedDate
  +OtherDetails? otherDetails
  +List<GraphDetails>? graphDetails
  +Arrangements? arrangements
  +Button? button
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::GoalEstimatedData" o-- "skorlife::maps::dashboard.dart::StartDate"
"skorlife::maps::dashboard.dart::GoalEstimatedData" o-- "skorlife::maps::dashboard.dart::OtherDetails"
"skorlife::maps::dashboard.dart::GoalEstimatedData" o-- "skorlife::maps::dashboard.dart::Arrangements"
"skorlife::maps::dashboard.dart::GoalEstimatedData" o-- "skorlife::maps::dashboard.dart::Button"

class "skorlife::maps::dashboard.dart::GraphDetails" {
  +String? title
  +int? order
  +String? date
  +String? dateLabel
  +String? text
  +String? bgColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::StartDate" {
  +String? date
  +String? text
  +String? bgColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::OtherDetails" {
  +String? currency
  +String? goalLabel
  +String? goalName
  +String? goalAmount
  +String? goalText
  +String? goalMessage
  +String? goalMessageBgColor
  +String? goalMessageTextColor
  +String? buttonText
  +List<String>? amountRange
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::FinancialGoalData" {
  +String? goalType
  +String? goalName
  +int? budgetAmount
  +int? currentSavedAmount
  +int? totalSavingAmount
  +AdditionalDetails? additionalDetails
  +String? targetDate
  +String? createdAt
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::FinancialGoalData" o-- "skorlife::maps::dashboard.dart::AdditionalDetails"

class "skorlife::maps::dashboard.dart::AdditionalDetails" {
  +String? title
  +String? goalName
  +String? goalMessage
  +String? currency
  +FooterDetails? footerDetails
  +int? amount
  +String? estimatedMessage
  +String? estimatedDate
  +String? goalDate
  +Message? message
  +Message? outerMessage
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::AdditionalDetails" o-- "skorlife::maps::dashboard.dart::FooterDetails"
"skorlife::maps::dashboard.dart::AdditionalDetails" o-- "skorlife::maps::dashboard.dart::Message"

class "skorlife::maps::dashboard.dart::Message" {
  +String? text
  +String? color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Autogenerated" {
  +Message? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Autogenerated" o-- "skorlife::maps::dashboard.dart::Message"

class "skorlife::maps::dashboard.dart::FooterDetails" {
  +String? title
  +String? text
  +String? message
  +String? buttonYesText
  +bool? buttonVisibility
  +String? buttonNoText
  +int? yearID
  +int? monthID
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::IncomeData" {
  +String? incomeType
  +String? incomeDescription
  +int? incomeAmount
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::BudgetData" {
  +String? budgetName
  +int? budgetAmount
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::SDCollectibility" {
  +String? bureau
  +String? header
  +SDDetails? details
  +Kol? kol
  +AsOf? asOf
  +DashError? error
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::SDCollectibility" o-- "skorlife::maps::dashboard.dart::SDDetails"
"skorlife::maps::dashboard.dart::SDCollectibility" o-- "skorlife::maps::dashboard.dart::Kol"
"skorlife::maps::dashboard.dart::SDCollectibility" o-- "skorlife::maps::dashboard.dart::AsOf"
"skorlife::maps::dashboard.dart::SDCollectibility" o-- "skorlife::maps::dashboard.dart::DashError"

class "skorlife::maps::dashboard.dart::SDDetails" {
  +String label
  +bool enable
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Kol" {
  +String label
  +int score
  +String status
  +String color
  +String bgColor
  +String heading
  +String message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::AsOf" {
  +String label
  +String date
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Credit" {
  +String? bureau
  +String? header
  +String? icon
  +String? title
  +Grade? grade
  +AsOf? asOf
  +DashError? error
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Credit" o-- "skorlife::maps::dashboard.dart::Grade"
"skorlife::maps::dashboard.dart::Credit" o-- "skorlife::maps::dashboard.dart::AsOf"
"skorlife::maps::dashboard.dart::Credit" o-- "skorlife::maps::dashboard.dart::DashError"

class "skorlife::maps::dashboard.dart::Grade" {
  +int? score
  +int? previousScore
  +Chart? chart
  +String? status
  +String? color
  +String bgColor
  +String heading
  +String message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Grade" o-- "skorlife::maps::dashboard.dart::Chart"

class "skorlife::maps::dashboard.dart::Refresh" {
  +String? bureau
  +int? day
  +bool? enable
  +String? message
  +String? btnText
  +RefreshProgress? refreshProgress
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Refresh" o-- "skorlife::maps::dashboard.dart::RefreshProgress"

class "skorlife::maps::dashboard.dart::RefreshProgress" {
  +bool? isPaymentRequired
  +String? paymentStatus
  +int? refreshCount
  +RefundDetails? refundDetails
  +RefundDetails? pendingDetails
  +String? expiryDate
  +MailerType? mailerType
  +SRAdditionalDetails? additionalDetails
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::RefreshProgress" o-- "skorlife::maps::dashboard.dart::RefundDetails"
"skorlife::maps::dashboard.dart::RefreshProgress" o-- "dashboard_data::data::dashboard_data.dart::MailerType"
"skorlife::maps::dashboard.dart::RefreshProgress" o-- "dashboard_data::data::services::dashboard_payment_service::sr_additional_details.dart::SRAdditionalDetails"

class "skorlife::maps::dashboard.dart::RefundDetails" {
  +String? title
  +String? message
  +Button? button
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::RefundDetails" o-- "skorlife::maps::dashboard.dart::Button"

class "skorlife::maps::dashboard.dart::Risk" {
  +bool? show
  +String? color
  +Score? score
  +Goals? goals
  +AsOf? asOf
  +Button? button
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Risk" o-- "skorlife::maps::insights_model.dart::Score"
"skorlife::maps::dashboard.dart::Risk" o-- "skorlife::maps::dashboard.dart::Goals"
"skorlife::maps::dashboard.dart::Risk" o-- "skorlife::maps::dashboard.dart::AsOf"
"skorlife::maps::dashboard.dart::Risk" o-- "skorlife::maps::dashboard.dart::Button"

class "skorlife::maps::dashboard.dart::Goals" {
  +String title
  +List<Selection> selection
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Selection" {
  +String label
  +String icon
  +String loanType
  +String value
  +String title
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Goal" {
  +String? label
  +int? probability
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Button" {
  +bool? enable
  +String? label
  +Click? click
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Button" o-- "skorlife::maps::dashboard.dart::Click"

class "skorlife::maps::dashboard.dart::BottomText" {
  +String text
  +int queueNumber
  +String? allowedDate
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashError" {
  +String? header
  +DashWidget? widget
  +DashDispute? dispute
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DashError" o-- "skorlife::maps::dashboard.dart::DashWidget"
"skorlife::maps::dashboard.dart::DashError" o-- "skorlife::maps::dashboard.dart::DashDispute"

class "skorlife::maps::dashboard.dart::UserConfirmation" {
  +List<Texts>? texts
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashWidget" {
  +String title
  +String? message
  +List<Texts>? texts
  +List<DashButtons>? buttons
  +DashDispute? dispute
  +UserConfirmation? confirmation
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::DashWidget" o-- "skorlife::maps::dashboard.dart::DashDispute"
"skorlife::maps::dashboard.dart::DashWidget" o-- "skorlife::maps::dashboard.dart::UserConfirmation"

class "skorlife::maps::dashboard.dart::Texts" {
  +String message
  +Click? click
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::Texts" o-- "skorlife::maps::dashboard.dart::Click"

class "skorlife::maps::dashboard.dart::Click" {
  +bool enable
  +int ReferenceID
  +String? navigate
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashButtons" {
  +bool enable
  +String label
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::DashDispute" {
  +int id
  +bool enable
  +String type
  +String subType
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Chart" {
  +String scoreChangedByType
  +int scoreChangedBy
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PFMBudjetModel" {
  +int code
  +String message
  +PFMBudjetModelData? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::PFMBudjetModel" o-- "skorlife::maps::dashboard.dart::PFMBudjetModelData"

class "skorlife::maps::dashboard.dart::PFMBudjetModelData" {
  +List<Budgets> budgets
  +BudgetAllocation budgetAllocation
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::PFMBudjetModelData" o-- "skorlife::maps::dashboard.dart::BudgetAllocation"

class "skorlife::maps::dashboard.dart::Budgets" {
  +int id
  +String budgetName
  +int budgetAmount
  +String? budgetLabel
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::BudgetAllocation" {
  +TotalBudget totalBudget
  +SavingsBudget savingsBudget
  +FixedBudget fixedBudget
  +RemainingBudget remainingBudget
  +GoalAchievedDate goalAchievedDate
  +MonthData monthData
  +PFMWeekData weekData
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::TotalBudget"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::SavingsBudget"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::FixedBudget"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::RemainingBudget"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::GoalAchievedDate"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::MonthData"
"skorlife::maps::dashboard.dart::BudgetAllocation" o-- "skorlife::maps::dashboard.dart::PFMWeekData"

class "skorlife::maps::dashboard.dart::TotalBudget" {
  +String currency
  +String text
  +String amount
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::SavingsBudget" {
  +String currency
  +String text
  +String amount
  +int amountValue
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::FixedBudget" {
  +String currency
  +String text
  +String amount
  +int amountValue
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::RemainingBudget" {
  +String currency
  +String text
  +String amount
  +int amountValue
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::GoalAchievedDate" {
  +String currency
  +String text
  +String amount
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MonthData" {
  +String currency
  +String text
  +String amount
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PFMWeekData" {
  +String currency
  +String text
  +String amount
  +String month
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::ExpenseSummaryModel" {
  +int code
  +String? message
  +ExpenseSummaryData? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::ExpenseSummaryModel" o-- "skorlife::maps::dashboard.dart::ExpenseSummaryData"

class "skorlife::maps::dashboard.dart::ExpenseSummaryData" {
  +String currency
  +int weekID
  +TotalExpense totalExpense
  +MonthlyBudget monthlyBudget
  +MonthlyWeeklyData monthlyWeeklyData
  +String currentDateTime
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::ExpenseSummaryData" o-- "skorlife::maps::dashboard.dart::TotalExpense"
"skorlife::maps::dashboard.dart::ExpenseSummaryData" o-- "skorlife::maps::dashboard.dart::MonthlyBudget"
"skorlife::maps::dashboard.dart::ExpenseSummaryData" o-- "skorlife::maps::dashboard.dart::MonthlyWeeklyData"

class "skorlife::maps::dashboard.dart::TotalExpense" {
  +String title
  +String text
  +String value
  +String bgColor
  +String textColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MonthlyBudget" {
  +String title
  +String text
  +String value
  +String bgColor
  +String textColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MonthlyWeeklyData" {
  +String title
  +List<MonthlyWeeklyDataList> monthlyWeeklyDataList
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::UpdateSavings" {
  +int code
  +String? message
  +UpdateSavingsModelData data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::UpdateSavings" o-- "skorlife::maps::dashboard.dart::UpdateSavingsModelData"

class "skorlife::maps::dashboard.dart::UpdateSavingsModelData" {
  +String currency
  +String messageText
  +UsButton button
  +List<SavingsData>? savingsData
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::UpdateSavingsModelData" o-- "skorlife::maps::dashboard.dart::UsButton"

class "skorlife::maps::dashboard.dart::UsButton" {
  +String text
  +bool status
  +String textColor
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::SavingsData" {
  +int id
  +int year
  +String monthName
  +bool lastUpdated
  +String message
  +String textColor
  +int savingsAmount
  +int order
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::MonthlyWeeklyDataList" {
  +int weekID
  +String weekRange
  +String weekTextRange
  +int weekAmount
  +int weeklyBudgetAmount
  +String estWeekTextRange
  +String estWeekInfoText
  +int estWeekAmount
  +String estBGColor
  +String estTextColor
  +String sisaBudgetTitle
  +int sisaBudgetAmount
  +String sisaBudgetTextColor
  +String sisaBudgetBGColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::CategoryModel" {
  +int code
  +String message
  +CategoryModelData? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CategoryModel" o-- "skorlife::maps::dashboard.dart::CategoryModelData"

class "skorlife::maps::dashboard.dart::CategoryModelData" {
  +String currency
  +String title
  +ExpenseSummaryData? expenseCategory
  +CategoryModelButton button
  +FixedMonthlyExpense fixedMonthlyExpense
  +HideFixedMonthlyExpense hideFixedMonthlyExpense
  +List<Category> category
  +Map<String, dynamic> toJson()
}

"skorlife::maps::dashboard.dart::CategoryModelData" o-- "skorlife::maps::dashboard.dart::ExpenseSummaryData"
"skorlife::maps::dashboard.dart::CategoryModelData" o-- "skorlife::maps::dashboard.dart::CategoryModelButton"
"skorlife::maps::dashboard.dart::CategoryModelData" o-- "skorlife::maps::dashboard.dart::FixedMonthlyExpense"
"skorlife::maps::dashboard.dart::CategoryModelData" o-- "skorlife::maps::dashboard.dart::HideFixedMonthlyExpense"

class "skorlife::maps::dashboard.dart::CategoryModelButton" {
  +String text
  +bool status
  +String textColor
  +String color
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::FixedMonthlyExpense" {
  +String title
  +String text
  +String value
  +String bgColor
  +String textColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::HideFixedMonthlyExpense" {
  +String title
  +String text
  +String value
  +String bgColor
  +String textColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Category" {
  +int weekID
  +List<Categories>? categories
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::Categories" {
  +String title
  +String expenseDescription
  +int amount
  +int id
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::SetResponse" {
  +int code
  +String message
  +String status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PFMGoal" {
  +int code
  +String message
  +List<PFMGoalData> data
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::dashboard.dart::PFMGoalData" {
  +int id
  +String goalType
  +String goalName
  +String targetDate
  +int budgetAmount
  +int currentSavedAmount
  +String createdAt
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ReqCodeMap" {
  +int? code
  +String? errorCode
  +String? errormessage
  +String? codeString
  +int? otpAttempts
  +double? faceMatchScore
  +String? otpAttemptsMessage
  +String? jwt
  +String? userId
  +ClientInfoMap? clientinfo
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ReqCodeMap" o-- "skorlife::maps::common.dart::ClientInfoMap"

class "skorlife::maps::common.dart::ClientInfoMap" {
  +String? alerttype
  +bool? enableno
  +bool? enableyes
  +String? message
  +String? title
  +String? noerror
  +String? yeserror
  +bool? enableok
  +bool? timeout
  +DateTime? lastOtpGenerateTime
  +String? remainingTimeLabel
  +String? buttonLabel
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ErrorRespMap" {
  +String? message
  +String? title
  +int? status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::RegisterRespMap" {
  +int? code
  +String? message
  +int? otp
  +String? phoneNumber
  +String? jwt
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::OTPVerificationRespMap" {
  +int? code
  +String? jwt
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ResendOtpRespMap" {
  +int? code
  +String? message
  +int? otp
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ForgotPinOtpRespMap" {
  +int? code
  +String? message
  +String? jwt
  +int? otp
  +String? otp_type
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CreatePinAuthRespMap" {
  +int? code
  +String? message
  +String? jwt
  +String? userId
  +bool? isKycDone
  +bool? isFaceMatchDone
  +InitData? initData
  +bool? isGoalSet
  +ProfileRespDataMap? profile
  +Mailer? mailer
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::CreatePinAuthRespMap" o-- "skorlife::maps::common.dart::InitData"
"skorlife::maps::common.dart::CreatePinAuthRespMap" o-- "skorlife::maps::common.dart::ProfileRespDataMap"
"skorlife::maps::common.dart::CreatePinAuthRespMap" o-- "skorlife::maps::common.dart::Mailer"

class "skorlife::maps::common.dart::AuthRespMap" {
  +int code
  +bool isKycDone
  +bool isMailBoxCreated
  +bool isMailboxConsentGiven
  +bool isPersonalizationSet
  +bool isSegmentationAllowed
  +bool isGoalSet
  +Menu menu
  +bool isConsentGiven
  +String jwt
  +String message
  +InitData initData
  +String userId
  +String cbiKycId
  +String cbiKycStatus
  +String bureauType
  +ProfileRespDataMap profile
  +bool isDataTransferConsentGiven
  +bool isPortedUser
  +bool? isFacematchDone
  +ConsentStatus? consent
  +bool ktpimage
  +Mailer mailer
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AuthRespMap" o-- "skorlife::maps::common.dart::Menu"
"skorlife::maps::common.dart::AuthRespMap" o-- "skorlife::maps::common.dart::InitData"
"skorlife::maps::common.dart::AuthRespMap" o-- "skorlife::maps::common.dart::ProfileRespDataMap"
"skorlife::maps::common.dart::AuthRespMap" o-- "skorlife::maps::common.dart::ConsentStatus"
"skorlife::maps::common.dart::AuthRespMap" o-- "skorlife::maps::common.dart::Mailer"

class "skorlife::maps::common.dart::ConsentStatus" {
  +bool Consent
  +bool DigitalSignatureConsent
  +bool vidaConsent
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Mailer" {
  +MAILERTYPE MailerType
  +String MailerStatus
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::Mailer" o-- "skorlife::constants::variables.dart::MAILERTYPE"

class "skorlife::maps::common.dart::InitData" {
  +String appShareImgURL
  +String appstoreUrl
  +Goals goals
  +Dispute dispute
  +Features features
  +Maintenance maintenance
  +String playstoreUrl
  +ScoreShare scoreShare
  +SelfieVerificationLoading selfieVerificationLoading
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::dashboard.dart::Goals"
"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::dashboard.dart::Dispute"
"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::common.dart::Features"
"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::common.dart::Maintenance"
"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::common.dart::ScoreShare"
"skorlife::maps::common.dart::InitData" o-- "skorlife::maps::dashboard.dart::SelfieVerificationLoading"

class "skorlife::maps::common.dart::Features" {
  +bool inAppUpdate
  +bool kycUserSegmentation
  +bool skorShare
  +bool profileGeneralDispute
  +bool scoreDetailGeneralDispute
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Maintenance" {
  +Registration registration
  +KycSegmentation? kycSegmentation
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::Maintenance" o-- "skorlife::maps::common.dart::Registration"
"skorlife::maps::common.dart::Maintenance" o-- "skorlife::maps::common.dart::KycSegmentation"

class "skorlife::maps::common.dart::KycSegmentation" {
  +String? title
  +String? message
  +Button? button
  +BottomText? bottomText
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::KycSegmentation" o-- "skorlife::maps::dashboard.dart::Button"
"skorlife::maps::common.dart::KycSegmentation" o-- "skorlife::maps::dashboard.dart::BottomText"

class "skorlife::maps::common.dart::Registration" {
  +bool enable
  +String title
  +String message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ScoreShare" {
  +List<Status> status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Menu" {
  +bool skorShare
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::UserStatus" {
  +Demog demog
  +Facematch facematch
  +String message
  +String title
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::UserStatus" o-- "skorlife::maps::common.dart::Demog"
"skorlife::maps::common.dart::UserStatus" o-- "skorlife::maps::common.dart::Facematch"

class "skorlife::maps::common.dart::Demog" {
  +String code
  +String status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Facematch" {
  +String code
  +Score score
  +String status
  +Threshold threshold
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::Facematch" o-- "skorlife::maps::common.dart::Score"
"skorlife::maps::common.dart::Facematch" o-- "skorlife::maps::common.dart::Threshold"

class "skorlife::maps::common.dart::Score" {
  +String code
  +double facematch
  +String message
  +double selfie
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Threshold" {
  +double facematch
  +double selfie
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CapturedDocRespMap" {
  +int? code
  +CapturedDocDataMap? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::CapturedDocRespMap" o-- "skorlife::maps::common.dart::CapturedDocDataMap"

class "skorlife::maps::common.dart::CapturedDocDataMap" {
  +String? idnumber
  +String? name
  +String? firstName
  +String? lastName
  +String? bloodtype
  +String? religion
  +String? gender
  +String? birthplacebirthday
  +String? province
  +String? city
  +String? district
  +String? village
  +String? rtrw
  +String? occupation
  +String? expirydate
  +String? validUntil
  +String? nationality
  +String? maritalstatus
  +String? address
  +String? dob
  +String? birthplace
  +String? email
  +String? phone
  +String? kycEventId
  +String? secondaryEmail
  +String? bureauType
  +String? postalCode
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::AccountOverviewList" {
  +String? amount
  +List<AccountOverview>? accountOverview
  +String? text
  +String? paymentStatus
  +String? paymentStatusLabel
  +String? paymentStatusColor
  +int? total_accounts
  +int? total_amount
}

class "skorlife::maps::common.dart::AccountDataMap" {
  +int? code
  +AccountGenericMap? data
  +String? message
}

"skorlife::maps::common.dart::AccountDataMap" o-- "skorlife::maps::common.dart::AccountGenericMap"

class "skorlife::maps::common.dart::AccountOverview" {
  +String? amount
  +int? count
  +String? color
  +int? order
  +String? image
  +String? text
  +String? kolColor
  +String? kolScore
  +int? total_amount
  +bool? paymentStatus
  +String? paymentStatusLabel
  +String? paymentStatusColor
}

class "skorlife::maps::common.dart::AccountTypes" {
  +int? order
  +String? key
  +String? overviewKey
  +String? name
  +String? disputeType
  +String? userConfirmKey
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::AccountGenericMap" {
  +List<AccountTypes>? accountTypes
  +List<AccountsMapList>? accountsMapList
  +AccountOverviewList? ta_dt_overview
}

"skorlife::maps::common.dart::AccountGenericMap" o-- "skorlife::maps::common.dart::AccountOverviewList"

class "skorlife::maps::common.dart::AccountsMapList" {
  +List<AccountsMap>? accounts
  +List<AccountsMap>? inActiveAccounts
  +String? amount
  +String? color
  +String? text
  +int? total_accounts
  +int? total_amount
}

class "skorlife::maps::common.dart::Reminder" {
  +int id
  +String userID
  +int accountID
  +int reminder
  +int actual
  +int priorDays
  +String accountType
  +String status
  +String? nextDueDate
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::AccountsMap" {
  +String? imgurl
  +String? name
  +List<AccountsMap>? childrenAccounts
  +int? id
  +String? number
  +String? status
  +String? status_color
  +String? desc
  +String? amount
  +Reminder? reminder
  +int? total_amount
  +bool? isReminderRequired
  +String? amount_desc
  +String? provider_code
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AccountsMap" o-- "skorlife::maps::common.dart::Reminder"

class "skorlife::maps::common.dart::ProvinsiRespMap" {
  +int? code
  +List<ProvinsiDataMap>? data
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ProvinsiDataMap" {
  +int? id
  +String? province
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CityRespMap" {
  +int? code
  +List<CityDataMap>? data
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CityDataMap" {
  +int? id
  +String? province
  +String? city
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ThreshHoldRespMap" {
  +int? code
  +ThreshHoldDataMap? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ThreshHoldRespMap" o-- "skorlife::maps::common.dart::ThreshHoldDataMap"

class "skorlife::maps::common.dart::ThreshHoldDataMap" {
  +String? dobError
  +String? nameError
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ProfileRespMap" {
  +int? code
  +ProfileRespDataMap? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ProfileRespMap" o-- "skorlife::maps::common.dart::ProfileRespDataMap"

class "skorlife::maps::common.dart::ProfileRespDataMap" {
  +String? gender
  +String? nikNumber
  +String? email
  +String? dob
  +String? profileImage
  +String? address
  +String? village
  +String? district
  +String? city
  +String? province
  +String? fullName
  +String? firstName
  +String? lastName
  +String? placeOfBirth
  +String? postalCode
  +String? mobileNumber
  +MAILERTYPE? mailerType
  +String? mailerStatus
  +String? cbiRegisteredID
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ProfileRespDataMap" o-- "skorlife::constants::variables.dart::MAILERTYPE"

class "skorlife::maps::common.dart::CreditScoreStatusRespMap" {
  +int? code
  +List<CreditScoreStatusData>? data
  +String? message
  +int? scoreMax
  +int? scoreMin
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CreditScoreStatusData" {
  +String? color
  +String? name
  +String? score
  +int? max
  +int? min
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::KolScoreStatusRespMap" {
  +int? code
  +KolScoreStatusData? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::KolScoreStatusRespMap" o-- "skorlife::maps::common.dart::KolScoreStatusData"

class "skorlife::maps::common.dart::KolScoreStatusData" {
  +List<KolScoreStatusDataList>? data
  +String? description
  +String? title
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::KolScoreStatusDataList" {
  +String? color
  +String? name
  +String? status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::AccountDetailsRespMap" {
  +int? code
  +AccountDetailsData? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AccountDetailsRespMap" o-- "skorlife::maps::common.dart::AccountDetailsData"

class "skorlife::maps::common.dart::AccountDetailsData" {
  +AccountDetailsResp? accountDetails
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AccountDetailsData" o-- "skorlife::maps::common.dart::AccountDetailsResp"

class "skorlife::maps::common.dart::AccountDetailsResp" {
  +IndvAccDetailsAccountAge? indvAccDetailsAccountAge
  +IndvAccDetailsCreditUseage? indvAccDetailsCreditUseage
  +IndvAccDetailsLoanData? indvAccDetailsLoanData
  +String? indvAccDetailsDesc
  +String? indvAccDetailsFlag
  +int? indvAccDetailsFlagScore
  +List<IndvAccDetailsGraphKol>? indvAccDetailsGraphKol
  +List<List<dynamic>>? indvAccDetailsGraphPayment
  +String? indvAccDetailsImg
  +String? indvAccDetailsKolDesc
  +IndvAccDetailsMixedCredit? indvAccDetailsMixedCredit
  +String? indvAccDetailsName
  +String? indvAccDetailsNumber
  +IndvAccDetailsPaymentHistory? indvAccDetailsPaymentHistory
  +IndvAccDetailsReportProblem? indvAccDetailsReportProblem
  +int? indvAccDetailsStatusValue
  +String? indvAccDetailsStatus
  +String? indvAccDetailsStatusColor
  +String? indvAccDetailsActiveStatus
  +String? indvAccDetailsActiveStatusType
  +String? indvAccDetailsInterestText
  +int? indvAccDetailsInterestRate
  +String? indvAccDetailsTotalArrearsText
  +String? indvAccDetailsReportDate
  +String? indvAccDetailsTotalArrearsAmount
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsAccountAge"
"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsCreditUseage"
"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsLoanData"
"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsMixedCredit"
"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsPaymentHistory"
"skorlife::maps::common.dart::AccountDetailsResp" o-- "skorlife::maps::common.dart::IndvAccDetailsReportProblem"

class "skorlife::maps::common.dart::IndvAccDetailsAccountAge" {
  +String? indvAccDetailsAccountAgeMonth
  +String? indvAccDetailsAccountAgeYear
  +String? indvAccDetailsAccountAgeGraphicDesc
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsCreditUseage" {
  +String? indvAccDetailsCreditUseageApproved
  +String? indvAccDetailsCreditUseageDesc
  +String? indvAccDetailsCreditUseageInfluence
  +String? indvAccDetailsCreditUseageIssuedOn
  +String? indvAccDetailsCreditUseageNeed2Pay
  +int? indvAccDetailsCreditUseageScore
  +String? indvAccDetailsCreditUseageStatus
  +String? indvAccDetailsCreditUseageStatusColor
  +String? indvAccDetailsCreditUseageTenor
  +String? indvAccDetailsCreditUseageLoanRemaining
  +bool? indvAccDetailsCreditUseageFlag
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsLoanData" {
  +String? indvAccDetailsLoanTotalAmount
  +String? indvAccDetailsLoanRemaining
  +int? indvAccDetailsLoanPaymentScore
  +String? indvAccDetailsPercentageFilled
  +String? indvAccDetailsPercentageUnfilled
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsGraphKol" {
  +String? indvAccDetailsKolScoreMonth
  +int? indvAccDetailsKolScoreValue
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsMixedCredit" {
  +String? indvAccDetailsMixedCreditAccType
  +String? indvAccDetailsMixedCreditDesc
  +String? indvAccDetailsMixedCreditLoanType
  +bool? indvAccDetailsMixedCreditFlag
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsPaymentHistory" {
  +String? indvAccDetailsPaymentHistoryDelay
  +String? indvAccDetailsPaymentHistoryLatePay
  +String? indvAccDetailsPaymentHistoryPayment
  +String? indvAccDetailsPaymentHistoryTime
  +String? indvAccDetailsPaymentHistoryGraphicDesc
  +String? indvAccDetailsPaymentHistoryDueDate
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::IndvAccDetailsReportProblem" {
  +String? indvAccDetailsRpDesc
  +String? indvAccDetailsRpTitle
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::BlogDataRespMap" {
  +int? code
  +BlogData? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::BlogDataRespMap" o-- "skorlife::maps::common.dart::BlogData"

class "skorlife::maps::common.dart::BlogData" {
  +List<BlogDataList>? blogData
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Author" {
  +String? name
  +String? profileURL
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::BlogDataList" {
  +Author? author
  +String? blogTitle
  +String? blogListingImage
  +String? canonicalURL
  +String? category
  +String? readTime
  +String? createdDate
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::BlogDataList" o-- "skorlife::maps::common.dart::Author"

class "skorlife::maps::common.dart::ApiRespRoot" {
  +bool? status
  +Response? response
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ApiRespRoot" o-- "skorlife::maps::common.dart::Response"

class "skorlife::maps::common.dart::Response" {
  +int? code
  +String? message
  +List<AgentScoreData>? data
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::AgentScoreData" {
  +int? id
  +String? nik
  +String? name
  +String? phone
  +Credit? credit
  +String? status
  +String? statusLabel
  +String? daysRemaining
  +DateTime? expiredAt
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::AgentScoreData" o-- "skorlife::maps::common.dart::Credit"

class "skorlife::maps::common.dart::Credit" {
  +String? biScore
  +int? creditScore
  +String? biScoreColor
  +String? creditScoreColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CustomerScore" {
  +bool? status
  +CustomerResponse? response
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::CustomerScore" o-- "skorlife::maps::common.dart::CustomerResponse"

class "skorlife::maps::common.dart::CustomerResponse" {
  +int? code
  +String? message
  +List<CustomerData>? data
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::CustomerData" {
  +int? id
  +String? name
  +String? status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::DisputeModel" {
  +int code
  +List<DisputeData> data
  +String message
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::DisputeData" {
  +int id
  +String helpType
  +String reason
  +AdditionalDetails? additionalDetails
  +String status
  +String helpTypeLabel
  +String helpTypeTitle
  +String statusColor
  +String statusLabel
  +List<Details> details
  +String? resolution
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::DisputeData" o-- "skorlife::maps::common.dart::AdditionalDetails"

class "skorlife::maps::common.dart::AdditionalDetails" {
  +bool isMissingAccountAppliedUsingNIK
  +List<String>? missingAccount
  +List<String>? missingAccountBanks
  +String userQuery
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Details" {
  +int index
  +String date
  +String title
  +String message
  +String status
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ApprovalModel" {
  +int code
  +String message
  +ShareApprovedData data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ApprovalModel" o-- "skorlife::maps::common.dart::ShareApprovedData"

class "skorlife::maps::common.dart::ShareApprovedData" {
  +int id
  +String nik
  +String name
  +String phone
  +ShareApprovedCredit credit
  +String status
  +String daysRemaining
  +String expiredAt
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::ShareApprovedData" o-- "skorlife::maps::common.dart::ShareApprovedCredit"

class "skorlife::maps::common.dart::ShareApprovedCredit" {
  +String biScore
  +int creditScore
  +String biScoreColor
  +String creditScoreColor
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::ApiResponse" {
  +bool status
  +int statusCode
  +String statusMessage
  +dynamic response
}

class "skorlife::maps::common.dart::DisputeViewMap" {
  +String head1
  +String head2
  +String title
  +String description
  +int code
}

class "skorlife::maps::common.dart::EmailCredentialsResp" {
  +int code
  +String message
  +EmailCredentialsRespData data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::EmailCredentialsResp" o-- "skorlife::maps::common.dart::EmailCredentialsRespData"

class "skorlife::maps::common.dart::EmailCredentialsRespData" {
  +String? email
  +String? password
  +String? domain
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::SegmentationRes" {
  +int? code
  +String? message
  +SegmentationResData? data
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::SegmentationRes" o-- "skorlife::maps::common.dart::SegmentationResData"

class "skorlife::maps::common.dart::SegmentationResData" {
  +bool? isSegmentationAllowed
  +KycSegmentation? kycSegmentation
  +Map<String, dynamic> toJson()
}

"skorlife::maps::common.dart::SegmentationResData" o-- "skorlife::maps::common.dart::KycSegmentation"

class "skorlife::maps::common.dart::EbookModel" {
  +List<Ebooks>? ebooks
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::common.dart::Ebooks" {
  +String? imgUrl
  +String? title
  +String? desc
  +String? buttonText
  +String? url
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::account_section.dart::AccountsUserConfirmation" {
  +bool? confirmation
  +bool? status
  +String? message
  +DashWidget? widget
  +Map<String, dynamic> toJson()
}

"skorlife::maps::account_section.dart::AccountsUserConfirmation" o-- "skorlife::maps::dashboard.dart::DashWidget"

class "skorlife::maps::firebaseRemoteConfigModel.dart::FirebaseRemoteConfigModel" {
  +SmartLook? smartLook
  +Map<String, dynamic> toJson()
}

"skorlife::maps::firebaseRemoteConfigModel.dart::FirebaseRemoteConfigModel" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::SmartLook"

class "skorlife::maps::firebaseRemoteConfigModel.dart::RecordingEntry" {
  +String? event
  +bool? enabled
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::SmartLook" {
  +bool? enable
  +int? androidVCode
  +int? iOSVCode
  +String? androidKey
  +String? iOSKey
  +List<RecordingEntry>? startRecording
  +List<RecordingEntry>? stopRecording
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::PaidPromoPriceData" {
  +bool enable
  +int androidVCode
  +int iOsvCode
  +String identityVerificationPrice
  +String creditReportPrice
  +String creditManagementServicesPrice
  +String totalPrice
  +String toRawJson()
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::LocationCapture" {
  +bool androidStatus
  +bool androidMandatory
  +bool iosStatus
  +bool iosMandatory
  +int androidVCode
  +int iosVCode
  +String toRawJson()
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::AppScreenSecure" {
  +bool androidStatus
  +bool iosStatus
  +int androidVCode
  +int iosVCode
  +String toRawJson()
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" {
  +AppMaintenance appMaintenance
  +AppScreenSecure appScreenSecure
  +AppVersion appVersion
  +CreditReportSubmit creditReportSubmit
  +EbookModel ebooks
  +Goals financialGoals
  +bool httpErrorLogging
  +Income incomeTypes
  +LocationCapture locationCapture
  +PaidPromoPriceData paidPromo
  +SmartLook smartLook
  +SmartLook smartLookv337
  +DeepLinks? deepLinks
  +Map<String, dynamic> toJson()
}

"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::AppScreenSecure"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::AppVersion"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::CreditReportSubmit"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::common.dart::EbookModel"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::screens::pfm::set_goal.dart::Goals"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::screens::pfm::set_income.dart::Income"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::LocationCapture"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::PaidPromoPriceData"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::SmartLook"
"skorlife::maps::firebaseRemoteConfigModel.dart::RemoteConfigLocalModal" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::DeepLinks"

class "skorlife::maps::firebaseRemoteConfigModel.dart::DeepLinks" {
  +String? skorCardInvite
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance" {
  +App app
  +Registration registration
  +CaptureUserPersonalisation captureUserPersonalisation
  +SkorcardWaitlist skorcardWaitlist
  +Map<String, dynamic> toJson()
}

"skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::App"
"skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::Registration"
"skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::CaptureUserPersonalisation"
"skorlife::maps::firebaseRemoteConfigModel.dart::AppMaintenance" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::SkorcardWaitlist"

class "skorlife::maps::firebaseRemoteConfigModel.dart::App" {
  +bool enable
  +int androidVCode
  +int iOSVCode
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::Registration" {
  +bool enable
  +bool enableAndroid
  +bool enableIOS
  +int androidVCode
  +int iOSVCode
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::CaptureUserPersonalisation" {
  +bool enable
  +int androidVCode
  +int iOSVCode
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::SkorcardWaitlist" {
  +bool enable
  +int androidVCode
  +int iOSVCode
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::AppVersion" {
  +Android android
  +Ios ios
  +Map<String, dynamic> toJson()
}

"skorlife::maps::firebaseRemoteConfigModel.dart::AppVersion" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::Android"
"skorlife::maps::firebaseRemoteConfigModel.dart::AppVersion" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::Ios"

class "skorlife::maps::firebaseRemoteConfigModel.dart::Android" {
  +String vName
  +int vCode
  +bool isMandatoryUpdate
  +String whatsNew
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::Ios" {
  +String vName
  +int vCode
  +bool isMandatoryUpdate
  +String whatsNew
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::CreditReportSubmit" {
  +BureauEmail bureauEmail
  +String skorlifeEmail
  +Map<String, dynamic> toJson()
}

"skorlife::maps::firebaseRemoteConfigModel.dart::CreditReportSubmit" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::BureauEmail"

class "skorlife::maps::firebaseRemoteConfigModel.dart::BureauEmail" {
  +String CBI
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::firebaseRemoteConfigModel.dart::Goal" {
  +String label
  +String code
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::recommended_payments.dart::RecommendedPayments" {
  +List<PaymentReccomendation>? paymentReccomendation
  +String? totalArrears
  +String? monthlySavingsBudget
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::recommended_payments.dart::PaymentReccomendation" {
  +List<Accounts>? accounts
  +String? month
  +String? monthValue
  +int? order
  +Map<String, dynamic> toJson()
}

class "skorlife::maps::recommended_payments.dart::Accounts" {
  +String? pfmKolScore
  +String? pfmKolScoreColor
  +String? pfmBankImg
  +String? pfmProviderCode
  +String? pfmAccNumber
  +String? pfmAmountToBePaid
  +String? pfmAmountToBePaidLabel
  +String? pfmArrearAmountLabel
  +String? pfmBankName
  +String? pfmArrearTotalAmount
  +String? pfmAccType
  +String? pfmAccExpiryDate
  +Map<String, dynamic> toJson()
}

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitBloc" {
  +FetchRemoteConfigUsecase fetchRemoteConfigUsecase
  -bool _requestingPermission
  -bool _finishLoad
  +CheckRequiredPermissionUseCase checkRequiredPermissionUseCase
  +void retry()
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitBloc" o-- "app_init_domain::usecases::init_app_usecase::fetch_remote_config_usecase.dart::FetchRemoteConfigUsecase"
"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitBloc" o-- "dashboard_domain::usecases::check_required_permission_usecase.dart::CheckRequiredPermissionUseCase"
"bloc::src::bloc.dart::Bloc" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitBloc"

abstract class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitEvent" {
}

"equatable::src::equatable.dart::Equatable" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitEvent"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingEvent" {
  +List<Object?> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitEvent" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingEvent"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingPermissionEvent" {
  +List<Object?> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitEvent" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingPermissionEvent"

abstract class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" {
}

"equatable::src::equatable.dart::Equatable" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingState" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitLoadingState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitSuccessState" {
  +Map<String, dynamic> data
  +List<Object> props
  +bool isLocationPermissionRequired()
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitSuccessState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitJailbrokenFailureState" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitJailbrokenFailureState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitRemoteConfigFailureState" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitRemoteConfigFailureState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitNeedUpdateFailureState" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitNeedUpdateFailureState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitNeedLocationPermissionState" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitNeedLocationPermissionState"

class "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiMaintenanceMode" {
  +List<Object> props
}

"skorlife::app_bloc::app_ui_init_bloc.dart::AppUiInitState" <|-- "skorlife::app_bloc::app_ui_init_bloc.dart::AppUiMaintenanceMode"

class "skorlife::constants::analytics_events.dart::AnalyticsEvents" {
  {static} +String appLaunch
  {static} +String registerClick
  {static} +String registerClickGetRemoteConfigFail
  {static} +String loginClick
  {static} +String loginEnterPin
  {static} +String ageOfAccountsAccountClick
  {static} +String ageOfAccountsView
  {static} +String totalAccountsAccountClick
  {static} +String totalAccountsView
  {static} +String creditMixAccountClick
  {static} +String creditixView
  {static} +String cardUtilizationAccountClick
  {static} +String cardUtilizationView
  {static} +String hardInquiriesView
  {static} +String paymentHistoryAccountClick
  {static} +String paymentHistoryView
  {static} +String scoreDetailAccountClick
  {static} +String scoreDetailView
  {static} +String homeMyProfile
  {static} +String myProfileHelp
  {static} +String myProfileSecurity
  {static} +String webViewAppBar
  {static} +String homeAccounts
  {static} +String homeFactorOfCreditDetailed
  {static} +String homeFactorOfCreditHighLevel
  {static} +String homeDial
  {static} +String homeView
  {static} +String refreshScore
  {static} +String eKycRetakeSelfie
  {static} +String eKycSubmitSelfie
  {static} +String eKYCSelfie
  {static} +String eKYCPersonalDetails
  {static} +String eKYCRetakeIcard
  {static} +String eKYCSubmitICard
  {static} +String loginEnterOTP
  {static} +String otpValidated
  {static} +String loginMobNumber
  {static} +String splashSkip
  {static} +String inAppRatingTrigger
  {static} +String connectToGmail
  {static} +String clickedSubmitInGoalSelectionPage
  {static} +String clickedVerifikasiKTP
  {static} +String clickedSubmitInInfoPreview
  {static} +String ktpFailError
  {static} +String fotoUlangnInBottomSheet
  {static} +String systemErrorInOcr
  {static} +String kycConsentSubmit
  {static} +String digitalSignatureConsent
  {static} +String successfulCreditReportPull
  {static} +String multiHit
  {static} +String noHit
  {static} +String errorHit
  {static} +String ktpAuthorizationSuccess
  {static} +String kycConsentLoad
  {static} +String takeSelfieButtonClick
  {static} +String selfieAuthorization
  {static} +String onboardingSelfieFailureKtp
  {static} +String onboardingSelfieFailureFace
  {static} +String onboardingSelfieFailureSystem
  {static} +String onboardingSelfieSuccess
  {static} +String onboardingKycAuthorization
  {static} +String onboardingGmailAuthorization
  {static} +String onboardingSelfieFailureOverlimit
  {static} +String androidOtpAutoReadSuccess
  {static} +String androidOtpAutoReadValidating
  {static} +String androidForgetOtpAutoRead
  {static} +String onboardingCreditProcessing
  {static} +String onboardingCreditFailureOther
  {static} +String pinScreenLoad
  {static} +String splashScreenLoad
  {static} +String landingScreenLoad
  {static} +String skorcardFullPageBannerClick
  {static} +String mailCowEmailLoad
  {static} +String mailCowEmailConsent
  {static} +String gmailAuthProfileLoad
  {static} +String kycSegmentationAllowedLoad
  {static} +String mailCowEmailChangePasswordload
  {static} +String goalsPageLoad
  {static} +String kycStartLoad
  {static} +String kycStartLoadView2
  {static} +String kycInfoPreviewLoad
  {static} +String mailboxError
  {static} +String maxCapacity
  {static} +String timeOut
  {static} +String kycSelfie
  {static} +String kycSelfieCaptured
  {static} +String kycSelfieVerificationProcessing
  {static} +String kycVerificationUnderProcess
  {static} +String creditReportSearchingLoad
  {static} +String creditReportDownloadingLoad
  {static} +String emailConsentLoad
  {static} +String segmentationLoad
  {static} +String ktpFileSizeError
  {static} +String pastUserDataTransferPageLoad
  {static} +String pastUserDataTransferConsent
  {static} +String onboardingPaidPromoLoad
  {static} +String onboardingPaidPromoVoucherApplied
  {static} +String onboardingKycStepProgressLoad
  {static} +String otpTypeSelection
  {static} +String scoreRefreshRequest
  {static} +String scoreRefreshRequestSuccess
  {static} +String onboardingPastUSerSelfieReverify
  {static} +String OnboardingPastUserInitReverify
  {static} +String OnboardingSelfiePastUserInitReverify
  {static} +String OnboardingAppShareVoucherClaimed
  {static} +String pushNotificationClick
  {static} +String creditBureauSDKInitiateError
  {static} +String creditBureauSDKInitiateSuccess
  {static} +String scoreRefreshButtonTap
  {static} +String scoreRefreshRequestToCreditBureauSDK
  {static} +String creditBureauSDKPinSetStatusCheckSuccess
  {static} +String creditBureauSDKOtpScreenLoad
  {static} +String creditBureauSDKCreatePinScreenLoad
  {static} +String creditBureauSDKPinScreenLoad
  {static} +String creditBureauSDKOtpSent
  {static} +String creditBureauSDKOtpVerified
  {static} +String scoreRefreshRequestInitiated
  {static} +String scoreRefreshRequestInProgress
  {static} +String scoreRefreshRequestStop
  {static} +String scoreRefreshRequestFailed
  {static} +String scoreRefreshOTPEntered
  {static} +String scoreRefreshOTPVerificationFail
  {static} +String scoreRefreshNewPinEntered
  {static} +String scoreRefreshInitiated
  {static} +String scoreRefreshSuccessful
  {static} +String accountsTotalView
  {static} +String accountsDetailedView
  {static} +String disputeForm
  {static} +String disputeSubmitted
  {static} +String insightsTotalView
  {static} +String insightsDetailedView
  {static} +String reminderSuccess
  {static} +String deleteForm
  {static} +String deleteSubmitted
  {static} +String pfmBanner
  {static} +String pfmGoal
  {static} +String pfmGoalCompleted
  {static} +String pfmGoalPageLoad
  {static} +String pfmIncome
  {static} +String pfmIncomeEdit
  {static} +String pfmIncomeSet
  {static} +String pfmSetupStartPage
  {static} +String pfmSetupBudget
  {static} +String pfmSetupConfirmation
  {static} +String pfmSetupSuccess
  {static} +String pfmExpenseTracking
  {static} +String pfmExpenseTrackingAddExpense
  {static} +String pfmExpenseTrackingExpenseConfirm
  {static} +String pfmExpenseCategoryAdd
  {static} +String pfmUpdateSavingsPageLoad
  {static} +String pfmUpdateSavings
  {static} +String pfmUpdateSavingsConfirm
  {static} +String onboardingUserPersonalisationPageLoad
  {static} +String onboardingUserPersonalisationCaptured
  {static} +String onboardingUserPersonalisationCaptureFailed
  {static} +String onboardingCreditReportUploadProcessing
  {static} +String onboardingCreditReportEmailForwardProcessing
  {static} +String onboardingCreditReportSubmitPageLoad
  {static} +String onboardingCreditReportSubmitEmailForwarded
  {static} +String onboardingCreditReportSubmitUploadPageLoad
  {static} +String onboardingCreditReportSubmitUploadFileSelected
  {static} +String onboardingCreditReportSubmitUploadRequest
  {static} +String onboardingCreditReportSubmitUploaded
  {static} +String onboardingCreditReportSubmitUploadFailed
  {static} +String onboardingCreditReportSubmitLater
  {static} +String dashboardCreditReportSubmitFlow
  {static} +String kycInternalFormPage
  {static} +String kycInternalFormPageContinueClick
  {static} +String kycInternalSelfiePageLoad
  {static} +String kycInternalSelfieCapture
  {static} +String kycInternalSelfieVerifying
  {static} +String kycInternalSelfieFailureKTP
  {static} +String kycInternalSelfieFailureFace
  {static} +String kycInternalVerifyTimeOut
  {static} +String kycInternalVerifyOverLimit
  {static} +String kycInternalSelfieFailureSystem
  {static} +String kycInternalSelfieAttempt
  {static} +String kycInternalSelfieAuthorization
  {static} +String kycInternalSelfieSuccess
  {static} +String kycInternalConsentLoad
  {static} +String kycInternalConsentSuccess
  {static} +String kycInternalVidaConsentLoad
  {static} +String kycInternalVidaConsentSuccess
  {static} +String vidaSelfieSDKStart
  {static} +String vidaSelfieSDKFailed
  {static} +String vidaSelfieSDKCompleted
  {static} +String refreshBtmSheetOpen
  {static} +String refreshBtmSheetOpenDashboard
  {static} +String refreshBtmSheetOpenFromButton
  {static} +String refreshBtmSheetOpenFromKolButton
  {static} +String refreshBtmSheetOpenFromRetryButton
  {static} +String refreshBtmSheetOpenFromInfo
  {static} +String refreshBtmSheetOpenFromAc
  {static} +String refreshBtmSheetClosed
  {static} +String refreshBtmSheetFaq
  {static} +String refreshPaymentInitiated
  {static} +String refreshPaymentSuccess
  {static} +String refreshPaymentVerified
  {static} +String refreshPaymentVerificationFailed
  {static} +String refreshPaymentFailed
  {static} +String refreshPaymentCancelled
  {static} +String refreshConsentOpen
  {static} +String refreshConsentGiven
  {static} +String refreshConsentFailed
  {static} +String refreshSearchReportLoading
  {static} +String refreshSearchReportSuccess
  {static} +String refreshSearchReportFailed
  {static} +String otpLessWhatsAppRequestSend
  {static} +String otpLessWhatsAppSent
  {static} +String otpLessWhatsAppSendFailed
  {static} +String otpLessVerifying
  {static} +String otpLessVerifySuccess
  {static} +String otpLessVerifyFailure
}

class "skorlife::constants::provider.dart::AppProvider" {
  +EnvironmentService envService
  +String appVersion
  +int appVersionCode
  +String appInstalledDateTime
  +bool notifySkorShare
  +bool alreadyBadDone
  +bool alreadyBadYesNo
  +String alreadyBadMsg
  +MAILERTYPE mailerType
  +bool isLocationToBeSentToServer
  +bool isFCMTokenToBeSentToServer
  +bool tempHideBtmNav
  +bool apiLoaded
  +bool isFromDirectLogin
  +bool isDashboardAnalyticsDataSent
  +String? dashboardNotSetMessage
  +String? dashboardNotSetTitle
  +String? selectedAccountType
  +String? otpVerificationType
  +bool loggedIn
  +AccountsUserConfirmation accountUserConfirmationL3
  +String jwt
  +String? deviceIpAddress
  +String? deviceLocation
  +String? deviceCountry
  +String? deviceId
  +String? deviceUserAgent
  +List<AccountTypes> listOfAccountTypes
  +List<CameraDescription> mobileCameras
  +String? shareImagePath
  +String? googleServerAuthCode
  +String? googleEmailId
  +CapturedDocDataMap? ocrData
  +String? ktpDocPath
  +TextEditingController docIdController
  +TextEditingController nameController
  +TextEditingController firstNameController
  +TextEditingController lastNameController
  +TextEditingController mobileNumberController
  +TextEditingController emailController
  +TextEditingController addressController
  +TextEditingController villageController
  +TextEditingController birthPlaceController
  +TextEditingController districtController
  +TextEditingController pinCodeController
  +bool kycIsLastName
  +bool isNameValid
  +bool inValidDate
  +bool inValidName
  +bool inValidNik
  +bool privacyUrlLoaded
  +bool termAndConditionUrlLoad
  +bool elektronikUrlLoad
  +bool showSkoreShare
  +String pinErrorMessage
  +String inValidNameErrorMessage
  +String kyc2Dob
  +String kyc2Gender
  +String kyc2CountryCode
  +String kyc2Provinsi
  +String kyc2City
  +ProfileRespDataMap? profileData
  +Dashboard? dashboardData
  +DashbordError? dashbordError
  +String userShortName
  +bool canUserRefreshScore
  +bool dashboardDataSet
  +bool displaySecondaryError
  +bool isPFMSetupCompleted
  +String creditScoreMin
  +String creditScoreMax
  +List<CreditScoreStatusData>? creditScoreStatus
  +KolScoreStatusData? kolScoreStatus
  +List<dynamic> customBlogData
  +InitData? initData
  +bool kycDone
  +bool consentGiven
  +String userId
  +String phone
  +BUREAU_TYPE bureauType
  +String authJWTToken
  +String cbiKycStatus
  +String cbiKycId
  +ConsentStatus kycStatus
  +AppSharingData? appSharingUrl
  +CarouselData? dashboardCarouselData
  +bool splashScreen
  +List<PaylaterData>? paylatetdata
  +int activeBNScreen
  +String currentActiveRoute
  +bool isScoreRefreshIntimated
  +List<Map<String, dynamic>> provinsiOptions
  +List<Map<String, dynamic>> cityOptions
  +SDData? getScoreData
  +String? currentDateTime
  +RecommendedPayments? paymentArrearsInfo
  +ValueNotifier<bool> isArrearsInfoAvailable
  +Map<String, AccountsUserConfirmation> accountConfirmation
  +InsightRoot? insightsData
  +EmailCredentialsResp? emailCredentialsResp
  +bool profiledisablebutton
  +bool isupdateInfo
  +bool isprofilesheetopen
  +bool iskycinfomessage
  +bool iskycconstent
  +bool isFaceMatchLoading
  +bool handleBackNavigationLocally
  +bool isPastUser
  +bool isPersonalisationSet
  +bool isDataTransferConsetGiven
  +bool isKtpImage
  +String? kycEventId
  +String? advertisingId
  +int ipFetched
  +bool isGmailAccessPermission
  +bool isMailboxConsentGiven
  -Map<String, dynamic> _downloadStatusList
  +ValueNotifier<bool> updateScoreDetailsUI
  +ValueNotifier<bool> refreshNotifier
  +bool isProfileGeneralDispute
  +bool isScoreDetailGeneralDispute
  +int initialTimeOut
  +int extendedTimeOut
  +int extendedTimerCheckInterval
  +int initialTimerCheckInterval
  +bool isVoucherPopupShown
  +bool showSuccessBanner
  +bool initialisedAppWithRemoteConfig
  +bool smartLookEnable
  +PaidPromoPriceData? paidPromoPriceData
  +bool isMandatoryUpdate
  +int appVersionCodeInFirebase
  +bool isGoalSet
  +TextEditingController nikController
  +TextEditingController fullNameController
  +TextEditingController skorkuIdController
  +TextEditingController disputeFormAddressController
  +TextEditingController phoneNumberController
  +AccountOverviewList? listOfAccountOverview
  +List<dynamic> biScoreBgColor
  +List<dynamic> ScoreCreditMessage
  +Map<String, dynamic> downloadStatusList
  +Future<RemoteConfigLocalModal?> remoteConfigLocalModal
  +dynamic setIsLocationToBeSentToServer()
  +dynamic setIsFCMTokenToBeSentToServer()
  +dynamic setIsDashboardAnalyticsDataSent()
  +dynamic setOTPVerificationType()
  +dynamic setMailer()
  +dynamic setApiLoad()
  +dynamic setBtmNavVisibility()
  +dynamic setAlreadyBadDone()
  +dynamic setAlreadyBadYesNo()
  +dynamic setAlreadyBadMsg()
  +dynamic setAccountConfirmationL3()
  +dynamic setDashboardNotSetMessage()
  +dynamic setDashboardNotSetTitle()
  +void setAppPackageInfo()
  +void setJwt()
  +Future<bool> setDeviceInformations()
  +Future<bool> setLocationInformation()
  +void setListOfAccountTypes()
  +void setAvailableCameras()
  +Future<dynamic> launchScaneBottomSheet()
  +dynamic setShareImagePath()
  +dynamic setKtpDocPath()
  +dynamic setServerAuthCode()
  +dynamic setGoogleUserEmailId()
  +void clearOcrData()
  +Future<bool> setOcrData()
  +void updateOcrData()
  +void setPrivacyUrlLoad()
  +void setTermAndConditionUrlLoad()
  +void setElektronikUrlLoad()
  +void setKycIsLastName()
  +void setKyc2Dob()
  +void setKyc2Gender()
  +void setKyc2Provinsi()
  +void setKyc2City()
  +void setIsNameValid()
  +void setInValidDate()
  +void setInValidName()
  +void setInValidNik()
  +dynamic setInValidNameErrorMessage()
  +dynamic setPinErrorMessage()
  +void setSecondaryError()
  +void setDashboardDataSet()
  +Future<bool> setAuthScreensData()
  +dynamic setIsPFM()
  +Future<dynamic> getpath()
  +Future<bool> setProfileData()
  +Future<bool> setDashboardData()
  +Future<bool> refreshAccountDetails()
  +Future<void> forgotPin()
  +Future<void> getCreditScoreStatusForActionSheet()
  +Future<void> getKolScoreStatusForActionSheet()
  +Future<void> getBlogData()
  +Future<void> initMixpanel()
  +Future<void> mixpanelTrackPFM()
  +Map<String, Object>? trackConvert()
  +Future<void> mixpanelTrack()
  +Future<void> mixpanelIdentify()
  +dynamic setKycStatus()
  +dynamic setBureauType()
  +dynamic setCbiStatus()
  +dynamic setCbiKycId()
  +dynamic setUserId()
  +dynamic setPhone()
  +dynamic setAuthJWTToken()
  +dynamic setKycDone()
  +dynamic setConsentGiven()
  +dynamic setInitData()
  +Future<void> getAppSharingUrl()
  +Future<ApiResponse> getFacematchStatus()
  +Future<void> getCarouselData()
  +Future<void> deleteAccount()
  +Future<void> facingAnIssue()
  +Future<String> raiseIssue()
  +Future<String> userConfirmation()
  +Future<String> consentToKYC()
  +Future<String> consentToDS()
  +Future<String> consentToVida()
  +void getAccountDetails()
  +Future<ApiResponse> getPaymentTransactionId()
  +void getAccountDetailsAA()
  +void setsplashScreen()
  +Future<void> getPaylaterMapping()
  +void setActiveBNScreen()
  +void setIsScoreRefreshIntimated()
  +void setCurrentActiveRoute()
  +dynamic getFCMToken()
  +dynamic setToken()
  +dynamic getProvinsi()
  +Future<void> getCity()
  +dynamic setScoreData()
  +dynamic setCurrentDateTime()
  +dynamic setRecommendedPayments()
  +dynamic getPaymentArrearsInfo()
  +Future<bool> getDashboardScore()
  +Future<void> getAlreadyBadStatus()
  +dynamic clearAccountConfirmation()
  +Future<bool> getAccountConfirmationV1()
  +Future<void> getInsightsRequest()
  +dynamic setEmailCredentialData()
  +dynamic setProfileDisableButton()
  +dynamic setUpdateInfo()
  +dynamic setProfileSheetOpen()
  +dynamic setKycInfoMesage()
  +dynamic setKycConstent()
  +dynamic setFaceMatchLoading()
  +dynamic setHandleBackNavigationLocally()
  +dynamic dashErrorClick()
  +Future<ApiResponse> setGoal()
  +Future<void> getCredentials()
  +Future<bool> reminderApi()
  +List<int?> getScoreLines()
  +List<int?> getKolLines()
  +List<String?> getScoreMonth()
  +List<String?> getKolMonth()
  +List<int?> getKolVal()
  +dynamic sendLocationDetails()
  +dynamic setPastUser()
  +dynamic setPersonalisation()
  +dynamic setConsentToTransferData()
  +dynamic setKycEventId()
  +dynamic setKtpImage()
  +dynamic setAdvertisingId()
  +Future<void> advertisingIdReq()
  +dynamic updateDeviceData()
  +dynamic getIP()
  +dynamic setMailboxConsent()
  +Future<void> getGmailAccessPermission()
  +Future<Map<String, dynamic>> oAuthCall()
  +Future<ApiResponse> sendOAuthConsentToServer()
  +dynamic silentSignIn()
  +dynamic addToDownloadStatusList()
  +dynamic signOut()
  +dynamic changeScoreDetailsUiState()
  +dynamic checkGooglePermission()
  +dynamic scoreRefreshValidation()
  +dynamic navigateToConsentScreen()
  +dynamic setVoucherPopupShown()
  +dynamic setShowSuccessBanner()
  +Future<void> initAppWithRemoteConfig()
  +dynamic checkForAppUpdates()
  +Future<void> initSmartLook()
  +Future<void> getPaidPromoPricingData()
  +Future<bool> getUserPersonalisationCaptureRequired()
  +dynamic getInAppUpdateDetails()
  +dynamic setGoalset()
  +dynamic checkAndNavigatePersonalisationSetStatus()
  +void checkAndnavigateToPaidPromoPage()
  +void selectFile()
  +Future<void> getAccountsDetails()
  +void setLoggedIn()
  +bool isLoggedIn()
  +void askForLocation()
  +bool toConsent()
  +dynamic setUnreadNotificationsAsRead()
}

"skorlife::constants::provider.dart::AppProvider" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::constants::variables.dart::MAILERTYPE"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::account_section.dart::AccountsUserConfirmation"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::CapturedDocDataMap"
"skorlife::constants::provider.dart::AppProvider" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::ProfileRespDataMap"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::dashboard.dart::Dashboard"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::dashboard.dart::DashbordError"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::KolScoreStatusData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::InitData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::constants::variables.dart::BUREAU_TYPE"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::ConsentStatus"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::dashboard.dart::AppSharingData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::dashboard.dart::CarouselData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::dashboard.dart::SDData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::recommended_payments.dart::RecommendedPayments"
"skorlife::constants::provider.dart::AppProvider" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::insights_model.dart::InsightRoot"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::EmailCredentialsResp"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::firebaseRemoteConfigModel.dart::PaidPromoPriceData"
"skorlife::constants::provider.dart::AppProvider" o-- "skorlife::maps::common.dart::AccountOverviewList"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "skorlife::constants::provider.dart::AppProvider"

class "skorlife::constants::endpoints.dart::Endpoints" {
  {static} +String apiHostV1
  {static} +String apiHostV2
  {static} +String login
  {static} +String register
  {static} +String isRegister
  {static} +String resendOtp
  {static} +String savePin
  {static} +String validateOtp
  {static} +String validateOTPLessVerification
  {static} +String validateChangePhoneOTPLessVerification
  {static} +String province
  {static} +String city
  {static} +String blog
  {static} +String blogs
  {static} +String appSharing
  {static} +String carouselData
  {static} +String deleteAccount
  {static} +String yesNoStatus
  {static} +String setUserConfirmation
  {static} +String getInsights
  {static} +String advertisingId
  {static} +String getKyc
  {static} +String extractUserData
  {static} +String updateKyc
  {static} +String updateDemog
  {static} +String faceMatch
  {static} +String faceMatchStatus
  {static} +String kycConsent
  {static} +String vidaConsent
  {static} +String emailConsent
  {static} +String clickRefreshConsent
  {static} +String thresholdCheck
  {static} +String profile
  {static} +String updateUserName
  {static} +String userDigitalConsent
  {static} +String userDigitalSignatureConsent
  {static} +String getCreditReport
  {static} +String requestCreditReport
  {static} +String kycStatus
  {static} +String emailCredentials
  {static} +String gmailConsentUpdate
  {static} +String segmentation
  {static} +String dataTransferConsent
  {static} +String deleteAccountData
  {static} +String deleteAccountCancel
  {static} +String extractAccountDetails
  {static} +String accountDetails
  {static} +String getStatus
  {static} +String getKolStatus
  {static} +String refreshAccountDetails
  {static} +String getAccountDetails
  {static} +String deviceError
  {static} +String raiseDispute
  {static} +String getDispute
  {static} +String paylaterMapping
  {static} +String agentScore
  {static} +String customerScore
  {static} +String eligibleRefresh
  {static} +String paymentInitiate
  {static} +String verifyPayment
  {static} +String refundPayment
  {static} +String customerScorePending
  {static} +String registerNotification
  {static} +String notificationEndpoint
  {static} +String updateProfile
  {static} +String dashboardScore
  {static} +String changeNumber
  {static} +String reminder
  {static} +String goals
  {static} +String goalsPfm
  {static} +String incomePfm
  {static} +String changePassword
  {static} +String locationUpdate
  {static} +String gmailAccessPermission
  {static} +String logout
  {static} +String budgetPFMEndpoint
  {static} +String getUpdateSavingData
  {static} +String setSaving
  {static} +String setUpComplete
  {static} +String getExpenses
  {static} +String setExpenses
  {static} +String setCategory
  {static} +String setEmailForMaintenance
  {static} +String accountRecommendation
  {static} +String uploadReport
  {static} +String setUserPersonalisationType
  {static} +String getUserPersonalisationData
  {static} +String agentScoreRefresh()
  {static} +String customerApprove()
  {static} +String customerDisconnect()
  {static} +String customerScoreRefresh()
}

class "skorlife::constants::colors.dart::AppColors" {
  {static} +Color divider
  {static} +Color darkBlue
  {static} +Color darkPowderBlue
  {static} +Color shadeOfDarkSlateBlue
  {static} +Color cyanBlue
  {static} +Color lightPowderBlue
  {static} +Color iconColor
  {static} +Color blueberry
  {static} +Color carolinaBlue
  {static} +Color krishnaBlue
  {static} +Color sanctuarySpa
  {static} +Color mildBlue
  {static} +Color darkSKyBlue
  {static} +Color orangeRed
  {static} +Color sunsetOrange
  {static} +Color bittersweet
  {static} +Color seashell
  {static} +Color pink
  {static} +Color redViolet
  {static} +Color cottonCandy
  {static} +Color governorBay
  {static} +Color ufoGreen
  {static} +Color shadeGreenCyan
  {static} +Color greenSkorku
  {static} +Color teal
  {static} +Color shadeOfYellow
  {static} +Color tangerineYellow
  {static} +Color black
  {static} +Color skorcardBrandPrimary
  {static} +Color darkShadeOfGray
  {static} +Color eclipse
  {static} +Color darkGray
  {static} +Color gray
  {static} +Color blackMana
  {static} +Color zambeziGray
  {static} +Color graniteGray
  {static} +Color gray44
  {static} +Color fordGray
  {static} +Color gray68
  {static} +Color gray81
  {static} +Color silverGray
  {static} +Color gainsboro
  {static} +Color gray88
  {static} +Color gray89
  {static} +Color mystic
  {static} +Color powderWhite
  {static} +Color approxSolitude
  {static} +Color gray85
  {static} +Color lightBlue
  {static} +Color ghostWhite
  {static} +Color ghostWhiteV2
  {static} +Color approxGhostWhite
  {static} +Color whiteSmoke
  {static} +Color lemonBackground
  {static} +Color white
  {static} +Color lightRed
  {static} +Color lemonNew
  {static} +Color alizarin
  {static} +Color lightBlack
  {static} +Color lightwhite
  {static} +Color azureRadiance
  {static} +Color slBlueLight
  {static} +Color cylindrical
  {static} +Color lightshadeRed
  {static} +Color darkyellow
  {static} +Color paleyellow
  {static} +Color azureradiance
  {static} +Color darkgreen
  {static} +Color lightgreen
  {static} +Color lightred
  {static} +Color darkred
  {static} +Color gray87
  {static} +Color mediumlightshadeRed
  {static} +Color lightbackground
  {static} +Color darkpowderblue
  {static} +Color jordyblue
  {static} +Color palegreen
  {static} +Color grey92
  {static} +Color grey91
  {static} +Color greenborder
  {static} +Color gray59
  {static} +Color gray20
  {static} +Color gray77
  {static} +Color emeraldgreen
  {static} +Color supernova
  {static} +Color expirdcolor
  {static} +Color middlegreenyellow
  {static} +Color approxred
  {static} +Color lightshadegray
  {static} +Color lightcyan
  {static} +Color limegreen
  {static} +Color processgray
  {static} +Color carrotBg
  {static} +Color updatebackground
  {static} +Color silver
  {static} +Color carrotLighter
  {static} +Color carrot
  {static} +Color carrotDark
  {static} +Color tomatoLightest
  {static} +Color tomatoBackground
  {static} +Color yellowDark
  {static} +Color yellowLight
  {static} +Color green
  {static} +Color grayLight1
  {static} +Color grayLight2
  {static} +Color grayLight3
  {static} +Color red
  {static} +Color lightMystic
  {static} +Color greenNew
  {static} +Color greenBg
  {static} +Color lightGreenBg
  {static} +Color lightGrayBg
  {static} +Color scratchBG
  {static} +Color swamp
  {static} +Color gainboro
  {static} +Color matterHorn
  {static} +Color greenTextColor
  {static} +Color clearDay
  {static} +Color gossamer
  {static} +Color black1
  {static} +Color viridian
  {static} +Color greenOff
  {static} +Color deepRed
  {static} +Color deepOrange
  {static} +Color snow
  {static} +Color lightTomato
  {static} +Color lightGrey
  {static} +Color smokedWhite
  {static} +Color lemon
  {static} +Color lightCarrot
  {static} +Color darkCarrot
  {static} +Color lightGreen
  {static} +Color lemonLight
  {static} +Color lemonLighter
  {static} +Color carrotAccent
  {static} +Color lemonDark
  {static} +Color carrotDarkNew
  {static} +Color lightBlueThick
  {static} +Color blueDark
  {static} +String kol_1
  {static} +String kol_2
  {static} +String kol_3
  {static} +String kol_4
  {static} +String kol_5
}

"skorlife::constants::colors.dart::AppColors" o-- "dart::ui::Color"

class "skorlife::constants::image_constant.dart::ImageConstant" {
  {static} +String imagePath
  {static} +String imgLogodark1
  {static} +String test
  {static} +String imgIconeditOnprimary
  {static} +String imgFrame1321315465
  {static} +String imgProfile
  {static} +String imgIconcross
  {static} +String imgIconcheck
  {static} +String imgArrowright
  {static} +String imgContents
  {static} +String imgImage637
  {static} +String imgIconcreditcard
  {static} +String imgTelevision
  {static} +String imgIcon16
  {static} +String imgArrowdown
  {static} +String imgSegment
  {static} +String imgGroup48095841
  {static} +String imgIconIncrease
  {static} +String imgEllipse276
  {static} +String imgEllipse274
  {static} +String imgEllipse272
  {static} +String imgEllipse275
  {static} +String imgEllipse273
  {static} +String imgVector
  {static} +String imgFolder
  {static} +String imgVectorBlack900
  {static} +String imgGroup1
  {static} +String imgIconpiechart
  {static} +String imgTrash
  {static} +String imgIconcar
  {static} +String imgIconhouse
  {static} +String imgIconmoney
  {static} +String imgIconotheraccount
  {static} +String imgIconcollection
  {static} +String imgIconverified
  {static} +String imgIconRate
  {static} +String imgShare
  {static} +String imgArrowleft
  {static} +String imageNotFound
  {static} +String imgArrowleftGray900
  {static} +String imgIconinfo
  {static} +String imgCheckmark
  {static} +String imgArrowup
  {static} +String imgIconAdd
  {static} +String imgConfettiforthe
  {static} +String img_vector_check
  {static} +String imgIconedit
  {static} +String imgHome
  {static} +String arrowbtn
}

class "skorlife::constants::internet_connectivity.dart::MyConnectivity" {
  {static} -MyConnectivity _instance
  +Connectivity connectivity
  +StreamController<dynamic> controller
  {static} +MyConnectivity instance
  +Stream<dynamic> myStream
  +void initialise()
  +void checkStatus()
  +void disposeStream()
}

"skorlife::constants::internet_connectivity.dart::MyConnectivity" o-- "skorlife::constants::internet_connectivity.dart::MyConnectivity"
"skorlife::constants::internet_connectivity.dart::MyConnectivity" o-- "connectivity_plus::connectivity_plus.dart::Connectivity"
"skorlife::constants::internet_connectivity.dart::MyConnectivity" o-- "dart::async::StreamController<dynamic>"
"skorlife::constants::internet_connectivity.dart::MyConnectivity" o-- "dart::async::Stream<dynamic>"

class "skorlife::constants::language.dart::Language" {
  {static} +String lngLandingCard1Title
  {static} +String lngLandingCard1Subtitle
  {static} +String lngLandingCard2Title
  {static} +String lngLandingCard2Subtitle
  {static} +String lngLandingCard3Title
  {static} +String lngLandingCard3Subtitle
  {static} +String lngPin
  {static} +String lngInsert
  {static} +String lngToCreateYourPin
  {static} +String lngEnterPin
  {static} +String lngEnterThePin
  {static} +String lngEnter6DigitPin
  {static} +String lngForgotPinBtn
  {static} +String lngForgetResetPin
  {static} +String lngNoDataAvailable
  {static} +String lngWrongPinMsg
  {static} +String lngSetAndSeeScore
  {static} +String lngNumberShouldActive
  {static} +String lngEnterPhoneNumber
  {static} +String lngInvalidNumberMsg
  {static} +String lngInvalidPhoneNumber
  {static} +String lngPhoneNumberValidationError
  {static} +String lngPhoneAlreadySelected
  {static} +String lngTAndCStartMsg
  {static} +String lngTermsOfService
  {static} +String lngAnd
  {static} +String lngWhatYouCan
  {static} +String lngWhatsGood
  {static} +String lngTermText
  {static} +String lngPrivacyPolicy
  {static} +String lngCreditScoreBroughtBy
  {static} +String lngCreatePin
  {static} +String lngCreateSkorlifeAccount
  {static} +String lngRepeatPin
  {static} +String lngPinNotMatch
  {static} +String lngCreateNewPin
  {static} +String lngConfirmNewPin
  {static} +String lngPinDoesntMatch
  {static} +String lngForgotPin
  {static} +String lngConfirmPhone
  {static} +String lngCodeVerification
  {static} +String lngCompleteVerificationProcess
  {static} +String lngEnterVerificationCodePart1
  {static} +String lngEnterVerificationCodePart2
  {static} +String lngEnterVerificationCode
  {static} +String lngVerificationCode
  {static} +String lngResendCode
  {static} +String lngResendLink
  {static} +String lngChangeNumber
  {static} +String lngLinkNotReceived
  {static} +String lngHaveNotReceivedYet1
  {static} +String lngHaveNotReceivedYet2
  {static} +String lngHaveNotReceivedYet3
  {static} +String lngSendCodeByWhatsapp
  {static} +String lngSendCodeBySMS
  {static} +String lngSendCodeAgain
  {static} +String lngRecommendedToSendCode
  {static} +String lngResendCodeIn
  {static} +String lngEKTPPhotoCondition
  {static} +String lngEKTPMatchIdentity
  {static} +String lngEKTPDataClearlyVisible
  {static} +String lngNotBlurry
  {static} +String lngPhotoAndNIKNotClear
  {static} +String lngNIK
  {static} +String lngFirstName
  {static} +String lngLastName
  {static} +String lngDOB
  {static} +String lngGender
  {static} +String lngEmail
  {static} +String lngE_mail
  {static} +String lngDescribeYourself
  {static} +String lngConnectEmail
  {static} +String lngTranslateToBahasa
  {static} +String lngTranslateToEnglish
  {static} +String lngConnectEmailEnglish
  {static} +String lngAddress
  {static} +String lngFullAddress
  {static} +String lngAccordanceWithEKTP
  {static} +String lngKTPFAQsTitle
  {static} +String lngVillage
  {static} +String lngSubDistric
  {static} +String lngZipCode
  {static} +String lngEmailPlaceholder
  {static} +String lngZipCodePlaceholder
  {static} +String lngInvalidEmailMsg
  {static} +String lngSelfieCondition
  {static} +String lngNoMask
  {static} +String lngNoHatHelmet
  {static} +String lngClearFaceWellLit
  {static} +String lngAlreadyAppropriate
  {static} +String lngKTPSkorkuInfoText
  {static} +String lngNotSuitable
  {static} +String lngConfirmData
  {static} +String lngPhoto
  {static} +String lngEKTP
  {static} +String lngRetakePhoto
  {static} +String lngSelfie
  {static} +String lngSuccessfullyVerified
  {static} +String lngFotoUlang
  {static} +String lngMinScoreLimit
  {static} +String lngMaxScoreLimit
  {static} +String lngNoLastName
  {static} +String lngInfluence
  {static} +String lngScoreStatus
  {static} +String lngLatePayment
  {static} +String lngInArrears
  {static} +String lngOnTimePayment
  {static} +String lngOnTimePaymentEmiCalendar
  {static} +String lngprofil
  {static} +String lngPersonalInformation
  {static} +String lngProfileNik
  {static} +String lngDateOfBirth
  {static} +String lngPlaceOfBirth
  {static} +String lngProfileGender
  {static} +String lngCompleteAddress
  {static} +String lngMyAccount
  {static} +String lngMobilePhoneNumber
  {static} +String lngEmailAddress
  {static} +String lngArrangement
  {static} +String lngChangeMobileNumber
  {static} +String lngChangeEmailAddress
  {static} +String lngGetOut
  {static} +String lngShareInformation
  {static} +String lngShareInformationWithFriend
  {static} +String lngTwitter
  {static} +String lngWhatsApp
  {static} +String lngFacebook
  {static} +String lngTelegram
  {static} +String lngInstagram
  {static} +String lngLine
  {static} +String lngReddit
  {static} +String lngDetailScore
  {static} +String lngClickCreditScroe
  {static} +String lngCreditScroe
  {static} +String lngCollectabilityScore
  {static} +String lngViewScoreStatus
  {static} +String lngViewScoreStatusKredit
  {static} +String lngBIChecking
  {static} +String lngCreditFactor
  {static} +String lngCategory
  {static} +String lngHelp
  {static} +String lngProfileDelete
  {static} +String lngProfileHelp
  {static} +String lngFacingAnIssue
  {static} +String lngGiveReason
  {static} +String lngAccessCreditProfile
  {static} +String lngStepProgressPageDesc
  {static} +String lngAttention
  {static} +String lngWarningMessage
  {static} +String lngWriteComment
  {static} +String lngWriteHereError
  {static} +String lngWriteHere
  {static} +String lngMax50Char
  {static} +String lngMin6Char
  {static} +String lngMin10Char
  {static} +String lngConfirmSentIssue
  {static} +String lngSubmit
  {static} +String lngKycConsentButtonText
  {static} +String lngTicketSubmit
  {static} +String lngSecurity
  {static} +String lngCheckOurPrivacyPolicy
  {static} +String lngRemoveMyAccount
  {static} +String lngRating
  {static} +String lngCreditScoreStatus
  {static} +String lngCreditScoreMessage
  {static} +String lngAccountDetail
  {static} +String lngIncompleteCreditAccount
  {static} +String lngAccounts
  {static} +String lngPaymentHistory
  {static} +String lngPaymentHistory1
  {static} +String lngPayment
  {static} +String lngTime
  {static} +String lngStartDate
  {static} +String lngCompletionDate
  {static} +String lngDueDate
  {static} +String lngDelay
  {static} +String lngPaidOntime
  {static} +String lngCreditUsage
  {static} +String lngPaymentProgress
  {static} +String lngContinue
  {static} +String lngKTPContinue
  {static} +String lngContinueVerification
  {static} +String lngLevel1Of4
  {static} +String lngLevel2Of4
  {static} +String lngLevel3Of4
  {static} +String lngLevel4Of4
  {static} +String lngTakePhoto
  {static} +String lngPersonalIdentity
  {static} +String lngplaceOfBirth
  {static} +String lngFotoSelfie
  {static} +String lngPhotoEKTP
  {static} +String lngVerification
  {static} +String lngPhotoAndNIKClear
  {static} +String lngRegister
  {static} +String lngRegisterLandingPage
  {static} +String lngLogin
  {static} +String lngSomethingWentWrong
  {static} +String lngCreditFactorTitle
  {static} +String lngPhoneNumberVerification
  {static} +String lngCheckWhatsAppTitle
  {static} +String lngCheckWhatsAppDesc_1
  {static} +String lngCheckWhatsAppDesc_2
  {static} +String lngProvinsi
  {static} +String lngCity
  {static} +String lngPhoneNumber
  {static} +String lngIsRequired
  {static} +String lngNeedToPay
  {static} +String lngRemainingLoan
  {static} +String lngAmountApproved
  {static} +String lngIssuedOn
  {static} +String lngTenor
  {static} +String lngAccountType
  {static} +String lngLoanType
  {static} +String lngAccountAge
  {static} +String lngMixedCredit
  {static} +String lngCreditScoreFrom
  {static} +String lngUpdateScore
  {static} +String lngAccountList
  {static} +String lngAccountListSubtitle
  {static} +String lngMatchYourCreditCart
  {static} +String lngConfirmPersonalData
  {static} +String lngMakeSureDataIsCorrect
  {static} +String lngConsentForUse
  {static} +String lngToProcessCreditReport
  {static} +String lngToVerifyYourDataAccess
  {static} +String lngLoanApproval
  {static} +String lngCanUsedAccountList
  {static} +String lngPast90DaysAccounts
  {static} +String lngGuaranteedAccount
  {static} +String lngUnsecuredAccount
  {static} +String lngInActiveAccount
  {static} +String lngArticle
  {static} +String lngArticlePilihan
  {static} +String lngConjugative
  {static} +String lngAllAccounts
  {static} +String lngKol1To5
  {static} +String lngScoreCreditRangeStartText
  {static} +String lngCloseGraphics
  {static} +String lngViewGraphics
  {static} +String lngFirstCreditAccount
  {static} +String lngStep1Title
  {static} +String lngStep1Desc
  {static} +String lngStep2Title
  {static} +String lngStep2Desc
  {static} +String lngStep3Title
  {static} +String lngStep3Desc
  {static} +String lngDisputeConsentText
  {static} +String lngCongested
  {static} +Function lngScoreBetterThan
  {static} +Function lngRefreshScoreDays
  {static} +String lngYear
  {static} +String lngLoginAgain
  {static} +String lngReasonForUnavailability
  {static} +String lngReasonForUnavailabilityDesc
  {static} +String lngRetryBtn
  {static} +String lngNoCreditHistory
  {static} +String lngRegisteredAndSupervisedBy
  {static} +String lngExtractCardDetailError
  {static} +String lngLongestAccount
  {static} +String lngScoreTooltip
  {static} +String lngToKnowMore
  {static} +String lngNoticedAnError
  {static} +String lngNoticedAnErrorTitle
  {static} +String lngNoticedAnErrorBtnText
  {static} +String lngShareTitle
  {static} +String lngShareBtnText
  {static} +String lngInCasaeAnyError
  {static} +String lngInraiseaQuery
  {static} +String lngWithUs
  {static} +String internetDown
  {static} +String lngNikNUmber
  {static} +String lngPhoneNumberError
  {static} +String lngFullNameAsPErKTP
  {static} +String lngAnyProof
  {static} +String lngThankyouForKyc
  {static} +String lngThisVerificationTakes
  {static} +String lngWillNotifyYou
  {static} +String lngNameSuggestion
  {static} +String lngNameSuggestionstep1
  {static} +String lngNameSuggestionstep2
  {static} +String lngNameSuggestionstep3
  {static} +String lngNameSuggestionstep4
  {static} +String lngNameSuggestionstep5
  {static} +String lngSurename
  {static} +String lngNameSuggestionstep6
  {static} +String lngSurenameStep2
  {static} +String lngThinkName
  {static} +String lngRegisteredAndSecure
  {static} +String lngSecuredBy
  {static} +String lngSecuredBy2
  {static} +String lngSignInWithoutRegister
  {static} +String lngNumberIsnot9To12
  {static} +String lngThereis
  {static} +String lngOTPAttempts
  {static} +String lngVerifyYourIdentity
  {static} +String lngPhotoWithCondition
  {static} +String lngOTPAttemptsExpired
  {static} +String lngKycPage1Description
  {static} +String lngKycPage1Description2
  {static} +String lngKycPage1Verification1
  {static} +String lngKycPage1Verification2
  {static} +String lngKycPage1Verification3
  {static} +String lngKycPage1VerificationSubtitle
  {static} +String lngKtp1
  {static} +String lngKycPageDescription
  {static} +String lngSelfieheading
  {static} +String kta
  {static} +String auto
  {static} +String home
  {static} +String other
  {static} +String collection
  {static} +String cc
  {static} +String moreDetails
  {static} +String biScoreIsChekcing
  {static} +String missedPayment
  {static} +String permissionHeader
  {static} +String locationPermissionHeader
  {static} +String locationPermissionSettings
  {static} +String locationPermissionBtnTxt
  {static} +String permissionCamera
  {static} +String permissionStorage
  {static} +String permissionSettings
  {static} +String lngEnterManually
  {static} +String lngReTake
  {static} +String lngNoticedError
  {static} +String lngKycFailed
  {static} +String retakeselfiewrong
  {static} +String retakeselfiecorrect
  {static} +String serverresponserarsingerror
  {static} +String exceptionResponseError
  {static} +String lngKycTAndCStartMsg
  {static} +String lngKycTandC
  {static} +String lngKycDigital
  {static} +String lngKycAnd
  {static} +String lngKycTandCEndMsg
  {static} +String lngKycMaintenanceTitleExistingUser
  {static} +String lngMoreThanNumberOfUsers
  {static} +String lngKycMaintenanceDescExistingUser
  {static} +String lngKycMaintenanceButtonText
  {static} +String lngKycMaintenanceTitleNewUser
  {static} +String lngKycMaintenanceTitleNewUserDesc
  {static} +String lngKycMaintenanceDescNewUser
  {static} +String lngSegmentationInfo
  {static} +String lngSegmentScratchText
  {static} +String lngSegmentSuccessTitle
  {static} +String lngRegistrationApprovedTitle
  {static} +String lngRegistrationApprovedDesc_1
  {static} +String lngRegistrationApprovedDesc_2
  {static} +String lngRegistrationApprovedBtnText
  {static} +String lngSegmentSuccessDesc
  {static} +String lngKtpTitle1
  {static} +String lngKtpTitle2
  {static} +String lngKtpTitle3
  {static} +String lngKtpTitle4
  {static} +String lngScoreCredit
  {static} +String lngKtpMessage1
  {static} +String lngKtpMessageMaxFileSizeError
  {static} +String lngUnreadableKTP
  {static} +String lngSystemCrashes
  {static} +String lngIncorrectIDPhoto
  {static} +String lngIDCardPhoto
  {static} +String lngGotMoveOn
  {static} +String lngWhyKtpNeeded
  {static} +String lngRegisteredID
  {static} +String lngAnotherIDPhoto
  {static} +String lngPhotoIDcardAgain
  {static} +String lngKtpMessage2
  {static} +String lngNikErrorMessage
  {static} +String lngLainnya
  {static} +String lngResetPin
  {static} +String lngNoActiveAccounts
  {static} +String lngNoInActiveAccounts
  {static} +String lngOtpNotSame
  {static} +String lngOtpNotMatch
  {static} +String overview
  {static} +String paylater
  {static} +String lngWriteYourComment
  {static} +String lngAllAcoountsListed
  {static} +String lngAcoountCreditDetails
  {static} +String lngAcoountCreditDetailsNoDiAtas
  {static} +String lngAllAcoountsListedUserConfirmAskText
  {static} +String lngAllDisputeAcoountsListedUserConfirmAskText
  {static} +String lngKycSuccess
  {static} +String lngYes
  {static} +String lngNo
  {static} +String lngYa
  {static} +String lngTidak
  {static} +String lngClickHere
  {static} +String lngHere
  {static} +String lngDispute
  {static} +String lngMobileVerificationDone
  {static} +String lngKtpVerificationDone
  {static} +String lngSelfieVerificationDone
  {static} +String lngErrorClickedYesFirst
  {static} +String lngKlik
  {static} +String lngErrorClickedYesLast
  {static} +String lngErrorClickedYesLast1
  {static} +String lngTryAgain
  {static} +String lngTryagain
  {static} +String lngBack
  {static} +String lngPdfJpeg
  {static} +String lngMaxFileSize
  {static} +String lngMax3Files
  {static} +String lngOFHBS
  {static} +String lngAttachOldKtp
  {static} +String lngSearchTitleOrTicket
  {static} +String lngTickets
  {static} +String lngMoreDetails
  {static} +String lngNotifications
  {static} +String lngLatest
  {static} +String lngPreviously
  {static} +String lngDataSharingWillBeStopped
  {static} +String lngHereText
  {static} +String lngDontShare
  {static} +String lngShare
  {static} +String lngTapToSelect
  {static} +String lngCorrect
  {static} +String lngIncorrect
  {static} +String lngAttachmentSuccess
  {static} +String lngDisputeHeading806
  {static} +String lngRaiseDisputeTitle
  {static} +String lngRaiseDisputeMessage
  {static} +String lngRaiseDisputeMessageCLIK
  {static} +String createReminder
  {static} +String updateReminder
  {static} +String updateReminderBtn
  {static} +String selectBillGenerateDate
  {static} +String selectRemindDate
  {static} +String lngTotalAc
  {static} +String lngConsentEmailInfoText
  {static} +String lngConsentText1
  {static} +String lngConsentTandC1
  {static} +String lngConsentDS
  {static} +String lngConsentTandC2Click
  {static} +String lngConsentTandC3Click
  {static} +String lngConsentTandC4Click
  {static} +String lngConsentTandC5
  {static} +String kycErrorTitle0
  {static} +String kycErrorDesc0
  {static} +String kycErrorTitle1
  {static} +String kycErrorEmailTimeOut
  {static} +String kycErrorDesc1
  {static} +String kycErrorTitle2
  {static} +String kycErrorDesc2
  {static} +String kycEmailCredHead2
  {static} +String kycLoadingDialogText
  {static} +String lngEmailView
  {static} +String lngChangePassword
  {static} +String lngProceedEmailCred
  {static} +String lngDisclaimerTitle
  {static} +String lngDisclaimerRefreshAvailTitle
  {static} +String lngDisclaimerDesc1
  {static} +String lngDisclaimerDesc2
  {static} +String lngDisclaimerDesc3
  {static} +String lngAccessEmail
  {static} +String lngCustomEmail
  {static} +String lngCreateCustomEmail
  {static} +String lngECHead
  {static} +String lngUrl
  {static} +String lngPassword
  {static} +String lngRecommendedPassword
  {static} +String lngConfirmPassword
  {static} +String lngEmailSecure
  {static} +String lngEmailSecure2
  {static} +String lngUnderstand
  {static} +String lngConfirmChangePassword
  {static} +String lngGmailAlreadyRegistered
  {static} +String lngGmailAlreadyRegisteredEnglish
  {static} +String later
  {static} +String exitOnboarding
  {static} +String lngMore
  {static} +String disputeConsentTitle
  {static} +String clikConsentHead
  {static} +String clikConsentText_1
  {static} +String clikConsentText_1a
  {static} +String clikConsentText_1b
  {static} +String clikConsentText_2
  {static} +String clikConsentTandC
  {static} +String lngAttachYourFileHere
  {static} +String lngAttachment
  {static} +String lngTicketProgress
  {static} +String lngHadOldID
  {static} +String lngDidYouApply
  {static} +String lngStateBanksAndFinance
  {static} +String lngWhatCreditsAreMissing
  {static} +String lngAccountNumbers
  {static} +String lngListOfAccountsOrFI
  {static} +String lngLimtExceed
  {static} +String lngInbox2
  {static} +String lngOk
  {static} +String lngname
  {static} +String lngFileSizeError
  {static} +String lngLetUsKnow
  {static} +String lngRaiseATicket
  {static} +String lngSkorshare
  {static} +String lngIncoming
  {static} +String lngOutgoing
  {static} +String lngIncomingRequest
  {static} +String lngIncomingText
  {static} +String lngIncomingButtonText
  {static} +String lngOutgoingRequest
  {static} +String lngOutgoingText
  {static} +String lngOutgoingButtonText
  {static} +String lngSendrequest
  {static} +String lngSearchText
  {static} +String lngSearchName
  {static} +String lngSendRequestButtonText
  {static} +String lngAllRequestSent
  {static} +String lngSuccessfullyRequested
  {static} +String lngDisconnect
  {static} +String lngApprove
  {static} +String lngapprovetext
  {static} +String lngdisconnecttext
  {static} +String lngTicketRaised1
  {static} +String lngTicketRaised2
  {static} +String lngResolution
  {static} +String lngRequestingToShareDataStartText
  {static} +String lngRequestingToShareDataEndText
  {static} +String lngSkorlife
  {static} +String lngUpdateInfo
  {static} +String lngTulls
  {static} +String lngSimpan
  {static} +String lngProfileBackText
  {static} +String lngProfileBackConfirmYesText
  {static} +String lngProfileBackConfirmNoText
  {static} +String lngwarningtext
  {static} +String lngkycDashboardText3
  {static} +String lngkycDashboardText2
  {static} +String lngkycDashboardButton
  {static} +String lngkycDashboardTitle
  {static} +String lngInbox
  {static} +String lngcontacts
  {static} +String lngRefresh
  {static} +String lngincomingButton
  {static} +String lngoutgoingButton
  {static} +String lngSelectQuery
  {static} +String lngSelectAccountType
  {static} +String lngLevel1Of3
  {static} +String lngLevel2Of3
  {static} +String lngLevel3Of3
  {static} +String lngproblemtext
  {static} +String lngproblembutton
  {static} +String lngkyctickitname
  {static} +String lngKycFAQtext
  {static} +String lngkycDashboardText1
  {static} +String lngdashErrorBtmText
  {static} +String lngdashErrorBtmActionText
  {static} +String lngalreadyLogin
  {static} +String lngLoginText
  {static} +String lngresetPhone
  {static} +String lngregisteredPhone
  {static} +String lngreplecementText
  {static} +String lngreplecementNumber
  {static} +String lngotpverification
  {static} +String lngphoneverification
  {static} +String lngnubmerSuccessText
  {static} +String lngnubmerSuccessInfo1
  {static} +String lngnubmerSuccessInfo2
  {static} +String lngnumberSuccessBtn
  {static} +String lngRegisterText
  {static} +String lngLoginPageText
  {static} +String lngnumbeVerification
  {static} +String lngSuccessText
  {static} +String lngInfoCollapseText
  {static} +String lngProcessText
  {static} +String lngVerifyTitle
  {static} +String lngotptext
  {static} +String lngRaiseDisputeHead
  {static} +String lngRaiseDisputeBtnText
  {static} +String lngappUpdateTitle
  {static} +String lngappUpdateDescription
  {static} +String lngremindLater
  {static} +String lngDownload
  {static} +String lngDownloading
  {static} +String lngInstall
  {static} +String lngTotalLoan
  {static} +String lngLoanAmount
  {static} +String lngBalanceAmount
  {static} +String lngkamu
  {static} +String lng803Head1
  {static} +String lng803Head2
  {static} +String lng803Title
  {static} +String lng803Description
  {static} +String lng804Head1
  {static} +String lng804Head2
  {static} +String lng804Title
  {static} +String lng804Description
  {static} +String lng805Head1
  {static} +String lng805Head2
  {static} +String lng805Title
  {static} +String lng805Description
  {static} +String lng806Head1
  {static} +String lng806Head2
  {static} +String lng806Title
  {static} +String lng806Description
  {static} +String lng807Head1
  {static} +String lng807Head2
  {static} +String lng807Title
  {static} +String lng807Description
  {static} +String lng808Head1
  {static} +String lng808Head2
  {static} +String lng808Title
  {static} +String lng808Description
  {static} +String lng809Head1
  {static} +String lng809Head2
  {static} +String lng809Title
  {static} +String lng809Description
  {static} +String lng810Head1
  {static} +String lng810Head2
  {static} +String lng810Title
  {static} +String lng810Description
  {static} +String lng811Head1
  {static} +String lng811Head2
  {static} +String lng811Title
  {static} +String lng811Description
  {static} +String lng812Head1
  {static} +String lng812Head2
  {static} +String lng812Title
  {static} +String lng812Description
  {static} +String lng814Head1
  {static} +String lng814Head2
  {static} +String lng814Title
  {static} +String lng814Description
  {static} +String lng815Head1
  {static} +String lng815Head2
  {static} +String lng815Title
  {static} +String lng815Description
  {static} +String lng816Head1
  {static} +String lng816Head2
  {static} +String lng816Title
  {static} +String lng816Description
  {static} +String lng817Head1
  {static} +String lng817Head2
  {static} +String lng817Title
  {static} +String lng817Description
  {static} +String lng818Head1
  {static} +String lng818Head2
  {static} +String lng818Title
  {static} +String lng818Description
  {static} +String lngDisputeHeading
  {static} +String lngDisputeHeadingGeneral
  {static} +String lngDisputeDescription
  {static} +String lngDisputeDescriptionGeneral
  {static} +String lngGeneralDisputeHead1
  {static} +String lngGeneralDisputeHead2
  {static} +String lngGeneralDisputeDescription
  {static} +String lngDisputeAttachmentDirections
  {static} +String lngKtpOld
  {static} +String lngKtpNew
  {static} +String lngLoanInformation
  {static} +String lngLoanProof
  {static} +String lngAddMoreAttachment
  {static} +String lngAttachKTP
  {static} +String lngWriteReason
  {static} +String lngEnterEmail
  {static} +String lngNameOnKTP
  {static} +String lngConsentBtnText
  {static} +String lngGmailConnected
  {static} +String lngGmailDisConnected
  {static} +String lngGmailDisConnectedEnglish
  {static} +String lngWrongGmailConnected
  {static} +String lngWrongGmailConnectedEnglish
  {static} +String systemIssueTitle
  {static} +String systemIssueMessage
  {static} +String genericErrorMessage
  {static} +String scoreAPIDataErrorCode1
  {static} +String scoreAPIDataErrorCode2
  {static} +String scoreAPIDataErrorCode3
  {static} +String scoreAPIDataErrorCode4
  {static} +String scoreAPIDataErrorCode5
  {static} +String fileUploadErrorCode1
  {static} +String fileUploadErrorCode2
  {static} +String fileUploadErrorCode3
  {static} +String fileUploadErrorCode4
  {static} +String fileUploadErrorCode5
  {static} +String extractKTPImageDataEmailEmptyCode
  {static} +String lngCreditReportLoadingCard1Title
  {static} +String lngCreditReportLoadingCard1Desc
  {static} +String lngCreditReportLoadingCard1Footer
  {static} +String lngCreditReportLoadingCard1Progress
  {static} +String lngCreditReportLoadingCard2Title
  {static} +String lngCreditReportLoadingCard2Desc
  {static} +String lngCreditReportLoadingCard2Footer
  {static} +String lngCreditReportLoadingCard2Progress
  {static} +String lngCreditReportLoadingCard3Title
  {static} +String lngCreditReportLoadingCard3Desc
  {static} +String lngCreditReportLoadingCard3Footer
  {static} +String lngCreditReportLoadingCard3Progress
  {static} +String lngCreditReportLoadingCard4Title
  {static} +String lngCreditReportLoadingCard4Desc
  {static} +String lngCreditReportLoadingCard4Footer
  {static} +String lngCreditReportLoadingCard4Progress
  {static} +String lngCreditReportLoadingCard5Title
  {static} +String lngCreditReportLoadingCard5Desc
  {static} +String lngCreditReportLoadingCard5Footer
  {static} +String lngCreditReportLoadingCard5Progress
  {static} +String lngCreditReportLoadingCard6Title
  {static} +String lngCreditReportLoadingCard6Desc
  {static} +String lngCreditReportLoadingCard6Footer
  {static} +String lngCreditReportLoadingCard6Progress
  {static} +String lngCreditReportLoadingCard7Title
  {static} +String lngCreditReportLoadingCard7Desc
  {static} +String lngCreditReportLoadingCard7Footer
  {static} +String lngCreditReportLoadingCard7Progress
  {static} +String lngCreditReportLoadingCard8Title
  {static} +String lngCreditReportLoadingCard8Desc
  {static} +String lngCreditReportLoadingCard8Footer
  {static} +String lngCreditReportLoadingCard8Progress
  {static} +String lngCreditReportLoadingSearchProgressText
  {static} +String lngCreditReportLoadingDownloadingProgressText
  {static} +String lngSelfiePicture
  {static} +String lngKtpPhoto
  {static} +String lngIdentityCheck
  {static} +String lngDigitalSignature
  {static} +String lngTimeOutTitle
  {static} +String lngTimeOutDesc
  {static} +String lngCreditReportDownloadTimeOutTitle
  {static} +String lngCreditReportDownloadTimeOutDesc
  {static} +String lngEmailHead1
  {static} +String lngEmailTandC
  {static} +String lngCreditReportMultiHitText
  {static} +String lngCreditReportMultiHitTextDesc
  {static} +String lngCreditReportNoHitText
  {static} +String lngCreditReportNoHitTextDesc
  {static} +String lngCreditReportErrorHitText
  {static} +String lngCreditReportErrorHitTextDesc
  {static} +String lngKtpCardVisibleText
  {static} +String lngUserRegistered
  {static} +String lngKtpGuide
  {static} +String lngUserRegisteredMessage
  {static} +String lngUserNot
  {static} +String lngChangePhnNumber
  {static} +String lngGmailText1Id
  {static} +String lngGmailText2Id
  {static} +String lngGmailText3Id
  {static} +String lngGmailText4Id
  {static} +String lngGmailText5Id
  {static} +String lngGmailText6Id
  {static} +String lngGmailText7Id
  {static} +String lngGmailText8Id
  {static} +String lngGmailText9Id
  {static} +String lngGmailText1En
  {static} +String lngGmailText2En
  {static} +String lngGmailText3En
  {static} +String lngGmailText4En
  {static} +String lngGmailText5En
  {static} +String lngGmailText6En
  {static} +String lngGmailText7En
  {static} +String lngGmailText8En
  {static} +String lngGmailText9En
  {static} +String lngConsentHead
  {static} +String lngConsentHead1
  {static} +String lngConsentCheckboxTitle
  {static} +String lngConsentCheckboxDescription
  {static} +String lngConsentDengan
  {static} +String lngConsentKetentuan
  {static} +String lngConsentDan
  {static} +String lngConsentKebijakan
  {static} +String emailConnected
  {static} +String emailConnectedEnglish
  {static} +String gmailAccess
  {static} +String removePermission
  {static} +String grantPermission
  {static} +String cancelPermissionTitle
  {static} +String requiredAccessPermission
  {static} +String gmailAccessPopTitle
  {static} +String gmailAccessPopTitleEnglish
  {static} +String gmailAccessPopText1
  {static} +String gmailAccessPopText1English
  {static} +String gmailAccessText1
  {static} +String gmailAccessText1English
  {static} +String gmailAccessText2
  {static} +String gmailAccessText3
  {static} +String gmailAccessText4
  {static} +String gmailAccessText4English
  {static} +String gmailAccessText4Bahasa
  {static} +String gmailRevokedTitle
  {static} +String connectGmailAccount
  {static} +String gmailBottomSheetTitle
  {static} +String lngUseAccess
  {static} +String lngUseAccess1
  {static} +String lngUseAccess2
  {static} +String lngUseAccess3
  {static} +String lngUseAccess4
  {static} +String lngDataSecurity
  {static} +String lngDataSecurity1
  {static} +String lngDataSecurity2
  {static} +String lngDataSecurity3
  {static} +String lngDataSecurity4
  {static} +String lngAccessCancel
  {static} +String lngAccessCancel1
  {static} +String lngAccessCancel2
  {static} +String lngAccessCancel3
  {static} +String lngAccessCancel4
  {static} +String lngAccessCancel5
  {static} +String lngAccessCancel6
  {static} +String lngAccessCancel7
  {static} +String lngAccessCancel8
  {static} +String lngSignOutAccount
  {static} +String lngLogOutAccount
  {static} +String signOutTerms1
  {static} +String signOutTerms2
  {static} +String signOutTerms3
  {static} +String lngYesGetOut
  {static} +String lngKTPFAQType1
  {static} +String lngKTPData
  {static} +String lngKTPFAQQuestion1
  {static} +String lngKTPFAQAnswer1
  {static} +String lngKTPFAQQuestion2
  {static} +String lngKTPFAQAnswer2
  {static} +String lngKTPFAQType2
  {static} +String lngKTPFAQQuestion3
  {static} +String lngKTPFAQAnswer3
  {static} +String lngKTPFAQQuestion4
  {static} +String lngKTPFAQAnswer4
  {static} +String lngKTPFAQQuestion6
  {static} +String lngKTPFAQAnswer6
  {static} +String lngKTPFAQQuestion7
  {static} +String lngKTPFAQAnswer7
  {static} +String lngKTPFAQQuestion8
  {static} +String lngKTPFAQPointAnswer8
  {static} +String lngKTPFAQPointAnswer8_2
  {static} +String lngKTPFAQPointAnswer8_2_link
  {static} +String lngKTPFAQPointAnswer8_3
  {static} +String lngKTPFAQPointAnswer8_4
  {static} +String lngKTPFAQPointAnswer8_4_text1
  {static} +String lngKTPFAQPointAnswer8_4_text2
  {static} +String lngAlreadyDone
  {static} +String lngVerificationSuccessful
  {static} +String lngElectronicCertIssued
  {static} +String lngElectronicCertIssuedDesc
  {static} +String lngKycConsentText
  {static} +String lngSafe
  {static} +String lngService
  {static} +String lngTotal
  {static} +String lngFreeCharge
  {static} +String lngKtpMessageAlert
  {static} +String lngClaimVoucher
  {static} +String lngVoucher
  {static} +String lngSubtotal
  {static} +String lngSuccessClaimed
  {static} +String lngInvite
  {static} +String lngCreditService
  {static} +String lngInitialCreditReport
  {static} +String lngVerificationIdentity
  {static} +String lngSpecialEmail
  {static} +String lngCreditReport
  {static} +String lngCurentLoanConditions
  {static} +String lngIncorrectData
  {static} +String lngMakeComplaint
  {static} +String lngMakeReport
  {static} +String lngLoanData
  {static} +String lngViewPaymentHistory
  {static} +String lngLoanDataQuestion1
  {static} +String lngLoanDataAns1Clik
  {static} +String lngLoanDataAns1CBI
  {static} +String lngLoanDataQuestion2
  {static} +String lngLoanDataAns2
  {static} +String lngLoanDataQuestion3
  {static} +String lngLoanDataAns3Clik
  {static} +String lngLoanDataAns3CBI
  {static} +String lngLoanDataQuestion4
  {static} +String lngLoanDataAns4Clik
  {static} +String lngLoanDataAns4CBI
  {static} +String lngReturnAccountBtnText
  {static} +String lngCreditComposition
  {static} +String lngRatngBtnText
  {static} +String lngCreditScoreAndCollectibilityStatusData
  {static} +String lngCreditScoreAndCollectibilityStatusDataQuestion1
  {static} +String lngCreditScoreAndCollectibilityStatusDataAns1
  {static} +String lngCreditScoreAndCollectibilityStatusDataQuestion2
  {static} +String lngCreditScoreAndCollectibilityStatusDataAns2
  {static} +String lngCreditScoreAndCollectibilityStatusDataQuestion3
  {static} +String lngCreditScoreAndCollectibilityStatusDataAns3
  {static} +String lngInfoNotFromCreditReport
  {static} +String lngRelatedOnlineLoans
  {static} +String lngNIKErrorDesc2
  {static} +String lngFinancialGoals
  {static} +String lngGoalPageText1
  {static} +String lngGoalPageText2
  {static} +String lngAddGoal
  {static} +String lngGoalPageText3
  {static} +String lngGoalPageText4
  {static} +String lngFurtherMore
  {static} +String lngTujuan
  {static} +String fileTypeErrorText
  {static} +dynamic lngIndicated()
  {static} +dynamic lngPayLaterLenderName()
  {static} +dynamic lngSelected()
}

class "skorlife::features::push_notification::push_notification_navigator_impl.dart::PushNotificationNavigatorImpl" {
  +void navigateToSkorcardFromPushNotif()
  +void navigateToPin()
}

"push_notification_view::push_notification_navigator.dart::PushNotificationNavigator" <|-- "skorlife::features::push_notification::push_notification_navigator_impl.dart::PushNotificationNavigatorImpl"

class "skorlife::features::core::local_storage::shared_local_storage_impl.dart::LocalStorageImplCore" {
  {static} +LocalStorageImplCore instance
  +Future<String?> getJwtKey()
  +Future<bool> storeFirebaseToken()
  +Future<String?> getData()
  +Future<bool> storeData()
  +Future<void> deleteData()
  +Future<String> getFirebaseToken()
  +Future<void> clear()
}

"skorlife::features::core::local_storage::shared_local_storage_impl.dart::LocalStorageImplCore" o-- "skorlife::features::core::local_storage::shared_local_storage_impl.dart::LocalStorageImplCore"
"shared::services::local_storage::shared_local_storage_service.dart::SharedLocalStorageService" <|-- "skorlife::features::core::local_storage::shared_local_storage_impl.dart::LocalStorageImplCore"

abstract class "skorlife::features::core::environment::dashboard_environment_service.dart::DashboardEnvironmentService" {
  +Future<bool> isRefreshFeatureEnabled()
  +Future<File> getShareImageFile()
  +Future<RefreshPrice> getRefreshPrice()
}

class "skorlife::features::core::environment::dashboard_environment_service.dart::RefreshPrice" {
  +String price
  +String full_price
  +String productId
}

class "skorlife::features::core::environment::dashboard_environment_service_impl.dart::DashboardEnvironmentServiceImpl" {
  +GlobalShareLinkService service
  +Posthog postHogAnalytics
  +Future<bool> isRefreshFeatureEnabled()
  +String getPlatformDescriptor()
  +Future<File> getShareImageFile()
  +Future<Object?> getFeatureFlags()
  +Future<RefreshPrice> getRefreshPrice()
}

"skorlife::features::core::environment::dashboard_environment_service_impl.dart::DashboardEnvironmentServiceImpl" o-- "shared::widgets::services::global_share_link_api::share_link_fetcher_service.dart::GlobalShareLinkService"
"skorlife::features::core::environment::dashboard_environment_service_impl.dart::DashboardEnvironmentServiceImpl" o-- "posthog_flutter::src::posthog.dart::Posthog"
"skorlife::features::core::environment::dashboard_environment_service.dart::DashboardEnvironmentService" <|-- "skorlife::features::core::environment::dashboard_environment_service_impl.dart::DashboardEnvironmentServiceImpl"

class "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore" {
  {static} +I18nCore instance
  +AppFlutterI18nDelegate delegate
  +Future<void> load()
  +Widget Function(BuildContext, Widget?) createBuilder()
  +Iterable<LocalizationsDelegate<dynamic>> createLocalizationDelegate()
  +String getTranslation()
  +String getTranslationWithNamespace()
}

"skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore" o-- "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore"
"skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore" o-- "skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate"
"skorlife::features::core::i18n::i18n_service.dart::I18nService" <|-- "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore"
"shared::services::i18n::shared_i18n_service.dart::SharedI18nService" <|-- "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore"
"upload_bank_statement::modules::shared::i18n::upload_bank_statement_i18n.dart::UploadBankStatementi18nService" <|-- "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore"
"dispute_flow_data::modules::shared::i18n::dispute_flow_i18n_service.dart::DisputeFlowI18nService" <|-- "skorlife::features::core::i18n::i18n_service_impl.dart::I18nCore"

class "skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate" {
  {static} -FlutterI18n? _translationObject
  +Locale? currentLocale
  +List<String> modules
  +void Function(String, Locale?)? missingTranslationHandler
  +String keySeparator
  +bool isSupported()
  +Future<FlutterI18n> load()
  +bool shouldReload()
}

"skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate" o-- "flutter_i18n::flutter_i18n.dart::FlutterI18n"
"skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate" o-- "dart::ui::Locale"
"skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate" o-- "flutter_i18n::flutter_i18n.dart::void Function(String, Locale)"
"flutter_i18n::flutter_i18n_delegate.dart::FlutterI18nDelegate" <|-- "skorlife::features::core::i18n::app_i18n_delegate.dart::AppFlutterI18nDelegate"

abstract class "skorlife::features::core::i18n::i18n_service.dart::I18nService" {
  +Future<void> load()
  +Widget Function(BuildContext, Widget?) createBuilder()
  +Iterable<LocalizationsDelegate<dynamic>> createLocalizationDelegate()
  +String getTranslation()
  +String getTranslationWithNamespace()
}

class "skorlife::features::core::file_picker::file_picker_service_impl.dart::FilePickerCore" {
  {static} +FilePickerCore instance
  -Future<String?> _getInitialPath()
  +Future<File?> pickFileWithExtension()
  +Future<File?> pickFile()
  +Future<FileData?> pickFileWithLimitWithExtension()
}

"skorlife::features::core::file_picker::file_picker_service_impl.dart::FilePickerCore" o-- "skorlife::features::core::file_picker::file_picker_service_impl.dart::FilePickerCore"
"dispute_flow_data::modules::shared::file_picker::file_picker_service.dart::DisputeFlowFilePickerService" <|-- "skorlife::features::core::file_picker::file_picker_service_impl.dart::FilePickerCore"
"upload_bank_statement::features::core::file_picker_service.dart::FilePickerService" <|-- "skorlife::features::core::file_picker::file_picker_service_impl.dart::FilePickerCore"

class "skorlife::features::screen_tracker_service::screen_tracker_service_impl.dart::ScreenTrackerServiceImpl" {
  +ErrorLoggingService logger
  +Smartlook smartlookInstance
  +bool started
  +Future<int> getAppVersionCode()
  +Future<String?> getMobileNumber()
  +Future<String?> getBuildNumber()
  +Future<String?> getSmartLookApiKeyFromRemoteConfig()
  +Future<void> startRecording()
  -Future<bool> _isConfigAllowedToRecordScreen()
  +Future<bool> isScreenTrackerAvailableForScreen()
  +Future<void> stopRecording()
  +Future<bool> isScreenTrackerNeedsToStop()
  +Future<bool> initializeWithProjectKey()
}

"skorlife::features::screen_tracker_service::screen_tracker_service_impl.dart::ScreenTrackerServiceImpl" o-- "shared::services::error_logging::error_logging_service.dart::ErrorLoggingService"
"skorlife::features::screen_tracker_service::screen_tracker_service_impl.dart::ScreenTrackerServiceImpl" o-- "flutter_smartlook::src::smartlook.dart::Smartlook"
"shared::services::tracker::screen_tracker_service.dart::ScreenTrackerService" <|-- "skorlife::features::screen_tracker_service::screen_tracker_service_impl.dart::ScreenTrackerServiceImpl"

class "skorlife::features::deeplink_service::deeplink_service_impl.dart::DeeplinkServiceImpl" {
  +ErrorLoggingService errorLoggingService
  +void storeLastDeeplinkData()
  +Future<String?> getLastDeeplinkData()
  +void storeLastDeeplinkDataDynamic()
  +Future<void> initDeeplink()
}

"skorlife::features::deeplink_service::deeplink_service_impl.dart::DeeplinkServiceImpl" o-- "shared::services::error_logging::error_logging_service.dart::ErrorLoggingService"
"shared::services::deeplink_service::deeplink_service.dart::DeeplinkService" <|-- "skorlife::features::deeplink_service::deeplink_service_impl.dart::DeeplinkServiceImpl"
"skorlife::features::deeplink_service::app_deeplink_service.dart::AppDeeplinkService" <|-- "skorlife::features::deeplink_service::deeplink_service_impl.dart::DeeplinkServiceImpl"

abstract class "skorlife::features::deeplink_service::app_deeplink_service.dart::AppDeeplinkService" {
  +Future<void> initDeeplink()
}

abstract class "skorlife::features::deeplink_service::deeplink_listener.dart::DeeplinkListener" {
  +void onOpenAppAttribution()
  +void onDeepLinkingFound()
  +void onDeepLinkingNotFound()
  +void onDeepLinkingError()
  +void onDeepLinkingParseError()
}

abstract class "skorlife::features::dashboard::dashboard_api.dart::SkorlifeDashboardApi" {
  +Future<ApiResponseModel?> getDashboardData()
}

class "skorlife::features::dashboard::dashboard_api.dart::_SkorlifeDashboardApi" {
  -Dio _dio
  +String? baseUrl
  +ParseErrorLogger? errorLogger
  +Future<ApiResponseModel?> getDashboardData()
  -RequestOptions _setStreamType()
  -String _combineBaseUrls()
}

"skorlife::features::dashboard::dashboard_api.dart::_SkorlifeDashboardApi" o-- "dio::src::dio.dart::Dio"
"skorlife::features::dashboard::dashboard_api.dart::_SkorlifeDashboardApi" o-- "retrofit::error_logger.dart::ParseErrorLogger"
"skorlife::features::dashboard::dashboard_api.dart::SkorlifeDashboardApi" <|-- "skorlife::features::dashboard::dashboard_api.dart::_SkorlifeDashboardApi"

abstract class "skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiService" {
  +Future<ApiResponseModel?> getDashboardData()
}

class "skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiServiceImpl" {
  +SkorlifeDashboardApi api
  +Future<ApiResponseModel?> getDashboardData()
  +Future<ApiResponseModel?> getFistTimeCreditDashboardData()
  +Future<ApiResponseModel?> skorCardGetDashboardData()
}

"skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiServiceImpl" o-- "skorlife::features::dashboard::dashboard_api.dart::SkorlifeDashboardApi"
"skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiService" <|-- "skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiServiceImpl"
"first_time_credit_score_data::data::dashboard_data_service.dart::FirstTimeCreditDashboardDataService" <|-- "skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiServiceImpl"
"skorcard_data::service::skorcard_dashboard_data_service.dart::SkorcardDashboardDataService" <|-- "skorlife::features::dashboard::data::skorlife_dashboard_api_service.dart::SkorlifeDashboardApiServiceImpl"

class "skorlife::features::dashboard::data::dashboard_data.dart::ApiResponseModel" {
  +int? code
  +String? message
  +DashboardData? data
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::ApiResponseModel" o-- "skorlife::features::dashboard::data::dashboard_data.dart::DashboardData"

class "skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" {
  -String? _bureauCode
  -bool? _skorcardWaitListEnabled
  -int? _bankstatementUploadEnabled
  -List<Collectibility>? _collectibility
  -List<Credit>? _credit
  -Refresh? _refresh
  -Risk? _risk
  -Notification? _notification
  -Mailer? _mailer
  -String? _bureauType
  -String? _heading
  -FinancialGoalData? _financialGoalData
  -List<IncomeData>? _incomeData
  -List<BudgetData>? _budgetData
  -dynamic _goalEstimatedData
  -TotalExpenditureData? _totalExpenditureData
  -String? _currentDateTime
  -bool? _fileUploadStatus
  -Rating? _rating
  +String? bureauCode
  +bool? skorcardWaitListEnabled
  +int? bankstatementUploadEnabled
  +List<Collectibility>? collectibility
  +List<Credit>? credit
  +Refresh? refresh
  +Risk? risk
  +Notification? notification
  +Mailer? mailer
  +String? bureauType
  +String? heading
  +FinancialGoalData? financialGoalData
  +List<IncomeData>? incomeData
  +List<BudgetData>? budgetData
  +dynamic goalEstimatedData
  +TotalExpenditureData? totalExpenditureData
  +String? currentDateTime
  +bool? fileUploadStatus
  +Rating? rating
  +DashboardData copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Refresh"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Risk"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Notification"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Mailer"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::FinancialGoalData"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::TotalExpenditureData"
"skorlife::features::dashboard::data::dashboard_data.dart::DashboardData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Rating"

class "skorlife::features::dashboard::data::dashboard_data.dart::Rating" {
  -bool? _isRatingEnabled
  +bool? isRatingEnabled
  +Rating copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::TotalExpenditureData" {
  -String? _text
  -String? _monthYear
  -String? _currency
  -bool? _button
  -String? _buttonText
  -String? _budgetHeading
  -String? _goalName
  -int? _goalMonthBudgetAmount
  -String? _month
  -int? _totalAmount
  -WeekData? _weekData
  -MonthData? _monthData
  -Footer? _footer
  +String? text
  +String? monthYear
  +String? currency
  +bool? button
  +String? buttonText
  +String? budgetHeading
  +String? goalName
  +int? goalMonthBudgetAmount
  +String? month
  +int? totalAmount
  +WeekData? weekData
  +MonthData? monthData
  +Footer? footer
  +TotalExpenditureData copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::TotalExpenditureData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::WeekData"
"skorlife::features::dashboard::data::dashboard_data.dart::TotalExpenditureData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::MonthData"
"skorlife::features::dashboard::data::dashboard_data.dart::TotalExpenditureData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Footer"

class "skorlife::features::dashboard::data::dashboard_data.dart::Footer" {
  -String? _title
  -String? _text
  -String? _message
  -String? _buttonYesText
  -bool? _buttonVisibility
  -String? _buttonNoText
  -int? _yearID
  -int? _monthID
  -int? _weekID
  +String? title
  +String? text
  +String? message
  +String? buttonYesText
  +bool? buttonVisibility
  +String? buttonNoText
  +int? yearID
  +int? monthID
  +int? weekID
  +Footer copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::MonthData" {
  -String? _currency
  -String? _text
  -String? _remainingAmount
  -String? _totalAmount
  -int? _totalAmountValue
  -String? _color
  -num? _percentage
  +String? currency
  +String? text
  +String? remainingAmount
  +String? totalAmount
  +int? totalAmountValue
  +String? color
  +num? percentage
  +MonthData copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::WeekData" {
  -String? _currency
  -String? _text
  -String? _remainingAmount
  -String? _totalAmount
  -int? _totalAmountValue
  -String? _color
  -int? _percentage
  +String? currency
  +String? text
  +String? remainingAmount
  +String? totalAmount
  +int? totalAmountValue
  +String? color
  +int? percentage
  +WeekData copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::BudgetData" {
  -String? _budgetName
  -int? _budgetAmount
  +String? budgetName
  +int? budgetAmount
  +BudgetData copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::IncomeData" {
  -String? _incomeType
  -String? _incomeDescription
  -int? _incomeAmount
  +String? incomeType
  +String? incomeDescription
  +int? incomeAmount
  +IncomeData copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::FinancialGoalData" {
  -String? _goalType
  -String? _goalName
  -int? _budgetAmount
  -int? _currentSavedAmount
  -int? _totalSavingAmount
  -String? _targetDate
  -String? _createdAt
  -AdditionalDetails? _additionalDetails
  +String? goalType
  +String? goalName
  +int? budgetAmount
  +int? currentSavedAmount
  +int? totalSavingAmount
  +String? targetDate
  +String? createdAt
  +AdditionalDetails? additionalDetails
  +FinancialGoalData copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::FinancialGoalData" o-- "skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails"

class "skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails" {
  -String? _title
  -String? _goalName
  -String? _goalMessage
  -String? _currency
  -FooterDetails? _footerDetails
  -int? _amount
  -String? _estimatedMessage
  -String? _estimatedDate
  -String? _goalDate
  -Message? _message
  -OuterMessage? _outerMessage
  +String? title
  +String? goalName
  +String? goalMessage
  +String? currency
  +FooterDetails? footerDetails
  +int? amount
  +String? estimatedMessage
  +String? estimatedDate
  +String? goalDate
  +Message? message
  +OuterMessage? outerMessage
  +AdditionalDetails copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails" o-- "skorlife::features::dashboard::data::dashboard_data.dart::FooterDetails"
"skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Message"
"skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails" o-- "skorlife::features::dashboard::data::dashboard_data.dart::OuterMessage"

class "skorlife::features::dashboard::data::dashboard_data.dart::OuterMessage" {
  -String? _text
  -String? _color
  +String? text
  +String? color
  +OuterMessage copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Message" {
  -String? _text
  -String? _color
  +String? text
  +String? color
  +Message copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::FooterDetails" {
  -String? _title
  -String? _text
  -String? _message
  -String? _buttonYesText
  -bool? _buttonVisibility
  -String? _buttonNoText
  -int? _yearID
  -int? _monthID
  +String? title
  +String? text
  +String? message
  +String? buttonYesText
  +bool? buttonVisibility
  +String? buttonNoText
  +int? yearID
  +int? monthID
  +FooterDetails copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Mailer" {
  -String? _type
  -String? _status
  +String? type
  +String? status
  +Mailer copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Notification" {
  -int? _unread
  +int? unread
  +Notification copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Risk" {
  -bool? _show
  -bool? _navigation
  -String? _insightsID
  -Goals? _goals
  -Score? _score
  -AsOf? _asOf
  -Button? _button
  -Loader? _loader
  -String? _disclaimer
  +bool? show
  +bool? navigation
  +String? insightsID
  +Goals? goals
  +Score? score
  +AsOf? asOf
  +Button? button
  +Loader? loader
  +String? disclaimer
  +Risk copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Risk" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Goals"
"skorlife::features::dashboard::data::dashboard_data.dart::Risk" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Score"
"skorlife::features::dashboard::data::dashboard_data.dart::Risk" o-- "skorlife::features::dashboard::data::dashboard_data.dart::AsOf"
"skorlife::features::dashboard::data::dashboard_data.dart::Risk" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Button"
"skorlife::features::dashboard::data::dashboard_data.dart::Risk" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Loader"

class "skorlife::features::dashboard::data::dashboard_data.dart::Loader" {
  -int? _timeout
  -String? _message
  +int? timeout
  +String? message
  +Loader copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Button" {
  -bool? _enable
  -String? _label
  -Click? _click
  +bool? enable
  +String? label
  +Click? click
  +Button copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Button" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Click"

class "skorlife::features::dashboard::data::dashboard_data.dart::Click" {
  -bool? _enable
  -String? _navigate
  +bool? enable
  +String? navigate
  +Click copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::AsOf" {
  -String? _label
  -String? _date
  +String? label
  +String? date
  +AsOf copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Score" {
  -String? _title
  -List<TitleTexts>? _titleTexts
  -String? _message
  -String? _messageBackgroundColor
  -String? _goalSelectedValue
  -String? _goalSelectedTitle
  -int? _current
  -String? _color
  -Goal? _goal
  +String? title
  +List<TitleTexts>? titleTexts
  +String? message
  +String? messageBackgroundColor
  +String? goalSelectedValue
  +String? goalSelectedTitle
  +int? current
  +String? color
  +Goal? goal
  +Score copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Score" o-- "skorlife::features::dashboard::data::dashboard_data.dart::Goal"

class "skorlife::features::dashboard::data::dashboard_data.dart::Goal" {
  -String? _label
  -String? _color
  -int? _probability
  +String? label
  +String? color
  +int? probability
  +Goal copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::TitleTexts" {
  -String? _message
  +String? message
  +TitleTexts copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Goals" {
  -String? _title
  -List<Selection>? _selection
  +String? title
  +List<Selection>? selection
  +Goals copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Selection" {
  -String? _label
  -String? _icon
  -String? _loanType
  -String? _value
  -String? _title
  +String? label
  +String? icon
  +String? loanType
  +String? value
  +String? title
  +Selection copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Refresh" {
  -String? _bureau
  -int? _day
  -bool? _enable
  -String? _message
  -RefreshProgress? _refreshProgress
  +String? bureau
  +int? day
  +bool? enable
  +String? message
  +RefreshProgress? refreshProgress
  +Refresh copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Refresh" o-- "skorlife::features::dashboard::data::dashboard_data.dart::RefreshProgress"

class "skorlife::features::dashboard::data::dashboard_data.dart::RefreshProgress" {
  -bool? _isPaymentRequired
  -String? _paymentStatus
  -int? _refreshCount
  -MailerType? _mailerType
  -AdditionalDetails? _additionalDetails
  +bool? isPaymentRequired
  +String? paymentStatus
  +int? refreshCount
  +MailerType? mailerType
  +AdditionalDetails? additionalDetails
  +RefreshProgress copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::RefreshProgress" o-- "skorlife::features::dashboard::data::dashboard_data.dart::MailerType"
"skorlife::features::dashboard::data::dashboard_data.dart::RefreshProgress" o-- "skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetails"

class "skorlife::features::dashboard::data::dashboard_data.dart::AdditionalDetailsRefresh" {
  -String? _title
  -String? _description
  -int? _streakKolScore
  -int? _streakMonths
  -bool? _streakMax
  -dynamic _headings
  -String? _refreshAmount
  -String? _refreshAmountActual
  -int? _discount
  -dynamic _accounts
  +String? title
  +String? description
  +int? streakKolScore
  +int? streakMonths
  +bool? streakMax
  +dynamic headings
  +String? refreshAmount
  +String? refreshAmountActual
  +int? discount
  +dynamic accounts
  +AdditionalDetailsRefresh copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::MailerType" {
  -String? _type
  -String? _status
  +String? type
  +String? status
  +MailerType copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Credit" {
  -String? _bureau
  -String? _header
  -String? _icon
  -String? _title
  -CreditGrade? _grade
  -CreditAsOf? _asOf
  -CreditFooter? _footer
  +String? bureau
  +String? header
  +String? icon
  +String? title
  +CreditGrade? grade
  +CreditAsOf? asOf
  +CreditFooter? footer
  +Credit copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Credit" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditGrade"
"skorlife::features::dashboard::data::dashboard_data.dart::Credit" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditAsOf"
"skorlife::features::dashboard::data::dashboard_data.dart::Credit" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditFooter"

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditFooter" {
  -String? _title
  -List<CreditFooterTexts>? _texts
  -CreditFaq? _faq
  +String? title
  +List<CreditFooterTexts>? texts
  +CreditFaq? faq
  +CreditFooter copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::CreditFooter" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditFaq"

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditFaq" {
  -String? _title
  -List<FaqDetails>? _details
  +String? title
  +List<FaqDetails>? details
  +CreditFaq copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::FaqDetails" {
  -String? _question
  -String? _answer
  +String? question
  +String? answer
  +FaqDetails copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditFooterTextsClick" {
  -String? _enable
  -String? _navigate
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditFooterTexts" {
  -String? _message
  -CreditFooterTextsClick? _click
  +String? message
  +CreditFooterTexts copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::CreditFooterTexts" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditFooterTextsClick"

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditGrade" {
  -int? _score
  -int? _previousScore
  -CreditChart? _chart
  -String? _status
  -String? _string
  -String? _color
  -String? _background
  -String? _heading
  -String? _message
  +int? score
  +int? previousScore
  +CreditChart? chart
  +String? status
  +String? string
  +String? color
  +String? background
  +String? heading
  +String? message
  +CreditGrade copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::CreditGrade" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CreditChart"

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditChart" {
  -String? _scoreChangedByType
  -int? _scoreChangedBy
  +String? scoreChangedByType
  +int? scoreChangedBy
  +CreditChart copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::Collectibility" {
  -String? _bureau
  -String? _header
  -CollectibilityDetails? _details
  -CollectibilityKol? _kol
  -AsOf? _asOf
  +String? bureau
  +String? header
  +CollectibilityDetails? details
  +CollectibilityKol? kol
  +AsOf? asOf
  +Collectibility copyWith()
  +Map<String, dynamic> toJson()
}

"skorlife::features::dashboard::data::dashboard_data.dart::Collectibility" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CollectibilityDetails"
"skorlife::features::dashboard::data::dashboard_data.dart::Collectibility" o-- "skorlife::features::dashboard::data::dashboard_data.dart::CollectibilityKol"
"skorlife::features::dashboard::data::dashboard_data.dart::Collectibility" o-- "skorlife::features::dashboard::data::dashboard_data.dart::AsOf"

class "skorlife::features::dashboard::data::dashboard_data.dart::CreditAsOf" {
  -String? _label
  -String? _date
  +String? label
  +String? date
  +CreditAsOf copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::CollectibilityKol" {
  -String? _label
  -int? _score
  -String? _status
  -String? _color
  -String? _backgroundcolor
  -String? _heading
  -String? _message
  +String? label
  +int? score
  +String? status
  +String? color
  +String? backgroundcolor
  +String? heading
  +String? message
  +CollectibilityKol copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::dashboard::data::dashboard_data.dart::CollectibilityDetails" {
  -String? _label
  -bool? _enable
  +String? label
  +bool? enable
  +CollectibilityDetails copyWith()
  +Map<String, dynamic> toJson()
}

class "skorlife::features::repayment::repayment_env_service_impl.dart::RepaymentEnvServiceImpl" {
  +EnvironmentService environmentService
  +Future<bool> isFeatureEnabled()
}

"skorlife::features::repayment::repayment_env_service_impl.dart::RepaymentEnvServiceImpl" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"repayment_data::service::repayment_env_service.dart::RepaymentEnvService" <|-- "skorlife::features::repayment::repayment_env_service_impl.dart::RepaymentEnvServiceImpl"

class "skorlife::features::dispute_flow::navigator_service.dart::DisputeFlowNavigatorServiceImpl" {
  +void navigateToDisputeFlowDetails()
  +void navigateToDisputeFlowPaylaterDetails()
  +void navigateToDisputeFlowKkbDetails()
  +void navigateToDashboardInbox()
}

"dispute_flow_data::modules::shared::navigator::dispute_flow_navigator.dart::DisputeFlowNavigatorService" <|-- "skorlife::features::dispute_flow::navigator_service.dart::DisputeFlowNavigatorServiceImpl"

class "skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" {
  {static} +EnvironmentServiceCore instance
  +ErrorLoggingService errorLoggingService
  +Posthog postHogAnalytics
  +FetchConfigState state
  +PackageInfo pInfo
  +StreamController<RemoteConfigLocalModel?> controller
  +bool fetchInProgress
  +FirebaseRemoteConfig? config
  +RemoteConfigLocalModel? cachedConfig
  -Map<String, RemoteConfigValue>? _values
  +bool secretUnlcoked
  +Future<bool> isFeatureEnabledFromPlatForm()
  +Map<String, dynamic>? getSkorcardPromoConfigCollection()
  +Map<String, dynamic>? getBottomNavTexts()
  +Map<String, dynamic>? getSkorcardInviteV2Data()
  +String? getSkorcardInviteV2ABTestVariant()
  +Future<void> initalizeEnvironment()
  +String getApiBaseUrl()
  +String getAppVersion()
  +String getBuildNumber()
  +Future<bool?> isFeatureEnabled()
  +Future<String?> getFeatureFlag()
  +Future<String?> getDeviceId()
  +Future<String?> getFcmToken()
  +DeviceType getDeviceType()
  +bool isCollectionConfigReady()
  +bool isFetchConfigInProgress()
  -Future<RemoteConfigLocalModel?> _fetchConfig()
  +Stream<Map<String, dynamic>?> getConfig()
  +Future<Map<String, dynamic>?> fetchConfig()
  +bool isConfigInitialized()
  +Map<String, dynamic>? getConfigCollection()
  +String? getConfigString()
  +bool secretUnlocked()
  +void setSecretUnlocked()
  +bool? getConfigBoolValue()
  +Future<dynamic> share()
  +String getStoreUrl()
  +void setOrientation()
  +FetchConfigState getFetchState()
}

"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "skorlife::features::environment::environment_service.dart::EnvironmentServiceCore"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "shared::services::error_logging::error_logging_service.dart::ErrorLoggingService"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "posthog_flutter::src::posthog.dart::Posthog"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "shared::services::environment::environment_service.dart::FetchConfigState"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "package_info_plus::package_info_plus.dart::PackageInfo"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "dart::async::StreamController<RemoteConfigLocalModel>"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "firebase_remote_config::firebase_remote_config.dart::FirebaseRemoteConfig"
"skorlife::features::environment::environment_service.dart::EnvironmentServiceCore" o-- "app_init_domain::usecases::init_app_usecase::model::remote_config_model.dart::RemoteConfigLocalModel"
"skorcard_data::service::skorcard_environment_service.dart::SkorcardEnvironmentService" <|-- "skorlife::features::environment::environment_service.dart::EnvironmentServiceCore"
"upload_bank_statement::modules::shared::environment::environment_service.dart::UploadBankStatementEnvironmentService" <|-- "skorlife::features::environment::environment_service.dart::EnvironmentServiceCore"
"shared::services::environment::environment_service.dart::EnvironmentService" <|-- "skorlife::features::environment::environment_service.dart::EnvironmentServiceCore"

class "skorlife::features::api::skorlife_api_client_mediator_impl.dart::SkorlifeApiClientMediatorImpl" {
  +EnvironmentService environmentService
  +Future<Dio> createClient()
  +Future<Dio> provideDio()
}

"skorlife::features::api::skorlife_api_client_mediator_impl.dart::SkorlifeApiClientMediatorImpl" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"shared::services::api::skorlife_api_client_factory.dart::SkorlifeApiClientMediatorFactory" <|-- "skorlife::features::api::skorlife_api_client_mediator_impl.dart::SkorlifeApiClientMediatorImpl"

class "skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl" {
  +EnvironmentService environmentService
  +TrackerEnvironmentService trackerService
  +DeeplinkService deeplinkService
  +SharedLocalStorageService sharedLocalStorageService
  +Future<Map<String, String>> getHeaders()
}

"skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl" o-- "shared::services::tracker::tracker_service.dart::TrackerEnvironmentService"
"skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl" o-- "shared::services::deeplink_service::deeplink_service.dart::DeeplinkService"
"skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl" o-- "shared::services::local_storage::shared_local_storage_service.dart::SharedLocalStorageService"
"shared::services::api::skorlife_header_interceptor_service.dart::SkorlifeHeaderInterceptorService" <|-- "skorlife::features::api::skorlife_header_interceptor_service_impl.dart::SkorlifeHeaderInterceptorServiceImpl"

class "skorlife::features::api::skorlife_mandatory_api_header.dart::SkorlifeMandatoryApiHeader" {
  +SkorlifeHeaderInterceptorService skorlifeHeaderInterceptorService
  +List<String> unsecuredEndpoints
  +void onRequest()
  +void onResponse()
}

"skorlife::features::api::skorlife_mandatory_api_header.dart::SkorlifeMandatoryApiHeader" o-- "shared::services::api::skorlife_header_interceptor_service.dart::SkorlifeHeaderInterceptorService"
"dio::src::dio_mixin.dart::Interceptor" <|-- "skorlife::features::api::skorlife_mandatory_api_header.dart::SkorlifeMandatoryApiHeader"

class "skorlife::features::first_time_credit::first_time_credit_navigator.dart::SkorcardNavigatorCore" {
  {static} +SkorcardNavigatorCore instance
  +void navigateToSkorCard()
  +void navigateToDashboard()
  +void navigateToSkorcardDeeplink()
  +void navigateWithDeeplinkWithUtmCampaign()
  +void navigateToSKorcardTermsAndService()
  +void navigateToSkorcardInModuleScreen()
  -Widget _skorcardNotEligibleScreen()
  -Widget _skorcardEligibleScreen()
  -Widget _skorcardEligibleScreenV2()
  +void navigateWithInNModuleSkorcard()
}

"skorlife::features::first_time_credit::first_time_credit_navigator.dart::SkorcardNavigatorCore" o-- "skorlife::features::first_time_credit::first_time_credit_navigator.dart::SkorcardNavigatorCore"
"skorcard_view::skorcard_navigator.dart::SkorcardViewNavigator" <|-- "skorlife::features::first_time_credit::first_time_credit_navigator.dart::SkorcardNavigatorCore"
"first_time_credit_view::screens::navigator.dart::FirstTimeCreditNavigator" <|-- "skorlife::features::first_time_credit::first_time_credit_navigator.dart::SkorcardNavigatorCore"

class "skorlife::features::bank_upload_statement::module_install::track_dict.dart::TrackKeys" {
  {static} +String bankStatemenetModuleLoaded
  {static} +String bankStatementJoiningEvent
  {static} +String bankStatementCarouselLoaded
  {static} +String bankStatementUploadFormLoadedEvent
  {static} +String bankStatementUploadFormUploadFileClicked
  {static} +String bankStatementUploadFormUploadFileLoaded
  {static} +String bankStatementUploadFormSubmitClicked
  {static} +String bankStatementSUccessUploadEvent
  {static} +String bankStatementExplainerClickedEvent
  {static} +String bankStatementCarouselBackButtonClicked
  {static} +String bankStatementUploadFormBackButtonClicked
  {static} +String bankStatementDeclineBetaTesterUploadClicked
  {static} +String bankStatementLetMeTryClicked
  {static} +String bankStatementNoThanksClicked
}

class "skorlife::features::bank_upload_statement::module_install::local_storage_service.dart::LocalStorageImplCore" {
  {static} +LocalStorageImplCore instance
  +Future<Object?> getJwtKey()
  +Future<String?> getLastLoggedInPhoneNumber()
  +Future<String?> getLastLoggedInEmail()
}

"skorlife::features::bank_upload_statement::module_install::local_storage_service.dart::LocalStorageImplCore" o-- "skorlife::features::bank_upload_statement::module_install::local_storage_service.dart::LocalStorageImplCore"
"upload_bank_statement::modules::shared::local_storage::local_storage_service_upload_bank_statement.dart::UploadBankStatmentLocalStorageService" <|-- "skorlife::features::bank_upload_statement::module_install::local_storage_service.dart::LocalStorageImplCore"
"dispute_flow_data::modules::shared::local_storage::local_storage_service_dispute_flow.dart::DisputeFLowLocalStorageService" <|-- "skorlife::features::bank_upload_statement::module_install::local_storage_service.dart::LocalStorageImplCore"

class "skorlife::features::bank_upload_statement::module_install::navigator_service.dart::UploadBankStatementNavigatorService" {
  +void navigateToBankStatementCarousel()
}

"upload_bank_statement::modules::shared::navigator::upload_bank_statement_navigator.dart::UploadBankStatementNavigator" <|-- "skorlife::features::bank_upload_statement::module_install::navigator_service.dart::UploadBankStatementNavigatorService"

class "skorlife::features::bank_upload_statement::module_install::tracker_service.dart::PostHogTrackerService" {
  +void track()
  +void trackModuleLoaded()
  +void trackUserBankStatementFormLoaded()
  +void trackUserCLickBackButtonOnForm()
  +void trackUserChooseTheFileToUpload()
  +void trackUserClickBackButtonOnCarousel()
  +void trackUserClickButtonPickFileUpload()
  +void trackUserClickDeclineExitOnDashboard()
  +void trackUserClickDeclineUploadFormOnDashboard()
  +void trackUserClickExplainerUploadBankStatement()
  +void trackUserClickImIn()
  +void trackUserClickLetMeTryOnDashboard()
  +void trackUserEnterBankStatementCarousel()
  +void trackUserUploadApiSuccess()
  +void trackUserWhenUserClickSubmitUpload()
}

"upload_bank_statement::modules::shared::tracker::tracker_service.dart::UploadBankStatementTrackerService" <|-- "skorlife::features::bank_upload_statement::module_install::tracker_service.dart::PostHogTrackerService"

class "skorlife::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions ios
  {static} +FirebaseOptions currentPlatform
}

"skorlife::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "skorlife::utils::custom_button_style.dart::CustomButtonStyles" {
  {static} +ButtonStyle fillBlue
  {static} +ButtonStyle fillDeepOrange
  {static} +ButtonStyle fillPrimaryTL24
  {static} +ButtonStyle fillWhite
  {static} +ButtonStyle outlinePrimaryTL24
  {static} +ButtonStyle outlineOnPrimary
  {static} +ButtonStyle outlinePrimary
  {static} +ButtonStyle outlineDisabled
}

"skorlife::utils::custom_button_style.dart::CustomButtonStyles" o-- "flutter::src::material::button_style.dart::ButtonStyle"

class "skorlife::utils::token_monitor.dart::TokenMonitor" {
  -Widget Function(String?) _builder
  +State<StatefulWidget> createState()
}

"skorlife::utils::token_monitor.dart::TokenMonitor" o-- "null::Widget Function(String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::utils::token_monitor.dart::TokenMonitor"

class "skorlife::utils::token_monitor.dart::_TokenMonitor" {
  -String? _token
  -Stream<String> _tokenStream
  +void setToken()
  +void initState()
  +Widget build()
}

"skorlife::utils::token_monitor.dart::_TokenMonitor" o-- "dart::async::Stream<String>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::utils::token_monitor.dart::_TokenMonitor"

class "skorlife::utils::mask_text_formatter.dart::MaskTextInputFormatter" {
  +MaskAutoCompletionType type
  -String? _mask
  -List<String> _maskChars
  -Map<String, RegExp>? _maskFilter
  -int _maskLength
  -_TextMatcher _resultTextArray
  -String _resultTextMasked
  +TextEditingValue updateMask()
  +String? getMask()
  +String getMaskedText()
  +String getUnmaskedText()
  +bool isFill()
  +void clear()
  +String maskText()
  +String unmaskText()
  +TextEditingValue formatEditUpdate()
  -void _calcMaskLength()
  -void _updateFilter()
}

"skorlife::utils::mask_text_formatter.dart::MaskTextInputFormatter" o-- "skorlife::utils::mask_text_formatter.dart::MaskAutoCompletionType"
"skorlife::utils::mask_text_formatter.dart::MaskTextInputFormatter" o-- "skorlife::utils::mask_text_formatter.dart::_TextMatcher"
"flutter::src::services::text_formatter.dart::TextInputFormatter" <|-- "skorlife::utils::mask_text_formatter.dart::MaskTextInputFormatter"

class "skorlife::utils::mask_text_formatter.dart::_TextMatcher" {
  -List<String> _symbolArray
  +int length
  +bool isEmpty
  +void removeRange()
  +void insert()
  +void removeAt()
  +String []()
  +void clear()
  +String toString()
  +void set()
}

class "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController" {
  +String decimalSeparator
  +String thousandSeparator
  +String rightSymbol
  +String leftSymbol
  +int precision
  +Function afterChange
  -double _lastValue
  +double numberValue
  +void updateValue()
  -dynamic _validateConfig()
  -String _getOnlyNumbers()
  -String _applyMask()
}

"flutter::src::widgets::editable_text.dart::TextEditingController" <|-- "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController"

class "skorlife::utils::push_notification.dart::PushNotificationService" {
  +Future<void> setupInteractedMessage()
  -dynamic _handleMessage()
  -Future<void> _registerNotificationListeners()
  +Future<void> enableIOSNotifications()
  +AndroidNotificationChannel androidNotificationChannel()
  +dynamic sendNotificationClickedEvent()
  +dynamic checkIsWaitListInviteNotification()
}

class "skorlife::utils::app_decoration.dart::AppDecoration" {
  {static} +BoxDecoration outlineBlack
  {static} +BoxDecoration outlineBlack1
  {static} +BoxDecoration outlineBlack900
  {static} +BoxDecoration outlineGray
}

"skorlife::utils::app_decoration.dart::AppDecoration" o-- "flutter::src::painting::box_decoration.dart::BoxDecoration"

class "skorlife::utils::app_decoration.dart::BorderRadiusStyle" {
  {static} +BorderRadius customBorderLR16
  {static} +BorderRadius roundedBorder12
  {static} +BorderRadius customBorderTL16
  {static} +BorderRadius roundedBorder16
  {static} +BorderRadius roundedBorder8
}

"skorlife::utils::app_decoration.dart::BorderRadiusStyle" o-- "flutter::src::painting::border_radius.dart::BorderRadius"

abstract class "skorlife::utils::listener.dart::DataSetListener" {
  +dynamic onDataSet()
}

class "skorlife::utils::listener.dart::SKListener" {
  +dynamic setDataSetListener()
}

class "skorlife::screens::gmail_read_consent::upload_credit_report.dart::UploadCreditReport" {
  +State<UploadCreditReport> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::gmail_read_consent::upload_credit_report.dart::UploadCreditReport"

class "skorlife::screens::gmail_read_consent::upload_credit_report.dart::_UploadCreditReportState" {
  +ValueNotifier<File> file
  +ValueNotifier<bool> buttonDisable
  +bool uploadFailed
  +String errorMessage
  +AppProvider appProvider
  +String cbiEmail
  +String skorlifeEmail
  +void initState()
  +Future<void> getEmailsFromRemoteConfig()
  +dynamic isValidFileFormat()
  +Widget build()
  +dynamic pickFile()
  +dynamic uploadFile()
  -dynamic _showTopErrorMessage()
  -dynamic _showBottomSheetError()
}

"skorlife::screens::gmail_read_consent::upload_credit_report.dart::_UploadCreditReportState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<File>"
"skorlife::screens::gmail_read_consent::upload_credit_report.dart::_UploadCreditReportState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::gmail_read_consent::upload_credit_report.dart::_UploadCreditReportState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::gmail_read_consent::upload_credit_report.dart::_UploadCreditReportState"

class "skorlife::screens::gmail_read_consent::upload_credit_report.dart::FileUploadWidget" {
  +String fileName
  +String errorMessage
  +double progress
  +bool uploadFailed
  +void Function()? selectFile
  +void Function()? onCancel
  +void Function()? uploadAgain
  +dynamic getProgressBar()
  +Widget build()
}

"skorlife::screens::gmail_read_consent::upload_credit_report.dart::FileUploadWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::gmail_read_consent::upload_credit_report.dart::FileUploadWidget"

class "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::CreditReportSubmitGuide" {
  +State<CreditReportSubmitGuide> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::CreditReportSubmitGuide"

class "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::_CreditReportSubmitGuideState" {
  +ValueNotifier<bool> forwardEmail
  +String cbiEmail
  +String skorlifeEmail
  +AppProvider appProvider
  +void initState()
  +Future<void> getEmailsFromRemoteConfig()
  +Widget build()
}

"skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::_CreditReportSubmitGuideState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::_CreditReportSubmitGuideState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::_CreditReportSubmitGuideState"

class "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::UploadCreditReportItemWidget" {
  +String title
  +String number
  +String subTitle
  +String buttonText
  +String copyText
  +bool buttonEnable
  +bool copyEnable
  +void Function()? onTapButton
  +Widget build()
}

"skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::UploadCreditReportItemWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::gmail_read_consent::credit_report_submit_guide_screen.dart::UploadCreditReportItemWidget"

class "skorlife::screens::gmail_read_consent::gmail_auth_profile.dart::GmailAuthProfile" {
  +State<GmailAuthProfile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::gmail_read_consent::gmail_auth_profile.dart::GmailAuthProfile"

class "skorlife::screens::gmail_read_consent::gmail_auth_profile.dart::_GmailAuthProfileState" {
  +AppProvider appProvider
  +bool fromRegister
  +String routeTo
  +String message
  +bool isEmailThere
  +void initState()
  +Widget build()
  +void cancleAccessPermissionBottomSheet()
  +dynamic showSuccessPopUp()
  +dynamic sendTokenToServer()
}

"skorlife::screens::gmail_read_consent::gmail_auth_profile.dart::_GmailAuthProfileState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::gmail_read_consent::gmail_auth_profile.dart::_GmailAuthProfileState"

class "skorlife::screens::gmail_read_consent::connect_gmail_account.dart::ConnectGmailAccount" {
  +void Function()? onTap
  +ValueNotifier<bool> showingEnglish
  +Widget build()
}

"skorlife::screens::gmail_read_consent::connect_gmail_account.dart::ConnectGmailAccount" o-- "null::void Function()"
"skorlife::screens::gmail_read_consent::connect_gmail_account.dart::ConnectGmailAccount" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::gmail_read_consent::connect_gmail_account.dart::ConnectGmailAccount"

class "skorlife::screens::gmail_read_consent::email_connected.dart::EmailConnected" {
  +String? userName
  +String? gmail
  +String? btnText
  +bool isDisconnected
  +bool revokedTitleRequired
  +void Function()? onTap
  +Widget build()
}

"skorlife::screens::gmail_read_consent::email_connected.dart::EmailConnected" o-- "null::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::gmail_read_consent::email_connected.dart::EmailConnected"

class "skorlife::screens::expense::budget_expense.dart::BudgetExpenses" {
  +State<BudgetExpenses> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::expense::budget_expense.dart::BudgetExpenses"

class "skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" {
  +ValueNotifier<bool> budgetDataVisibility
  -TabController _controller
  +List<Category> listOfCat
  +CategoryModel categoryModel
  +ValueNotifier<bool> addedToCat
  +ValueNotifier<bool> tabUpdate
  +DateTime currentDateTime
  +double weeklyExpenses
  +int amt
  +int budgetAmt
  +int monthlyExpenses
  +double totalExpenses
  +ValueNotifier<int> selectedtab
  -FocusNode _focusNode
  +ValueNotifier<DateTime> selectedDate
  +ValueNotifier<String> amount
  +String categoryAddExpenseHolder
  +String categoryNotesHolder
  +int categoryAddIdHolder
  +List<String> exp
  +MoneyMaskedTextController controller
  +AppProvider appProvider
  +bool isDataAvailable
  +ExpenseSummaryModel? expenseSummaryModel
  +void initState()
  +Widget build()
  +dynamic calculate()
  +dynamic showExpenditureBottomSheet()
  +dynamic showExpenseCalculationBottomSheet()
  +dynamic showCategoryBottomSheet()
  +dynamic categoryItem()
  +dynamic getExpenses()
  +dynamic getCategories()
  +dynamic setExpenses()
  +dynamic setCategory()
  +dynamic decoration()
  +dynamic callBtmSheetForCatAdd()
  +dynamic deletecategory()
}

"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::material::tab_controller.dart::TabController"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "skorlife::maps::dashboard.dart::CategoryModel"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState" o-- "skorlife::maps::dashboard.dart::ExpenseSummaryModel"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "skorlife::screens::expense::budget_expense.dart::_BudgetExpensesState"

class "skorlife::screens::expense::budget_expense.dart::CategoryMasterHeaders" {
  +String header
  +List<CategoryMasterData> data
}

class "skorlife::screens::expense::budget_expense.dart::CategoryMasterData" {
  +String icon
  +String title
  +int id
}

class "skorlife::screens::pfm::chart_sample.dart::ChartSample" {
  +State<ChartSample> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::pfm::chart_sample.dart::ChartSample"

class "skorlife::screens::pfm::chart_sample.dart::_ChartSampleState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::pfm::chart_sample.dart::_ChartSampleState"

class "skorlife::screens::pfm::set_income.dart::SetIncome" {
  +State<SetIncome> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::pfm::set_income.dart::SetIncome"

class "skorlife::screens::pfm::set_income.dart::_SetIncomeState" {
  +bool isChecked
  +ValueNotifier<bool> isButtonEnabled
  +Map<String, List<Map<String, String>>> jsonData
  +Income incomeModel
  +ValueNotifier<List<Map<String, dynamic>>> selectedIncome
  +bool isPageLoaded
  +Map<String, dynamic> selectedItem
  +bool isEditMode
  +bool fromOnboarding
  +ValueNotifier<dynamic> selectedCode
  +ValueNotifier<bool> resetDisable
  +ValueNotifier<bool> buttonDisable
  +MoneyMaskedTextController incomeController
  +TextEditingController nameController
  +FocusNode budgetFocusNode
  +FocusNode nameFocusNode
  +void initState()
  +Future<void> getIncomeTypes()
  +dynamic getIncomeData()
  +dynamic setIncomeItem()
  +Widget build()
  +dynamic validate()
  +dynamic reset()
  +void showIncomeSelectionBottomSheet()
}

"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "skorlife::screens::pfm::set_income.dart::Income"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<Map<String, dynamic>>>"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<dynamic>"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::pfm::set_income.dart::_SetIncomeState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::pfm::set_income.dart::_SetIncomeState"

class "skorlife::screens::pfm::set_income.dart::IncomeItemWidget" {
  +IncomeItem item
  +bool selected
  +void Function()? onTap
  +Widget build()
}

"skorlife::screens::pfm::set_income.dart::IncomeItemWidget" o-- "skorlife::screens::pfm::set_income.dart::IncomeItem"
"skorlife::screens::pfm::set_income.dart::IncomeItemWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::pfm::set_income.dart::IncomeItemWidget"

class "skorlife::screens::pfm::set_income.dart::Income" {
  +List<IncomeItem> incomeItem
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::set_income.dart::IncomeItem" {
  +String label
  +String code
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::set_income.dart::Incomes" {
  +int? code
  +String? message
  +List<IncomeList>? incomeList
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::set_income.dart::IncomeList" {
  +int? id
  +String? incomeType
  +String? incomeDescription
  +int? incomeAmount
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::celebration_expense_success_screen::models::update_saving_bottom_sheet.dart::UpdateSavingBottomSheet" {
  +UpdateSavingsModelData updateSavingsModelData
  +MoneyMaskedTextController amtController
  +Widget build()
}

"skorlife::screens::pfm::celebration_expense_success_screen::models::update_saving_bottom_sheet.dart::UpdateSavingBottomSheet" o-- "skorlife::maps::dashboard.dart::UpdateSavingsModelData"
"skorlife::screens::pfm::celebration_expense_success_screen::models::update_saving_bottom_sheet.dart::UpdateSavingBottomSheet" o-- "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::pfm::celebration_expense_success_screen::models::update_saving_bottom_sheet.dart::UpdateSavingBottomSheet"

class "skorlife::screens::pfm::celebration_expense_success_screen::celebration_expense_success_screen.dart::CelebrationExpenseSuccessScreen" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::pfm::celebration_expense_success_screen::celebration_expense_success_screen.dart::CelebrationExpenseSuccessScreen"

class "skorlife::screens::pfm::pfm_intro_screens.dart::PfmIntroScreens" {
  +State<PfmIntroScreens> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::pfm::pfm_intro_screens.dart::PfmIntroScreens"

class "skorlife::screens::pfm::pfm_intro_screens.dart::_PfmIntroScreensState" {
  +int current
  +CarouselSliderController carouselController
  +void initState()
  +Widget build()
}

"skorlife::screens::pfm::pfm_intro_screens.dart::_PfmIntroScreensState" o-- "carousel_slider::carousel_controller.dart::CarouselSliderController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::pfm::pfm_intro_screens.dart::_PfmIntroScreensState"

class "skorlife::screens::pfm::pfm_intro_screens.dart::PfmCarouselItem" {
  +Map<dynamic, dynamic> item
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::pfm::pfm_intro_screens.dart::PfmCarouselItem"

class "skorlife::screens::pfm::set_goal.dart::SetGoalPage" {
  +State<SetGoalPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::pfm::set_goal.dart::SetGoalPage"

class "skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" {
  +bool isChecked
  +ValueNotifier<bool> isButtonEnabled
  +Goals goalsModel
  +ValueNotifier<Map<String, dynamic>> selectedGoal
  +bool isPageLoaded
  +AppProvider appProvider
  +DateFormat formatter
  +bool edit
  +bool fromOnboarding
  +ValueNotifier<dynamic> selectedCode
  +ValueNotifier<bool> resetDisable
  +String date
  +ValueNotifier<bool> buttonDisable
  +MoneyMaskedTextController budgetController
  +TextEditingController nameController
  +MoneyMaskedTextController collectedBudgetController
  +FocusNode budgetFocusNode
  +FocusNode nameFocusNode
  +FocusNode collectedBudgetFocusNode
  +void initState()
  +Future<void> getGoalTypes()
  +dynamic getGoalData()
  +dynamic setGoal()
  +Widget build()
  +dynamic validate()
  +dynamic reset()
  +void showGoalSelectionBottomSheet()
}

"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "skorlife::screens::pfm::set_goal.dart::Goals"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<Map<String, dynamic>>"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "intl::src::intl::date_format.dart::DateFormat"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<dynamic>"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "skorlife::utils::mask_text_formatter.dart::MoneyMaskedTextController"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::pfm::set_goal.dart::_SetGoalPageState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::pfm::set_goal.dart::_SetGoalPageState"

class "skorlife::screens::pfm::set_goal.dart::GoalItemWidget" {
  +Goal item
  +bool selected
  +void Function()? onTap
  +dynamic getGoalIcon()
  +Widget build()
}

"skorlife::screens::pfm::set_goal.dart::GoalItemWidget" o-- "skorlife::screens::pfm::set_goal.dart::Goal"
"skorlife::screens::pfm::set_goal.dart::GoalItemWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::pfm::set_goal.dart::GoalItemWidget"

class "skorlife::screens::pfm::set_goal.dart::Goals" {
  +List<Goal> goal
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::set_goal.dart::Goal" {
  +String label
  +String code
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::pfm::update_savings::saving_update_screen.dart::SavingsUpdate" {
  +State<SavingsUpdate> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::pfm::update_savings::saving_update_screen.dart::SavingsUpdate"

class "skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState" {
  +List<SavingsData?> savingDataList
  +bool dataExists
  +FinancialGoalData? financialGoalData
  +num totalSavings
  +bool isSavingsDataUpdated
  +ValueNotifier<bool> isDisabled
  +DateTime now
  +dynamic appProvider
  +int budgetAmt
  +String? goalMonth
  +int? goalYear
  +UpdateSavingsModelData updateSavingData
  +PFMGoal goal
  +List<PFMGoalData> goalData
  +dynamic goalId
  +void initState()
  +Widget build()
  +String convertToName()
  +bool checkData()
  +dynamic updateSavingListTile()
  +dynamic updateSavingBottomSheet()
  +int convert()
  +Future<ApiResponse> setSavings()
  +dynamic getUpdateSavingData()
  +Future<ApiResponse> deleteGoal()
  +void prepareUi()
  +dynamic deleteButton()
  +num getTotalSavings()
  +dynamic getGoalData()
  +void onDataSet()
  +Future<void> updateCurrentMonthData()
}

"skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState" o-- "skorlife::maps::dashboard.dart::FinancialGoalData"
"skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState" o-- "skorlife::maps::dashboard.dart::UpdateSavingsModelData"
"skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState" o-- "skorlife::maps::dashboard.dart::PFMGoal"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState"
"skorlife::utils::listener.dart::DataSetListener" <|-- "skorlife::screens::pfm::update_savings::saving_update_screen.dart::_SavingsUpdateState"

class "skorlife::screens::kyc::kyc_info_2.dart::KycInfo2" {
  +void Function(bool, String) onErrorMessage
  +_KycInfo2State createState()
}

"skorlife::screens::kyc::kyc_info_2.dart::KycInfo2" o-- "skorlife::screens::kyc::kyc_info_2.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_2.dart::KycInfo2"

class "skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" {
  +bool isLastName
  +String thresHoldDateErrorMessage
  +String thresHoldNameErrorMessage
  +String thresHoldNikErrorMessage
  +bool collapse
  +void Function(bool, String) onErrorMessage
  +TextEditingController disabledLastNameController
  +ValueNotifier<String> cityVal
  +AppProvider appProvider
  +ValueNotifier<int> tried
  +ValueNotifier<int> userTried
  +void initState()
  +void updateKyc()
  +void getKycThreshold()
  +void updateName()
  +dynamic onPressHandler()
  +Widget build()
}

"skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" o-- "skorlife::screens::kyc::kyc_info_2.dart::void Function(bool, String)"
"skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_2.dart::_KycInfo2State"

class "skorlife::screens::kyc::kyc_consent.dart::KycConsent" {
  +void Function(bool, String) onErrorMessage
  +State<KycConsent> createState()
}

"skorlife::screens::kyc::kyc_consent.dart::KycConsent" o-- "skorlife::screens::kyc::kyc_consent.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_consent.dart::KycConsent"

class "skorlife::screens::kyc::kyc_consent.dart::_KycConsentState" {
  +ValueNotifier<bool> checkClicked
  +bool disabled
  +bool isEmailShow
  +TextEditingController emailController
  +TextEditingController ktpNameController
  +void initState()
  +Widget build()
  +dynamic pageLoaded()
  +dynamic checkGoalAndIncomeSet()
  -Future<void> _checkIsCreditReportAvailable()
}

"skorlife::screens::kyc::kyc_consent.dart::_KycConsentState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::kyc::kyc_consent.dart::_KycConsentState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_consent.dart::_KycConsentState"

class "skorlife::screens::kyc::front_camera.dart::FrontCamera" {
  +_FrontCameraState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::front_camera.dart::FrontCamera"

class "skorlife::screens::kyc::front_camera.dart::_FrontCameraState" {
  +CameraController? controller
  +bool isCameraInitialized
  +FlashMode? currentFlashMode
  +void onNewCameraSelected()
  +void initState()
  +void didChangeAppLifecycleState()
  +void dispose()
  +void takePicture()
  +Widget cameraController()
  +Widget build()
}

"skorlife::screens::kyc::front_camera.dart::_FrontCameraState" o-- "camera::src::camera_controller.dart::CameraController"
"skorlife::screens::kyc::front_camera.dart::_FrontCameraState" o-- "camera_platform_interface::src::types::flash_mode.dart::FlashMode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::front_camera.dart::_FrontCameraState"

class "skorlife::screens::kyc::kyc_info_3.dart::KycInfo3" {
  +State<KycInfo3> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_3.dart::KycInfo3"

class "skorlife::screens::kyc::kyc_info_3.dart::_KycInfo3State" {
  +void initState()
  +void popup()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_3.dart::_KycInfo3State"

class "skorlife::screens::kyc::email_credential.dart::EmailCredential" {
  +State<EmailCredential> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::email_credential.dart::EmailCredential"

class "skorlife::screens::kyc::email_credential.dart::_EmailCredentialState" {
  {static} +bool isCopied
  +FocusNode focusNode
  +FocusNode confirmFocusNode
  +ValueNotifier<bool> checkBox
  +ValueNotifier<bool> disabled
  +ValueNotifier<bool> credentialAvailable
  {static} +ValueNotifier<bool> vis
  {static} +ValueNotifier<bool> valChanged
  {static} +ValueNotifier<bool> showPassword
  {static} +ValueNotifier<bool> showConfirmPassword
  {static} +ValueNotifier<bool> passValChanged
  {static} +ValueNotifier<bool> confirmPassValChanged
  {static} +TextEditingController pc
  {static} +TextEditingController cpc
  {static} +void callPasswordChangeBtmSheet()
  {static} +String? validatePassword()
  {static} +void callPasswordChange()
  +void initState()
  +Widget build()
  +Future<void> copyToClipboardWithExpiry()
}

"skorlife::screens::kyc::email_credential.dart::_EmailCredentialState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"skorlife::screens::kyc::email_credential.dart::_EmailCredentialState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::kyc::email_credential.dart::_EmailCredentialState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::email_credential.dart::_EmailCredentialState"

class "skorlife::screens::kyc::internal::init_page.dart::KYCInitPage" {
  +State<KYCInitPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::init_page.dart::KYCInitPage"

class "skorlife::screens::kyc::internal::init_page.dart::_KYCInitPageState" {
  +bool timeOver
  +bool proceed
  +ValueNotifier<double> progressed
  +void initState()
  +Future<void> callInit()
  +Widget build()
  +void callError()
}

"skorlife::screens::kyc::internal::init_page.dart::_KYCInitPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<double>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::init_page.dart::_KYCInitPageState"

class "skorlife::screens::kyc::internal::kyc_consent.dart::KycUserConsent" {
  +State<KycUserConsent> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::kyc_consent.dart::KycUserConsent"

class "skorlife::screens::kyc::internal::kyc_consent.dart::_KycUserConsentState" {
  +ValueNotifier<bool> checkbox1
  +ValueNotifier<bool> checkbox2
  +ValueNotifier<bool> isScroll
  +GlobalKey<State<StatefulWidget>> scrollToKey
  +bool isMore
  +bool isMore1
  +bool isScrollControlled
  +ScrollController scrollController
  +dynamic appProvider
  +double tAndCTextHeight
  +void initState()
  -void _hideAppBar()
  -void _showAppBar()
  +void dispose()
  +Widget build()
}

"skorlife::screens::kyc::internal::kyc_consent.dart::_KycUserConsentState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::kyc::internal::kyc_consent.dart::_KycUserConsentState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"skorlife::screens::kyc::internal::kyc_consent.dart::_KycUserConsentState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::kyc_consent.dart::_KycUserConsentState"

class "skorlife::screens::kyc::internal::digital_signature_consent.dart::DigitalSignatureConsent" {
  +void Function(bool, String) onErrorMessage
  +State<DigitalSignatureConsent> createState()
}

"skorlife::screens::kyc::internal::digital_signature_consent.dart::DigitalSignatureConsent" o-- "skorlife::screens::kyc::internal::digital_signature_consent.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::digital_signature_consent.dart::DigitalSignatureConsent"

class "skorlife::screens::kyc::internal::digital_signature_consent.dart::_DigitalSignatureConsentState" {
  +ValueNotifier<bool> checkClicked
  +bool disabled
  +dynamic appProvider
  +void initState()
  +Widget build()
}

"skorlife::screens::kyc::internal::digital_signature_consent.dart::_DigitalSignatureConsentState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::digital_signature_consent.dart::_DigitalSignatureConsentState"

abstract class "skorlife::screens::kyc::internal::kyc_form_page.dart::ValueChangedListener" {
  +dynamic changedValue()
}

class "skorlife::screens::kyc::internal::kyc_form_page.dart::KycFormPage" {
  +bool skipConsent
  +bool showNameAndDobErrorValidation
  +State<KycFormPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::kyc_form_page.dart::KycFormPage"

class "skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState" {
  +bool isLastName
  +String thresholdDateErrorMessage
  +String thresholdNameErrorMessage
  +String thresholdNikErrorMessage
  +bool collapse
  +bool isButtonDisable
  +bool isKontact
  +bool isSelfieIdentity
  +bool isScrollControlled
  +TextEditingController disabledLastNameController
  +ValueNotifier<String> cityVal
  +ScrollController scrollController
  +ValueNotifier<bool> isDisabled
  +TextEditingController docIdController
  +TextEditingController pinCodeController
  +TextEditingController nameController
  +TextEditingController emailController
  +TextEditingController phoneController
  +TextEditingController addressController
  +TextEditingController villageController
  +TextEditingController occupationController
  +TextEditingController districtController
  +TextEditingController birthPlaceController
  +dynamic appProvider
  +DateTime currentBackPressTime
  +void initState()
  +dynamic checkBtn()
  +Future<bool> onWillPop()
  +void dispose()
  +Widget build()
  +dynamic loadData()
  +void changedValue()
  +void updateData()
  +dynamic openWarningSheet()
  +dynamic verifyDataBottomSheet()
}

"skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState"
"skorlife::screens::kyc::internal::kyc_form_page.dart::ValueChangedListener" <|-- "skorlife::screens::kyc::internal::kyc_form_page.dart::_KycFormPageState"

class "skorlife::screens::kyc::internal::utils::colors.dart::AppColors" {
  {static} +Color divider
  {static} +Color darkBlue
  {static} +Color darkPowderBlue
  {static} +Color shadeOfDarkSlateBlue
  {static} +Color cyanBlue
  {static} +Color lightPowderBlue
  {static} +Color blueberry
  {static} +Color carolinaBlue
  {static} +Color krishnaBlue
  {static} +Color sanctuarySpa
  {static} +Color mildBlue
  {static} +Color darkSKyBlue
  {static} +Color orangeRed
  {static} +Color sunsetOrange
  {static} +Color bittersweet
  {static} +Color seashell
  {static} +Color pink
  {static} +Color redViolet
  {static} +Color cottonCandy
  {static} +Color governorBay
  {static} +Color ufoGreen
  {static} +Color shadeGreenCyan
  {static} +Color shadeOfYellow
  {static} +Color tangerineYellow
  {static} +Color black
  {static} +Color darkShadeOfGray
  {static} +Color eclipse
  {static} +Color darkGray
  {static} +Color gray
  {static} +Color blackMana
  {static} +Color zambeziGray
  {static} +Color graniteGray
  {static} +Color gray44
  {static} +Color fordGray
  {static} +Color gray68
  {static} +Color gray81
  {static} +Color silverGray
  {static} +Color gainsboro
  {static} +Color gray88
  {static} +Color gray89
  {static} +Color mystic
  {static} +Color powderWhite
  {static} +Color approxSolitude
  {static} +Color gray85
  {static} +Color lightBlue
  {static} +Color ghostWhite
  {static} +Color approxGhostWhite
  {static} +Color whiteSmoke
  {static} +Color white
  {static} +Color lightRed
  {static} +Color alizarin
  {static} +Color lightBlack
  {static} +Color lightwhite
  {static} +Color azureRadiance
  {static} +Color cylindrical
  {static} +Color lightshadeRed
  {static} +Color darkyellow
  {static} +Color paleyellow
  {static} +Color azureradiance
  {static} +Color darkgreen
  {static} +Color lightgreen
  {static} +Color lightred
  {static} +Color darkred
  {static} +Color gray87
  {static} +Color mediumlightshadeRed
  {static} +Color darkpowderblue
  {static} +Color jordyblue
  {static} +Color palegreen
  {static} +Color grey92
  {static} +Color grey91
  {static} +Color greenborder
  {static} +Color gray59
  {static} +Color gray20
  {static} +Color gray77
  {static} +Color emeraldgreen
  {static} +Color supernova
  {static} +Color expirdcolor
  {static} +Color middlegreenyellow
  {static} +Color approxred
  {static} +Color lightshadegray
  {static} +Color lightcyan
  {static} +Color limegreen
  {static} +Color processgray
  {static} +Color updatebackground
  {static} +Color silver
  {static} +Color carrotLighter
  {static} +Color carrot
  {static} +Color carrotDark
  {static} +Color tomatoLightest
  {static} +Color tomatoBackground
  {static} +Color yellowDark
  {static} +Color yellowLight
  {static} +Color green
  {static} +Color grayLight1
  {static} +Color grayLight2
  {static} +Color grayLight3
  {static} +Color red
  {static} +Color lightMystic
  {static} +Color greenNew
  {static} +Color bgNotifi
  {static} +Color greenBg
  {static} +Color greenTextColor
  {static} +Color lightGreenBg
  {static} +Color lightGrayBg
  {static} +Color pageBg
  {static} +Color swamp
  {static} +Color darkBlack
  {static} +Color snow
  {static} +Color aliceBlue
  {static} +Color onahau
  {static} +Color puertoRico
  {static} +Color floralWhite
  {static} +Color amber
  {static} +Color darkLemon
  {static} +Color fireBrick
  {static} +String kol_1
  {static} +String kol_2
  {static} +String kol_3
  {static} +String kol_4
  {static} +String kol_5
}

"skorlife::screens::kyc::internal::utils::colors.dart::AppColors" o-- "dart::ui::Color"

class "skorlife::screens::kyc::internal::utils::language.dart::Language" {
  {static} +String lngDobRequired
  {static} +String lngNIK
  {static} +String lngPersonalIdentity
  {static} +String lngName
  {static} +String lngDOB
  {static} +String lngRetakeSelfiePhoto
  {static} +String lngSelfieBtSheetTxt
  {static} +String lngGender
  {static} +String lngKtpMessageAlert
  {static} +String permissionHeader
  {static} +String lngNIKErrorDesc2
  {static} +String permissionCamera
  {static} +String permissionSettings
  {static} +String lngMaritialStatus
  {static} +String lngOccupation
  {static} +String phoneNumber
  {static} +String lngAddress
  {static} +String lngFullAddress
  {static} +String lngRetakeSelfie
  {static} +String lngUnderstand
  {static} +String lngVillage
  {static} +String lngSubDistrict
  {static} +String lngProvinsi
  {static} +String lngCity
  {static} +String lngTapToSelect
  {static} +String lngZipCode
  {static} +String lngContinue
  {static} +String lngplaceOfBirth
  {static} +String lngAccordanceWithEKTP
  {static} +String lngIsRequired
  {static} +String lngKycConsentButtonText
  {static} +String tandc1
  {static} +String tandc1_a
  {static} +String tandc2
  {static} +String tandc3
  {static} +String lngTakePhoto
  {static} +String lngEmail
  {static} +String lngInvalidEmailMsg
  {static} +String lngMoreDetails
  {static} +String lngSelfieCondition
  {static} +String lngSelfieheading
  {static} +String lngLevel2Of4
  {static} +String lngLevel3Of4
  {static} +String lngLevel4Of4
  {static} +String ojkFooterText
  {static} +String lngConsentTitle
  {static} +String lngTerms1Head
  {static} +String lngTerms2Head
  {static} +String lngSelfieDescription
  {static} +String lngSelfiePicture
  {static} +String lngIdentityVerification
  {static} +String lngRetakePhoto
  {static} +String lngKtpPhoto
  {static} +String lngIdentityCheck
  {static} +String lngDigitalSignature
  {static} +String lngSelfieOfflineTitle
  {static} +String lngSelfieOfflineDesc
  {static} +String lngEmailDescText
  {static} +String lngDemogBtmShtBtnText
  {static} +String lngEnterDOB
  {static} +String lngEnterName
  {static} +String lngKTPNameErrorDesc
  {static} +String lngKTPNameErrorTitle
  {static} +String lngKTPDOBErrorDesc
  {static} +String lngKTPDOBErrorTitle
  {static} +String successOfflineTitle
  {static} +String successOfflineDesc
  {static} +String successTitle
  {static} +String successDesc
  {static} +String successDesc1
  {static} +String lngGeneralErrorTitle
  {static} +String lngGeneralErrorDesc
  {static} +String lngConsentTandC1
  {static} +String lngConsentTandC2
  {static} +String lngTandCUrl
  {static} +String lngAnd
  {static} +String lngConsentTandC3
  {static} +String lngPrivacyUrl
  {static} +String serverresponserarsingerror
  {static} +String lngNameandDOBTitle
  {static} +String lngNameandDOBMessage
  {static} +String no
  {static} +String yes
  {static} +String lngNIKErrorTitle
  {static} +String lngNIKErrorDesc
  {static} +String lngKontak
  {static} +String lngMore
  {static} +String lngDisclaimerTitle
  {static} +String lngDisclaimerDesc1
  {static} +String lngDisclaimerDesc2
  {static} +String lngDisclaimerDesc3
  {static} +String lngNikConfirmTitle
  {static} +String lngNikConfirmMessage
  {static} +String lngGeneralTimeOutErrorDesc
  {static} +String lngPhotoSelfie
  {static} +String lngPhotoSelfieTitle1
  {static} +String lngPhotoSelfieTitle2
  {static} +String lngPhotoSelfieTitle3
  {static} +String lngSelfieDescription1
  {static} +String lngBtTxt
  {static} +String lngKycConsentTitle
  {static} +String lngKycConsentBtnText
  {static} +String lngConfirmPersonalData
  {static} +String lngDataMatches
  {static} +String lngSelfieIdentity
  {static} +String lngDataReconfirmation
  {static} +String lngDataFailToAccess
  {static} +String lngDataInformation
  {static} +String lngCheckData
  {static} +String lngOpportunityForData
  {static} +String lngEachDataVerification
  {static} +String lngSkorlifeLimitsVerification
  {static} +String lngDataSelfieVerification
  {static} +String lngVerificationFail
  {static} +String lngWarningBtmSheetTitle
}

class "skorlife::screens::kyc::internal::models::maps.dart::ReqCodeMap" {
  +int? code
  +String? errorCode
  +String? errormessage
  +String? codeString
  +int? otpAttempts
  +double? faceMatchScore
  +String? otpAttemptsMessage
  +String? jwt
  +ClientInfoMap? clientinfo
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::maps.dart::ReqCodeMap" o-- "skorlife::screens::kyc::internal::models::maps.dart::ClientInfoMap"

class "skorlife::screens::kyc::internal::models::maps.dart::ClientInfoMap" {
  +String? alerttype
  +bool? enableno
  +bool? enableyes
  +String? message
  +String? title
  +String? noerror
  +String? yeserror
  +bool? enableok
  +bool? timeout
  +DateTime? lastOtpGenerateTime
  +String? remainingTimeLabel
  +String? buttonLabel
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::maps.dart::CapturedDocDataMap" {
  +String? idnumber
  +String? name
  +String? firstName
  +String? lastName
  +String? bloodtype
  +String? religion
  +String? gender
  +String? birthplacebirthday
  +String? province
  +String? city
  +String? district
  +String? village
  +String? rtrw
  +String? occupation
  +String? expirydate
  +String? nationality
  +String? maritalstatus
  +String? address
  +String? dob
  +String? postalCode
  +String? birthplace
  +String? email
  +String? phone
  +bool? consent1
  +bool? consent2
  +String? consentAt
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::maps.dart::StatusResp" {
  +String code
  +StatusRespData data
  +String message
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::maps.dart::StatusResp" o-- "skorlife::screens::kyc::internal::models::maps.dart::StatusRespData"

class "skorlife::screens::kyc::internal::models::maps.dart::StatusRespData" {
  +Demong demong
  +Facematch facematch
  +bool consentGiven
  +String status
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::maps.dart::StatusRespData" o-- "skorlife::screens::kyc::internal::models::maps.dart::Demong"
"skorlife::screens::kyc::internal::models::maps.dart::StatusRespData" o-- "skorlife::screens::kyc::internal::models::maps.dart::Facematch"

class "skorlife::screens::kyc::internal::models::maps.dart::Demong" {
  +bool status
  +Score score
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::maps.dart::Demong" o-- "skorlife::screens::kyc::internal::models::maps.dart::Score"

class "skorlife::screens::kyc::internal::models::maps.dart::Score" {
  +double fullName
  +double dob
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::maps.dart::Facematch" {
  +bool status
  +double score
  +double liveness
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::maps.dart::DemogUpdateRes" {
  +String code
  +DemogUpdateResData data
  +String message
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::maps.dart::DemogUpdateRes" o-- "skorlife::screens::kyc::internal::models::maps.dart::DemogUpdateResData"

class "skorlife::screens::kyc::internal::models::maps.dart::DemogUpdateResData" {
  +String id
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::InitResp" {
  +String code
  +String id
  +String accessToken
  +int expiresIn
  +Info? info
  +String tokenType
  +String scope
  +String message
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::general_res_model.dart::InitResp" o-- "skorlife::screens::kyc::internal::models::general_res_model.dart::Info"

class "skorlife::screens::kyc::internal::models::general_res_model.dart::Info" {
  +String? type
  +String? title
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::KycResp" {
  +String code
  +KycRespData data
  +String message
  +Map<String, dynamic> toJson()
}

"skorlife::screens::kyc::internal::models::general_res_model.dart::KycResp" o-- "skorlife::screens::kyc::internal::models::general_res_model.dart::KycRespData"

class "skorlife::screens::kyc::internal::models::general_res_model.dart::KycRespData" {
  +String refID
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::KycConsentResp" {
  +String code
  +String message
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::KycConsentRespData" {
  +String licenseID
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::ProvinsiRespMap" {
  +int? code
  +List<ProvinsiDataMap>? data
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::ProvinsiDataMap" {
  +String? id
  +String? province
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::CityRespMap" {
  +int? code
  +List<CityDataMap>? data
  +String? message
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::kyc::internal::models::general_res_model.dart::CityDataMap" {
  +String? id
  +String? province
  +String? city
  +Map<String, dynamic> toJson()
}

abstract class "skorlife::screens::kyc::internal::kyc.dart::KycStatusListener" {
  +void kycInitStatus()
  +void kycStepStatus()
  +void kycCompleted()
  +void kycFailed()
}

class "skorlife::screens::kyc::internal::kyc.dart::Kyc" {
  {static} +dynamic userDataJson
  {static} +String? docPath
  {static} +String? secretKey
  {static} +String? clientID
  {static} +String? clientToken
  {static} +String? authToken
  {static} +String? userRef
  {static} +String? cbiKycId
  {static} +dynamic deviceInformation
  {static} +dynamic locationInformation
  {static} +dynamic kycConsentResp
  {static} +dynamic kycStatusResp
  {static} +dynamic kycResp
  {static} +TextEditingController newNik
  {static} +TextEditingController newName
  {static} +bool isPastUser
  {static} +bool isInitializationCompleted
  {static} +String kycEventID
  {static} +String newDob
  {static} +ValueNotifier<bool> valChanged
  {static} +ValueNotifier<bool> nikChanged
  {static} +ValueNotifier<bool> nameChanged
  {static} +ValueNotifier<bool> dobChanged
  {static} +ValueNotifier<bool> isWarningBottomSheet
  {static} +ValueNotifier<bool> isReVerify
  {static} +ValueNotifier<bool> ktpAlreadyUploaded
  {static} +ValueNotifier<bool> accessCreditReport
  {static} +CapturedDocDataMap? capturedDocDataMap
  {static} +List<Map<String, dynamic>> provinsiOptions
  {static} +List<Map<String, dynamic>> cityOptions
  +Future<dynamic> initSdk()
  +Future<void> initData()
  {static} +Future<ApiResponse> getPreviousKyc()
  +Future<ApiResponse> callFaceMatch()
  {static} +Future<ApiResponse> updateKyc()
  +Future<dynamic> startKycListener()
  +Future<ApiResponse> kycConsent()
  {static} +void callErrorBtmSheetIBKYCGenericError()
  {static} +dynamic resetKycFlow()
  {static} +void callErrorBtmSheet()
  {static} +void callErrorBtmSheetIB()
  {static} +Future<ApiResponse> updateDemog()
  {static} +dynamic validateBSIBBtn()
  {static} +dynamic checkNIK()
  {static} +dynamic checkName()
  {static} +bool accessDenied()
  +void selfieFailBlockedForeverBtmsheet()
  +Widget selfieFailInformationCard()
}

"skorlife::screens::kyc::internal::kyc.dart::Kyc" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::kyc::internal::kyc.dart::Kyc" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::kyc::internal::kyc.dart::Kyc" o-- "skorlife::maps::common.dart::CapturedDocDataMap"

class "skorlife::screens::kyc::internal::screens::front_camera.dart::FrontCamera" {
  +_FrontCameraState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::screens::front_camera.dart::FrontCamera"

class "skorlife::screens::kyc::internal::screens::front_camera.dart::_FrontCameraState" {
  +CameraController? controller
  +bool isCameraInitialized
  +FlashMode? currentFlashMode
  +void onNewCameraSelected()
  +void initState()
  +void didChangeAppLifecycleState()
  +void dispose()
  +void takePicture()
  +Widget cameraController()
  +Widget build()
  +void getCameras()
}

"skorlife::screens::kyc::internal::screens::front_camera.dart::_FrontCameraState" o-- "camera::src::camera_controller.dart::CameraController"
"skorlife::screens::kyc::internal::screens::front_camera.dart::_FrontCameraState" o-- "camera_platform_interface::src::types::flash_mode.dart::FlashMode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::screens::front_camera.dart::_FrontCameraState"

class "skorlife::screens::kyc::internal::kyc_selfie.dart::KycSelfie" {
  +State<KycSelfie> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::kyc_selfie.dart::KycSelfie"

class "skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" {
  +dynamic appProvider
  +ValueNotifier<bool> loading
  +ValueNotifier<int> selfieState
  +String imagePath
  +String videTransactionId
  +bool isPaused
  +Timer? timer
  +Timer? kycVerificationTimer
  +double progress
  +Duration totalDuration
  +Duration interval
  +int updates
  +bool isStopProgressBar
  +PageController pageController
  +ValueNotifier<String> nikVal
  +ValueNotifier<String> nameVal
  +ValueNotifier<String> dobVal
  +List<Map<String, dynamic>> pageviewData
  +bool fromError
  +bool timerStarted
  +dynamic errResponse
  +void initState()
  +void restartTimer()
  +void startTimer()
  +void startProgressBar()
  +void stopProgressBar()
  +void dispose()
  +Widget build()
  +Future<void> getSelfieFromVidaLivelinessSDK()
  +Future<File> createSelfieFileFromImageByteArray()
  +Future<ApiResponse> callFaceMatch()
  +Future<void> initializeNativeChannel()
  +dynamic item()
  +void showPopUp()
  +void handleError()
  +void handleErrorResponse()
  +dynamic callErrorBtmSheet()
  +void handleErrorKYCGeneric()
  +void openSelfiePopUp()
  +Future<void> selfieErrorBottomSheet()
  +Future<void> callFaceMatchApi()
  +Future<void> selfieErrorBottomSheetKYCGenericError()
  +void checkSelfieAgainBottomsheet()
  +dynamic getFMStatus()
}

"skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" o-- "dart::async::Timer"
"skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" o-- "flutter::src::widgets::page_view.dart::PageController"
"skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "skorlife::screens::kyc::internal::kyc_selfie.dart::_KycSelfieState"

class "skorlife::screens::kyc::internal::success_screen.dart::SuccessScreen" {
  +bool offline
  +bool analyticsDataSent
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::success_screen.dart::SuccessScreen"

class "skorlife::screens::kyc::internal::kyc_info_screen.dart::KycInfoScreen" {
  +State<KycInfoScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::kyc_info_screen.dart::KycInfoScreen"

class "skorlife::screens::kyc::internal::kyc_info_screen.dart::_KycInfoScreenState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::kyc_info_screen.dart::_KycInfoScreenState"

class "skorlife::screens::kyc::internal::genera_error_screen.dart::GeneralErrorScreen" {
  +String asset
  +String title
  +String message
  +String buttonText
  +bool buttonRequired
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::genera_error_screen.dart::GeneralErrorScreen"

class "skorlife::screens::kyc::internal::kyc_loading_page.dart::KycLoadingPage" {
  +State<KycLoadingPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::kyc_loading_page.dart::KycLoadingPage"

class "skorlife::screens::kyc::internal::kyc_loading_page.dart::_KycLoadingPageState" {
  +bool isPaused
  +Timer? timer
  +Timer? kycVerificationTimer
  +double progress
  +Duration totalDuration
  +Duration interval
  +int updates
  +bool isStopProgressBar
  +void startProgressBar()
  +void initState()
  +void stopProgressBar()
  +dynamic item()
  +Widget build()
}

"skorlife::screens::kyc::internal::kyc_loading_page.dart::_KycLoadingPageState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::kyc_loading_page.dart::_KycLoadingPageState"

class "skorlife::screens::kyc::internal::search_credit_loading.dart::SearchCreditLoading" {
  +void Function(bool, String) onErrorMessage
  +State<SearchCreditLoading> createState()
}

"skorlife::screens::kyc::internal::search_credit_loading.dart::SearchCreditLoading" o-- "skorlife::screens::kyc::internal::search_credit_loading.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::search_credit_loading.dart::SearchCreditLoading"

class "skorlife::screens::kyc::internal::search_credit_loading.dart::_SearchCreditLoadingState" {
  +int secondsRemaining
  +int timeout
  +Timer timer
  +bool refreshCall
  +void initState()
  +dynamic callConsentAPI()
  +Widget build()
  +dynamic checkGoalAndIncomeSet()
  -Future<void> _checkIsCreditReportAvailable()
  +dynamic callRefresh()
}

"skorlife::screens::kyc::internal::search_credit_loading.dart::_SearchCreditLoadingState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::search_credit_loading.dart::_SearchCreditLoadingState"

class "skorlife::screens::kyc::internal::widgets::calendar.dart::Calendar" {
  +String title
  +String? initialValue
  +bool isCalenderDisabled
  +dynamic Function(dynamic) onTap
  +bool showErrorValidation
  +_CalendarState createState()
}

"skorlife::screens::kyc::internal::widgets::calendar.dart::Calendar" o-- "null::dynamic Function(dynamic)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::internal::widgets::calendar.dart::Calendar"

class "skorlife::screens::kyc::internal::widgets::calendar.dart::_CalendarState" {
  +DateTime date
  +bool isInitialValue
  +void initState()
  +void selectDate()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::internal::widgets::calendar.dart::_CalendarState"

class "skorlife::screens::kyc::internal::widgets::option_bottom_sheet.dart::OptionBottomSheet" {
  +ValueNotifier<List<dynamic>> filteredList
  +ValueNotifier<String> searchText
  +TextEditingController searchController
  +String title
  +List<Map<String, dynamic>> options
  +String optionKey
  +Function onClick
  +String? selectedOption
  +bool dropDownDisabled
  +bool errorValidation
  +String? hint
  +bool shouldShowSearchBox
  +void onChangeHandler()
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<dynamic>>"
"skorlife::screens::kyc::internal::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::kyc::internal::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::option_bottom_sheet.dart::OptionBottomSheet"

class "skorlife::screens::kyc::internal::widgets::bg_button.dart::BGButton" {
  +String title
  +bool isDisable
  +void Function()? onTap
  +Color? bgcolor
  +Color? textColor
  +double? borderRadius
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::bg_button.dart::BGButton" o-- "dart::ui::void Function()"
"skorlife::screens::kyc::internal::widgets::bg_button.dart::BGButton" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::bg_button.dart::BGButton"

class "skorlife::screens::kyc::internal::widgets::nik_card.dart::NikCard" {
  +String? nikNumber
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::nik_card.dart::NikCard"

class "skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar" {
  +String? title
  +String? subTitle
  +Color? backgroundColor
  +Color? color
  +void Function()? onPressed
  +Size preferredSize
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::Color"
"skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::void Function()"
"skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::Size"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar"
"flutter::src::widgets::preferred_size.dart::PreferredSizeWidget" <|-- "skorlife::screens::kyc::internal::widgets::custom_appbar.dart::CustomAppBar"

class "skorlife::screens::kyc::internal::widgets::skorku_logo.dart::SkorkuLogo" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::skorku_logo.dart::SkorkuLogo"

class "skorlife::screens::kyc::internal::widgets::horizontal_steps.dart::HorizontalSteps" {
  +int steps
  +bool iskyc
  +Color? stepColor
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::horizontal_steps.dart::HorizontalSteps" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::horizontal_steps.dart::HorizontalSteps"

class "skorlife::screens::kyc::internal::widgets::webview.dart::WebViewAppBar" {
  +String title
  +String url
  +ValueNotifier<bool> showLoading
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::webview.dart::WebViewAppBar" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::webview.dart::WebViewAppBar"

class "skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" {
  +String title
  +bool isDisable
  +bool isSearch
  +bool suffixIconPresent
  +IconData? suffixIcon
  +TextEditingController controller
  +String? subTitle
  +String? infoString
  +int? maxLines
  +int? maxLength
  +TextInputType? keyboardType
  +TextInputFormatter? inputFormatters
  +Function? onChange
  +dynamic Function()? suffixIconClick
  +String? placeholder
  +String? errorText
  +bool emptyValidation
  +bool validationborder
  {static} -dynamic _onChange()
  +Widget build()
}

"skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" o-- "flutter::src::widgets::icon_data.dart::IconData"
"skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" o-- "flutter::src::services::text_input.dart::TextInputType"
"skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" o-- "flutter::src::services::text_formatter.dart::TextInputFormatter"
"skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox" o-- "null::dynamic Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::input_box.dart::InputBox"

class "skorlife::screens::kyc::internal::widgets::footer.dart::FooterView" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::internal::widgets::footer.dart::FooterView"

class "skorlife::screens::kyc::kyc_status.dart::KycProcess" {
  +State<KycProcess> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_status.dart::KycProcess"

class "skorlife::screens::kyc::kyc_status.dart::_KycProcessState" {
  +String cbiKycId
  +String fromPage
  +ValueNotifier<int> currentStep
  +bool kycLoading
  +bool kycSuccess
  +ValueNotifier<bool> proceed
  +ValueNotifier<int> timer
  +void initState()
  +dynamic initKyc()
  +Widget build()
  +dynamic item()
  +void kycCompleted()
  +dynamic showTimer()
  +void kycFailed()
  +void kycInitStatus()
  +void kycStepStatus()
  +void scoreRefreshRequestFailed()
  +void scoreRefreshCompleted()
  +void scoreRefreshInProgress()
  +void scoreRefreshStop()
  +Future<bool> updateStatus()
  +void stepStatus()
}

"skorlife::screens::kyc::kyc_status.dart::_KycProcessState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::kyc::kyc_status.dart::_KycProcessState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_status.dart::_KycProcessState"
"kyc::kyc.dart::KycStatusListener" <|-- "skorlife::screens::kyc::kyc_status.dart::_KycProcessState"

class "skorlife::screens::kyc::step_progress_page.dart::StepProgressPage" {
  +State<StepProgressPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::step_progress_page.dart::StepProgressPage"

class "skorlife::screens::kyc::step_progress_page.dart::_StepProgressPageState" {
  +String number
  +String title
  +String subTitle
  +bool isDone
  +AppProvider appProvider
  +bool toSelfie
  +void initState()
  +void didChangeDependencies()
  +List<Widget> content()
  +Widget build()
  +dynamic getFacematchStatus()
}

"skorlife::screens::kyc::step_progress_page.dart::_StepProgressPageState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::step_progress_page.dart::_StepProgressPageState"

class "skorlife::screens::kyc::step_progress_page.dart::ProgressStep" {
  +String number
  +String title
  +String subTitle
  +bool isDone
  +bool iconRequired
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::step_progress_page.dart::ProgressStep"

class "skorlife::screens::kyc::paid_promo.dart::PaidPromoScreen" {
  +State<PaidPromoScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::paid_promo.dart::PaidPromoScreen"

class "skorlife::screens::kyc::paid_promo.dart::_PaidPromoScreenState" {
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::paid_promo.dart::_PaidPromoScreenState"

class "skorlife::screens::kyc::back_camera.dart::BackCamera" {
  +_BackCameraState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::back_camera.dart::BackCamera"

class "skorlife::screens::kyc::back_camera.dart::_BackCameraState" {
  +CameraController? controller
  +bool isCameraInitialized
  +FlashMode? currentFlashMode
  +void onNewCameraSelected()
  +void initState()
  +void didChangeAppLifecycleState()
  +void dispose()
  +void takePicture()
  +Widget cameraController()
  +Widget build()
}

"skorlife::screens::kyc::back_camera.dart::_BackCameraState" o-- "camera::src::camera_controller.dart::CameraController"
"skorlife::screens::kyc::back_camera.dart::_BackCameraState" o-- "camera_platform_interface::src::types::flash_mode.dart::FlashMode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::back_camera.dart::_BackCameraState"

class "skorlife::screens::kyc::kyc_info_preview.dart::KycInfoPreview" {
  +void Function(bool, String) onErrorMessage
  +_KycInfoPreviewState createState()
}

"skorlife::screens::kyc::kyc_info_preview.dart::KycInfoPreview" o-- "skorlife::screens::kyc::kyc_info_preview.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_preview.dart::KycInfoPreview"

class "skorlife::screens::kyc::kyc_info_preview.dart::_KycInfoPreviewState" {
  +ValueNotifier<int> tried
  +ValueNotifier<int> userTried
  +EnvironmentService envService
  +void Function(bool, String) onErrorMessage
  +String showInPageToast
  +bool ktpUploadButtonTapped
  +bool isTapped
  +void uploadDoc()
  +Future<void> systemCrashBottomSheetPopUp()
  +Future<void> sliderOptionBottomSheetPopUp()
  +dynamic timeOutCall()
  +void getKycThreshold()
  +void redirect()
  +void initState()
  +Widget build()
}

"skorlife::screens::kyc::kyc_info_preview.dart::_KycInfoPreviewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::kyc::kyc_info_preview.dart::_KycInfoPreviewState" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"skorlife::screens::kyc::kyc_info_preview.dart::_KycInfoPreviewState" o-- "skorlife::screens::kyc::kyc_info_preview.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_preview.dart::_KycInfoPreviewState"

class "skorlife::screens::kyc::time_out.dart::TimeOut" {
  +State<TimeOut> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::time_out.dart::TimeOut"

class "skorlife::screens::kyc::time_out.dart::_TimeOutState" {
  +int secondsRemaining
  +Timer timer
  +void initState()
  +Future<void> countDown()
  +Widget build()
}

"skorlife::screens::kyc::time_out.dart::_TimeOutState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::time_out.dart::_TimeOutState"

class "skorlife::screens::kyc::kyc_info_1.dart::KycInfo1" {
  +State<KycInfo1> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_1.dart::KycInfo1"

class "skorlife::screens::kyc::kyc_info_1.dart::_KycInfo1State" {
  +AppProvider appProvider
  +PageController pageController
  +int pageIndex
  +void initState()
  +void didChangeDependencies()
  +void popup()
  +dynamic setPageIndex()
  +Widget build()
  +dynamic pageLoaded()
}

"skorlife::screens::kyc::kyc_info_1.dart::_KycInfo1State" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::kyc::kyc_info_1.dart::_KycInfo1State" o-- "flutter::src::widgets::page_view.dart::PageController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_1.dart::_KycInfo1State"

class "skorlife::screens::kyc::kyc_info_1.dart::KTPGuide1" {
  +AppProvider appProvider
  +PageController controller
  +Widget build()
}

"skorlife::screens::kyc::kyc_info_1.dart::KTPGuide1" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::kyc::kyc_info_1.dart::KTPGuide1" o-- "flutter::src::widgets::page_view.dart::PageController"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::kyc_info_1.dart::KTPGuide1"

class "skorlife::screens::kyc::kyc_info_1.dart::KTPGuide2" {
  +AppProvider appProvider
  +State<KTPGuide2> createState()
}

"skorlife::screens::kyc::kyc_info_1.dart::KTPGuide2" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_1.dart::KTPGuide2"

class "skorlife::screens::kyc::kyc_info_1.dart::_KTPGuide2State" {
  +Widget build()
  +dynamic pageLoaded()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_1.dart::_KTPGuide2State"

class "skorlife::screens::kyc::kyc_info_final_preview.dart::KycInfoFinalPreview" {
  +_KycInfoFinalPreviewState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::kyc::kyc_info_final_preview.dart::KycInfoFinalPreview"

class "skorlife::screens::kyc::kyc_info_final_preview.dart::_KycInfoFinalPreviewState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::kyc::kyc_info_final_preview.dart::_KycInfoFinalPreviewState"

class "skorlife::screens::kyc::credit_report_error.dart::CreditReportError" {
  +String? asset
  +String? title
  +String? message
  +String? flow
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::kyc::credit_report_error.dart::CreditReportError"

class "skorlife::screens::credit_report_downloading.dart::CreditReportDownloading" {
  +State<CreditReportDownloading> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::credit_report_downloading.dart::CreditReportDownloading"

class "skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" {
  +int currentIndex
  +CarouselSliderController carouselController
  +int secondsRemaining
  +Timer timer
  +int initialTimeOut
  +int extendedTimeOut
  +int extendedTimerCheckInterval
  +int initialTimerCheckInterval
  +int timeout
  +int initialLoadingScreenIndex
  +bool isExtendedTimerRunning
  +bool isCreditReportAvailable
  +bool isStatusAPICallInprogress
  +List<Map<dynamic, dynamic>> imgList
  +LoadingType loadingType
  +CreditReportDownloadFrom creditReportDownloadFrom
  +AppProvider appProvider
  +List<dynamic> extendTimerCheckAtRemainSecArray
  +List<dynamic> initialTimerCheckAtRemainSecArray
  +String cbiEmail
  +String skorlifeEmail
  +String bureauCode
  +String fileUploadStatus
  +Future<void> getEmailsFromRemoteConfig()
  +void initState()
  +void dispose()
  +Future<void> countDown()
  +dynamic navigateToResubmitCreditReport()
  +Widget build()
  +dynamic storeDeviceDetails()
  -dynamic _getProgressBarSeconds()
  -dynamic _getProgressBar()
  -dynamic _getProgressText()
  -dynamic _getBodyCarouselView()
  -Future<bool> _checkIsCreditReportAvailable()
}

"skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" o-- "carousel_slider::carousel_controller.dart::CarouselSliderController"
"skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" o-- "dart::async::Timer"
"skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" o-- "skorlife::constants::helpers.dart::LoadingType"
"skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" o-- "skorlife::constants::helpers.dart::CreditReportDownloadFrom"
"skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::credit_report_downloading.dart::_CreditReportDownloadingState"

class "skorlife::screens::delete::delete_page.dart::DeletePage" {
  +void Function(bool, String) onErrorMessage
  +State<DeletePage> createState()
}

"skorlife::screens::delete::delete_page.dart::DeletePage" o-- "skorlife::screens::delete::delete_page.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::delete::delete_page.dart::DeletePage"

class "skorlife::screens::delete::delete_page.dart::_DeletePageState" {
  +void Function(bool, String) onErrorMessage
  +ValueNotifier<bool> isDataAvailable
  +dynamic accountDeleteUITexts
  +Map<String, Object> accountDeleteUITextsLocal
  +bool isDisable
  +DeleteAccountReasonsModel deleteAccountData
  +dynamic getDeletePageTexts()
  +void initState()
  +Widget build()
  +Future<dynamic> confirmationBottomsheet()
  +Future<dynamic> launchDeleteAccountReasons()
}

"skorlife::screens::delete::delete_page.dart::_DeletePageState" o-- "skorlife::screens::delete::delete_page.dart::void Function(bool, String)"
"skorlife::screens::delete::delete_page.dart::_DeletePageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::delete::delete_page.dart::_DeletePageState" o-- "skorlife::screens::delete::delete_page.dart::DeleteAccountReasonsModel"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::delete::delete_page.dart::_DeletePageState"

class "skorlife::screens::delete::delete_page.dart::DeleteAccountReasons" {
  +BuildContext rootContext
  +DeleteAccountReasonsModel deleteAccountReasons
  +Future<dynamic> launchSingleReasons()
  +Widget build()
}

"skorlife::screens::delete::delete_page.dart::DeleteAccountReasons" o-- "flutter::src::widgets::framework.dart::BuildContext"
"skorlife::screens::delete::delete_page.dart::DeleteAccountReasons" o-- "skorlife::screens::delete::delete_page.dart::DeleteAccountReasonsModel"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::delete::delete_page.dart::DeleteAccountReasons"

class "skorlife::screens::delete::delete_page.dart::SingleDeleteReasonWidget" {
  +DeleteAccountReasonsModel deleteAccountReasons
  +Reasons reasons
  +BuildContext rootContext
  +Widget build()
}

"skorlife::screens::delete::delete_page.dart::SingleDeleteReasonWidget" o-- "skorlife::screens::delete::delete_page.dart::DeleteAccountReasonsModel"
"skorlife::screens::delete::delete_page.dart::SingleDeleteReasonWidget" o-- "skorlife::screens::delete::delete_page.dart::Reasons"
"skorlife::screens::delete::delete_page.dart::SingleDeleteReasonWidget" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::delete::delete_page.dart::SingleDeleteReasonWidget"

class "skorlife::screens::delete::delete_page.dart::DeleteAccountReasonsModel" {
  +String? code
  +Data? data
  +Map<String, dynamic> toJson()
}

"skorlife::screens::delete::delete_page.dart::DeleteAccountReasonsModel" o-- "skorlife::screens::delete::delete_page.dart::Data"

class "skorlife::screens::delete::delete_page.dart::Data" {
  +String? title
  +String? description
  +List<String>? warningList
  +BottomSheet? bottomSheet
  +String? confirmationQuestion
  +String? deleteConfirmationTitle
  +String? deleteConfirmationMessage
  +String? button1Text
  +String? button2Text
  +Map<String, dynamic> toJson()
}

"skorlife::screens::delete::delete_page.dart::Data" o-- "skorlife::screens::delete::delete_page.dart::BottomSheet"

class "skorlife::screens::delete::delete_page.dart::BottomSheet" {
  +String? title
  +String? description
  +List<Reasons>? reasons
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::delete::delete_page.dart::Reasons" {
  +String? reason
  +String? type
  +String? title
  +String? description
  +dynamic details
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::delete::delete_page_email_confirm_bottom_sheet.dart::DeletePageEmailConfirmBottomSheet" {
  +dynamic Function()? onNavigateToDashboard
  +Widget build()
}

"skorlife::screens::delete::delete_page_email_confirm_bottom_sheet.dart::DeletePageEmailConfirmBottomSheet" o-- "null::dynamic Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::delete::delete_page_email_confirm_bottom_sheet.dart::DeletePageEmailConfirmBottomSheet"

class "skorlife::screens::auth::create_pin.dart::CreatePin" {
  +void Function(bool, String) onErrorMessage
  +_CreatePinState createState()
}

"skorlife::screens::auth::create_pin.dart::CreatePin" o-- "skorlife::screens::auth::create_pin.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::create_pin.dart::CreatePin"

class "skorlife::screens::auth::create_pin.dart::_CreatePinState" {
  +void Function(bool, String) onErrorMessage
  +String pin
  +String confirmPin
  +String flow
  +FocusNode focusNode
  +ScrollController scrollController
  +Future<void> onSavePin()
  +void dispose()
  +void initState()
  +Widget build()
  +dynamic goToEmail()
}

"skorlife::screens::auth::create_pin.dart::_CreatePinState" o-- "skorlife::screens::auth::create_pin.dart::void Function(bool, String)"
"skorlife::screens::auth::create_pin.dart::_CreatePinState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"skorlife::screens::auth::create_pin.dart::_CreatePinState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::create_pin.dart::_CreatePinState"

class "skorlife::screens::auth::registration_approved_page.dart::RegistrationApprovedPage" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::auth::registration_approved_page.dart::RegistrationApprovedPage"

class "skorlife::screens::auth::register.dart::Register" {
  +void Function(bool, String) onErrorMessage
  +String? pushNotificationDeeplinkData
  +Map<dynamic, dynamic>? deeplinkData
  +State<Register> createState()
}

"skorlife::screens::auth::register.dart::Register" o-- "skorlife::screens::auth::register.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::register.dart::Register"

class "skorlife::screens::auth::register.dart::_RegisterState" {
  +FocusNode phTextFN
  +bool isAgreeWithPrivacy
  +String mobileNumber
  +String email
  +void Function(bool, String) onErrorMessage
  +String countryCode
  +String showInPageToast
  +TextEditingController registerController
  +TextEditingController emailController
  +FocusNode focusNode
  +FocusNode emailFocusNode
  +FocusNode focusNode1
  +bool clearButtonEnable
  +bool disabledInput
  +bool validationFlag
  +ValueNotifier<bool> isButtonEnabled
  +void initState()
  +Future<void> registerReq()
  +Future<void> resetphoneReq()
  +void redirectToPin()
  +Future<void> registerUserExistBottomSheet()
  +Widget build()
}

"skorlife::screens::auth::register.dart::_RegisterState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"skorlife::screens::auth::register.dart::_RegisterState" o-- "skorlife::screens::auth::register.dart::void Function(bool, String)"
"skorlife::screens::auth::register.dart::_RegisterState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::auth::register.dart::_RegisterState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::register.dart::_RegisterState"

class "skorlife::screens::auth::forgot_pin_otp.dart::ForgotPinOtp" {
  +void Function(bool, String) onErrorMessage
  +_ForgotPinOtpState createState()
}

"skorlife::screens::auth::forgot_pin_otp.dart::ForgotPinOtp" o-- "skorlife::screens::auth::forgot_pin_otp.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::forgot_pin_otp.dart::ForgotPinOtp"

class "skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState" {
  +String otp
  +int secondsRemaining
  +bool enableResend
  +String cachedCountryCode
  +String cachedPhoneNumber
  +String showInPageToast
  +String changenumber
  +void Function(bool, String) onErrorMessage
  +Timer timer
  +FocusNode focusNode
  +bool otpAutoReadStatus
  +void initState()
  +dynamic startListeningOTP()
  +void codeUpdated()
  +void getPhoneFromCache()
  +void countDown()
  +Future<void> validateOtp()
  +Future<void> resendOtpForPhoneChange()
  +Future<void> resendOtp()
  +void dispose()
  +Widget build()
  +Future<void> selectOtpOptionsBottomSheetPopUp()
}

"skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState" o-- "skorlife::screens::auth::forgot_pin_otp.dart::void Function(bool, String)"
"skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState" o-- "dart::async::Timer"
"skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState"
"sms_autofill::sms_autofill.dart::CodeAutoFill" <|-- "skorlife::screens::auth::forgot_pin_otp.dart::_ForgotPinOtpState"

class "skorlife::screens::auth::otp_less_verification.dart::OtpLessVerification" {
  +State<OtpLessVerification> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::otp_less_verification.dart::OtpLessVerification"

class "skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState" {
  -Otpless _otplessFlutterPlugin
  +int secondsRemaining
  +bool enableResend
  +Timer timer
  +String mobileNumber
  +String countryCode
  +String flow
  +String changenumber
  +AppProvider appProvider
  +ValueNotifier<bool> showBanner
  +String formatCountryCodePhoneNumber
  +void initState()
  +dynamic requestForOTLLessVerification()
  +void onHeadlessResult()
  +dynamic verifyOTPLessToken()
  +Widget build()
  +void countDown()
  +void dispose()
  +dynamic showSuccMessageAndNavigate()
}

"skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState" o-- "otpless_flutter::otpless_flutter.dart::Otpless"
"skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState" o-- "dart::async::Timer"
"skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::otp_less_verification.dart::_OtpLessVerificationState"

class "skorlife::screens::auth::create_pin_blue.dart::CreatePin" {
  +State<CreatePin> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::create_pin_blue.dart::CreatePin"

class "skorlife::screens::auth::create_pin_blue.dart::_CreatePinState" {
  +String pin
  +String confirmPin
  +GlobalKey<ShakeWidgetState> shakeKey
  +bool blinkCursor
  +Timer timer
  +double blinkingDotsOpacity
  +bool showInPageToast
  +void initState()
  -dynamic _onKeyboardTap()
  +Future<void> onSavePin()
  +Widget build()
}

"skorlife::screens::auth::create_pin_blue.dart::_CreatePinState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ShakeWidgetState>"
"skorlife::screens::auth::create_pin_blue.dart::_CreatePinState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::create_pin_blue.dart::_CreatePinState"

class "skorlife::screens::auth::pin.dart::Pin" {
  +void Function(bool, String) onErrorMessage
  +Map<dynamic, dynamic>? deeplinkData
  +String? pushNotificationDeeplinkData
  +State<Pin> createState()
}

"skorlife::screens::auth::pin.dart::Pin" o-- "skorlife::screens::auth::pin.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::pin.dart::Pin"

class "skorlife::screens::auth::pin.dart::_PinState" {
  +void Function(bool, String) onErrorMessage
  +EnvironmentService envService
  +String pin
  +bool showInPageToast
  +bool isFaceMatchDone
  +bool isPinSetValidationInProgress
  +GlobalKey<ShakeWidgetState> shakeKey
  +AppProvider appProvider
  +bool fromDelete
  +String reason
  +int secretClicked
  -dynamic _onKeyboardTap()
  +Future<void> login()
  -Future<void> _checkIsCreditReportAvailable()
  +void initState()
  +Widget build()
  +void codeUpdated()
}

"skorlife::screens::auth::pin.dart::_PinState" o-- "skorlife::screens::auth::pin.dart::void Function(bool, String)"
"skorlife::screens::auth::pin.dart::_PinState" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"skorlife::screens::auth::pin.dart::_PinState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ShakeWidgetState>"
"skorlife::screens::auth::pin.dart::_PinState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::pin.dart::_PinState"
"sms_autofill::sms_autofill.dart::CodeAutoFill" <|-- "skorlife::screens::auth::pin.dart::_PinState"

class "skorlife::screens::auth::goals_page.dart::GoalsPageScreen" {
  +State<GoalsPageScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::goals_page.dart::GoalsPageScreen"

class "skorlife::screens::auth::goals_page.dart::_GoalsPageScreenState" {
  +AppProvider? appProvider
  +ValueNotifier<int> selected
  +ValueNotifier<bool> successShow
  +void initState()
  +Widget build()
}

"skorlife::screens::auth::goals_page.dart::_GoalsPageScreenState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::auth::goals_page.dart::_GoalsPageScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::auth::goals_page.dart::_GoalsPageScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::goals_page.dart::_GoalsPageScreenState"

class "skorlife::screens::auth::deleted_account_screen.dart::DeletedAccountScreen" {
  +State<DeletedAccountScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::deleted_account_screen.dart::DeletedAccountScreen"

class "skorlife::screens::auth::deleted_account_screen.dart::_DeletedAccountScreenState" {
  +String loggedInStatus
  +dynamic cancelDeleteRequest()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::deleted_account_screen.dart::_DeletedAccountScreenState"

class "skorlife::screens::auth::consent_transfer.dart::ConsentToTransferData" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::auth::consent_transfer.dart::ConsentToTransferData"

class "skorlife::screens::auth::otp.dart::Otp" {
  +void Function(bool, String) onErrorMessage
  +_OtpState createState()
}

"skorlife::screens::auth::otp.dart::Otp" o-- "skorlife::screens::auth::otp.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::auth::otp.dart::Otp"

class "skorlife::screens::auth::otp.dart::_OtpState" {
  +String otp
  +int secondsRemaining
  +bool enableResend
  +Timer timer
  +void Function(bool, String) onErrorMessage
  +String showInPageToast
  +FocusNode focusNode
  +bool otpAutoReadStatus
  +void initState()
  +dynamic startListeningOTP()
  +void codeUpdated()
  +Future<void> dispose()
  +void countDown()
  +Future<void> validateOtp()
  +Future<void> resendOtp()
  +Widget build()
  +Future<void> selectOtpOptionsBottomSheetPopUp()
}

"skorlife::screens::auth::otp.dart::_OtpState" o-- "dart::async::Timer"
"skorlife::screens::auth::otp.dart::_OtpState" o-- "skorlife::screens::auth::otp.dart::void Function(bool, String)"
"skorlife::screens::auth::otp.dart::_OtpState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::auth::otp.dart::_OtpState"
"sms_autofill::sms_autofill.dart::CodeAutoFill" <|-- "skorlife::screens::auth::otp.dart::_OtpState"

class "skorlife::screens::dispute::raise_ticket.dart::RaiseATicket" {
  +int view
  +State<RaiseATicket> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dispute::raise_ticket.dart::RaiseATicket"

class "skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" {
  +ValueNotifier<bool> showPersonalDetails
  +ValueNotifier<String> reason
  +ValueNotifier<String> email
  +ValueNotifier<String> query
  +ValueNotifier<String> lob_fi
  +ValueNotifier<String> error
  +ValueNotifier<List<String>> attachments
  +ValueNotifier<int> switchValue
  +ValueNotifier<int> radioValue
  +ValueNotifier<List<int>> selectedAccount
  +ValueNotifier<TextEditingController> attachmentController
  +TextEditingController emailController
  +TextStyle titleTS
  +AppProvider appProvider
  +String? emailError
  +String? reasonError
  +ValueNotifier<bool> disabledBtn
  +dynamic profileData
  +void initState()
  +Widget build()
  +dynamic personalDetailsItem()
  +dynamic loadView()
  +dynamic radioItem()
  +dynamic commentView()
  +dynamic inputView()
  +dynamic switchView()
  +dynamic switchItem()
  +dynamic selectFile()
  +dynamic raiseDispute()
  +dynamic validateBtn()
}

"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<String>>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<int>>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<TextEditingController>"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "flutter::src::painting::text_style.dart::TextStyle"
"skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dispute::raise_ticket.dart::_RaiseATicketState"

class "skorlife::screens::dispute::ticket_progress.dart::TicketProgress" {
  +Widget build()
  +dynamic stepBody()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dispute::ticket_progress.dart::TicketProgress"

class "skorlife::screens::dispute::raise_ticket_v1.dart::RaiseDisputeV1" {
  +dynamic dispute
  +String userQuery
  +DisputeViewMap disputeViewMap
  +dynamic Function(int) onSuccessCallback
  +String callerPageRoute
  +String accType
  +dynamic accounts
  +dynamic acMap
  +State<RaiseDisputeV1> createState()
}

"skorlife::screens::dispute::raise_ticket_v1.dart::RaiseDisputeV1" o-- "skorlife::maps::common.dart::DisputeViewMap"
"skorlife::screens::dispute::raise_ticket_v1.dart::RaiseDisputeV1" o-- "null::dynamic Function(int)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dispute::raise_ticket_v1.dart::RaiseDisputeV1"

class "skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State" {
  +List<dynamic> listOfAccount
  +List<dynamic> listOfAccountTypes
  +ValueNotifier<List<String>> extraAttachments
  +ValueNotifier<bool> isDisable
  +ValueNotifier<bool> valChanged
  +ValueNotifier<bool> emailValidation
  +ValueNotifier<bool> commentValidation
  +ValueNotifier<bool> dropDown1Validation
  +ValueNotifier<bool> dropDown2Validation
  +ValueNotifier<bool> attachment1Validation
  +ValueNotifier<bool> attachment2Validation
  +ValueNotifier<bool> multiAttachmentValidation
  +ValueNotifier<bool> missingBankAccountValidation
  +ValueNotifier<bool> phoneValidationFlag
  +String email
  +String comment
  +String dropDown1
  +String dropDown2
  +String multiAttachment
  +String emailError
  +String commentError
  +String dropDown1Error
  +String dropDown2Error
  +String attachment1Error
  +String attachment2Error
  +String multiAttachmentError
  +String missingBankAccount
  +List<String> attachment1
  +List<String> attachment2
  +bool dropDown2Disabled
  +List<String> list
  +AppProvider appProvider
  +FocusNode addressFocusNode
  +FocusNode phoneFocusNode
  +FocusNode nikFocusNode
  +FocusNode nameFocusNode
  +FocusNode skorkuIdFocusNode
  +ValueNotifier<bool> checkEnable
  +void initState()
  +Widget build()
  +dynamic selectFile()
  +dynamic attachmentView()
  +dynamic commentView()
  +dynamic loadView()
  +dynamic dropDownView()
  +dynamic validationForm()
  +dynamic firstAttachment()
  +dynamic secondAttachment()
  +dynamic comment500()
  +dynamic raiseDispute()
  +Future<void> previewCroppedImage()
}

"skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<String>>"
"skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dispute::raise_ticket_v1.dart::_RaiseDisputeV1State"

class "skorlife::screens::dashboard::accounts_type_selection.dart::AccountsTypeSelection" {
  +List<AccountTypes>? accountTypeList
  +dynamic Function(int) onClick
  +State<AccountsTypeSelection> createState()
}

"skorlife::screens::dashboard::accounts_type_selection.dart::AccountsTypeSelection" o-- "null::dynamic Function(int)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::accounts_type_selection.dart::AccountsTypeSelection"

class "skorlife::screens::dashboard::accounts_type_selection.dart::_AccountsTypeSelectionState" {
  +List<RadioModel> sampleData
  +dynamic selectedItem
  +int i
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::accounts_type_selection.dart::_AccountsTypeSelectionState"

class "skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPayment" {
  +void Function(bool) onSecondaryStatus
  +DashboardMissedPaymentState createState()
}

"skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPayment" o-- "skorlife::screens::dashboard::missed_payments.dart::void Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPayment"

class "skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPaymentState" {
  +void Function(bool) onSecondaryStatus
  +int expanded
  +String displayE02Button
  +String altText
  +bool missedPayments
  +void initState()
  +Future<dynamic> gete02ButtonStatus()
  +void getAccountDetails()
  +Widget build()
}

"skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPaymentState" o-- "skorlife::screens::dashboard::missed_payments.dart::void Function(bool)"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::missed_payments.dart::DashboardMissedPaymentState"

class "skorlife::screens::dashboard::profile.dart::Profile" {
  +State<Profile> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::profile.dart::Profile"

class "skorlife::screens::dashboard::profile.dart::_ProfileState" {
  +TextEditingController districtController
  +TextEditingController villageController
  +TextEditingController postalController
  +TextEditingController addressController
  +TextEditingController emailController
  +bool showCardNIK
  +bool isloading
  +ValueNotifier<List<dynamic>> filteredList
  +String searchText
  +String selectedProvinsi
  +String selectedCity
  +String isUpdatedMessage
  +bool isSuccess
  +bool dowloadSectionLoading
  +TextEditingController searchController
  +String buttonText
  +String downloadMessage
  +bool requested
  +bool downloadAvailable
  +void initState()
  +void updatefield()
  +dynamic putField()
  +Future<void> commonbottomsheet()
  +Widget build()
  +dynamic downloadCreditReport()
  +dynamic getDownloadReportDetails()
}

"skorlife::screens::dashboard::profile.dart::_ProfileState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::dashboard::profile.dart::_ProfileState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<dynamic>>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::profile.dart::_ProfileState"

class "skorlife::screens::dashboard::account_dispute_type_selection_l3.dart::AccountDisputeTypeSelection_L3" {
  +dynamic paylaterIndex
  +dynamic list
  +dynamic acMap
  +State<AccountDisputeTypeSelection_L3> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::account_dispute_type_selection_l3.dart::AccountDisputeTypeSelection_L3"

class "skorlife::screens::dashboard::account_dispute_type_selection_l3.dart::_AccountDisputeTypeSelection_L3State" {
  +AppProvider appProvider
  +List<RadioModel> sampleData
  +dynamic selectedItem
  +int i
  +void initState()
  +Widget build()
}

"skorlife::screens::dashboard::account_dispute_type_selection_l3.dart::_AccountDisputeTypeSelection_L3State" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::account_dispute_type_selection_l3.dart::_AccountDisputeTypeSelection_L3State"

class "skorlife::screens::dashboard::credit_mix.dart::CreditMix" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::credit_mix.dart::CreditMix"

class "skorlife::screens::dashboard::credit_utilization.dart::CreditUtilization" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::credit_utilization.dart::CreditUtilization"

class "skorlife::screens::dashboard::insight_overview.dart::InsightOverviewScreen" {
  +State<InsightOverviewScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::insight_overview.dart::InsightOverviewScreen"

class "skorlife::screens::dashboard::insight_overview.dart::_InsightOverviewScreenState" {
  +ValueNotifier<int> selectedPage
  +AppProvider appProvider
  +int selectedOrderId
  +PageController pageController
  +void initState()
  +Widget build()
  +dynamic showRisks()
  +dynamic riskCard()
}

"skorlife::screens::dashboard::insight_overview.dart::_InsightOverviewScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::dashboard::insight_overview.dart::_InsightOverviewScreenState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::dashboard::insight_overview.dart::_InsightOverviewScreenState" o-- "flutter::src::widgets::page_view.dart::PageController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::insight_overview.dart::_InsightOverviewScreenState"

class "skorlife::screens::dashboard::detail_score.dart::DetailScore" {
  +State<DetailScore> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::detail_score.dart::DetailScore"

class "skorlife::screens::dashboard::detail_score.dart::_DetailScoreState" {
  +AppProvider appProvider
  +void initState()
  +Widget build()
}

"skorlife::screens::dashboard::detail_score.dart::_DetailScoreState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::detail_score.dart::_DetailScoreState"

class "skorlife::screens::dashboard::hard_inquiries.dart::HardInquiries" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::hard_inquiries.dart::HardInquiries"

class "skorlife::screens::dashboard::dashboard.dart::Dashboard" {
  +void Function(bool, String) onErrorMessage
  +dynamic Function(bool) onBottomNavBarChangedVisibility
  +State<Dashboard> createState()
}

"skorlife::screens::dashboard::dashboard.dart::Dashboard" o-- "null::void Function(bool, String)"
"skorlife::screens::dashboard::dashboard.dart::Dashboard" o-- "null::dynamic Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::dashboard.dart::Dashboard"

class "skorlife::screens::dashboard::dashboard.dart::_DashboardState" {
  +int current
  +bool isAppUpdated
  +bool isImmediateAppUpdateAvailable
  +ValueNotifier<bool> isInAppUpdateDownloading
  +ValueNotifier<bool> isInAppUpdateReadyForInstall
  +bool secondaryError
  +GlobalKey<State<StatefulWidget>> one
  +GlobalKey<State<StatefulWidget>> two
  +CarouselSliderController carouselController
  +int errorAlignment
  +Widget? skorcardWaitListWidget
  +ValueNotifier<bool> dashset
  +ValueNotifier<bool> loadingDash
  +ValueNotifier<bool> isScrollingDown
  +AppProvider appProvider
  +bool refresh
  +bool refreshEnabled
  +ValueNotifier<DashError?> mainDashError
  -RefreshController _refreshController
  +ScrollController sc
  +GlobalKey<State<StatefulWidget>> riskKey
  +dynamic getPendingRequests()
  +void disconnectCustomerData()
  +dynamic sendDashboardAnalytics()
  +Future<void> sendDahboardSuccessEvent()
  +Future<void> storeBureauCodeState()
  +dynamic setAuthJWTToken()
  +void approveCustomerData()
  +Future<void> getData()
  +void initState()
  +void showOAuthDialog()
  +void loadSkorcard()
  +dynamic initializeSkorcardWaitlistSDK()
  +void didChangeDependencies()
  +void dispose()
  +void didPush()
  +void didPushNext()
  +void didPop()
  +void didPopNext()
  +void getSecondaryError()
  +dynamic showSuccess()
  +Future<void> otherSharing()
  +void setSecondaryError()
  +Widget build()
  +dynamic disclaimerBtmSheet()
  +dynamic getBureauErrorContainer()
  +Future<void> bottomSheetUpload()
  +dynamic redirectToUploadReport()
  +dynamic getCreditReportSubmitWidget()
  -Future<void> _onRefresh()
  -void _onLoading()
  +Future<void> initDashData()
  +void setIsPFMSet()
  -dynamic _inAppUpdateCheck()
  -dynamic _inAppUpdateDownloadAndInstall()
  +dynamic refreshScoreView()
  +dynamic disclaimerItem()
  +bool getSkorCardWaitListWidget()
}

"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "carousel_slider::carousel_controller.dart::CarouselSliderController"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DashError>"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "pull_to_refresh::src::smart_refresher.dart::RefreshController"
"skorlife::screens::dashboard::dashboard.dart::_DashboardState" o-- "flutter::src::widgets::scroll_controller.dart::ScrollController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::dashboard.dart::_DashboardState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "skorlife::screens::dashboard::dashboard.dart::_DashboardState"
"flutter::src::widgets::routes.dart::RouteAware" <|-- "skorlife::screens::dashboard::dashboard.dart::_DashboardState"

class "skorlife::screens::dashboard::account_details.dart::AccountDetails" {
  +State<AccountDetails> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::account_details.dart::AccountDetails"

class "skorlife::screens::dashboard::account_details.dart::_AccountDetailsState" {
  +bool shouldShowGraph
  +bool shouldShowEmiCalendar
  +ValueNotifier<bool> yesNoBtn
  +ValueNotifier<String> errorVal
  +ValueNotifier<String> message
  +dynamic appProvider
  +ValueNotifier<bool> isUserConfirmDataAvailable
  -bool _isWidgetLoaded
  +String accountType
  +String providerCode
  +AccountDetailsResp accountDetails
  +bool isGetDisputeInfoCalled
  +void dispose()
  +void initState()
  -dynamic _getUserConfirmationData()
  +Widget build()
  +dynamic interestRateWidget()
  +dynamic getAccType()
  +Future<void> getAccDetails()
  +dynamic launchCreditDataSelectionBottomSheet()
  +String getAccount()
  +dynamic getErrorValue()
}

"skorlife::screens::dashboard::account_details.dart::_AccountDetailsState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::account_details.dart::_AccountDetailsState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::dashboard::account_details.dart::_AccountDetailsState" o-- "skorlife::maps::common.dart::AccountDetailsResp"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::account_details.dart::_AccountDetailsState"

class "skorlife::screens::dashboard::inbox.dart::InboxView" {
  +void Function(bool, String) onErrorMessage
  +int pageNo
  +State<InboxView> createState()
}

"skorlife::screens::dashboard::inbox.dart::InboxView" o-- "skorlife::screens::auth::register.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::inbox.dart::InboxView"

class "skorlife::screens::dashboard::inbox.dart::_InboxViewState" {
  +ValueNotifier<int> screenWhich
  +ValueNotifier<int> expandedItem
  +ValueNotifier<int> filter
  +ValueNotifier<String> searchKey
  +TextEditingController searchController
  +ValueNotifier<List<DisputeData>> disputeModel
  +List<NotificationModel> notificationsList
  +List<NotificationModel> readNotificationsList
  +List<NotificationModel> unreadNotificationsList
  +AppProvider appProvider
  +PageController pc
  +Future<void> readNotificationPost()
  +Future<void> getNotifications()
  +Future<void> getTickets()
  +void initState()
  +void dispose()
  +Widget build()
  +dynamic stepBody()
}

"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<DisputeData>>"
"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::dashboard::inbox.dart::_InboxViewState" o-- "flutter::src::widgets::page_view.dart::PageController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::inbox.dart::_InboxViewState"

class "skorlife::screens::dashboard::web_view_with_appbar.dart::WebViewAppBar" {
  +ValueNotifier<bool> showLoading
  +Widget build()
}

"skorlife::screens::dashboard::web_view_with_appbar.dart::WebViewAppBar" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::web_view_with_appbar.dart::WebViewAppBar"

class "skorlife::screens::dashboard::payment_history.dart::PaymentHistory" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::payment_history.dart::PaymentHistory"

class "skorlife::screens::dashboard::total_accounts_carousel.dart::totalAccountscarousel" {
  +State<totalAccountscarousel> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::total_accounts_carousel.dart::totalAccountscarousel"

class "skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" {
  +int selectedValue
  +int currentPage
  +ValueNotifier<int> overviewSelection
  +int selectedAccountTypeIndex
  +AppProvider appProvider
  +String img
  +AccountDataMap accountDataMap
  +AccountOverviewList? actOverview
  +AccountsMapList? accountMap
  +List<AccountTypes>? listOfAccount
  +int total_accounts
  +int total_amount
  +NumberFormat formatCurrency
  +int? value
  +PageController pc
  +PageController oSpc
  -ItemScrollController _scrollController
  +bool selected
  +void initState()
  +void dispose()
  +bool myInterceptor()
  +dynamic backNavigation()
  +Future<void> getAccountDetails()
  +Widget build()
  +dynamic getIcon()
}

"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "skorlife::maps::common.dart::AccountDataMap"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "skorlife::maps::common.dart::AccountOverviewList"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "skorlife::maps::common.dart::AccountsMapList"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "intl::src::intl::number_format.dart::NumberFormat"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "flutter::src::widgets::page_view.dart::PageController"
"skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState" o-- "scrollable_positioned_list::src::scrollable_positioned_list.dart::ItemScrollController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::total_accounts_carousel.dart::_totalAccountscarouselState"

class "skorlife::screens::dashboard::profile_security.dart::ProfileSecurity" {
  +State<ProfileSecurity> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::profile_security.dart::ProfileSecurity"

class "skorlife::screens::dashboard::profile_security.dart::_ProfileSecurityState" {
  +bool show
  +String errorText
  +String reason
  +ValueNotifier<bool> enableBtn
  +Widget build()
}

"skorlife::screens::dashboard::profile_security.dart::_ProfileSecurityState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::profile_security.dart::_ProfileSecurityState"

class "skorlife::screens::dashboard::dashboard_overlay_notification.dart::DashboardOverlayNotification" {
  +String Function(String) translate
  +bool success
  +State<StatefulWidget> createState()
  {static} +dynamic insertOverlay()
}

"skorlife::screens::dashboard::dashboard_overlay_notification.dart::DashboardOverlayNotification" o-- "null::String Function(String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::dashboard_overlay_notification.dart::DashboardOverlayNotification"

class "skorlife::screens::dashboard::dashboard_overlay_notification.dart::OverlayState" {
  +bool show
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::dashboard_overlay_notification.dart::OverlayState"

class "skorlife::screens::dashboard::loan_insight_l2.dart::InsightScreen" {
  +dynamic toColor()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::loan_insight_l2.dart::InsightScreen"

class "skorlife::screens::dashboard::total_accounts.dart::TotalAccounts" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::total_accounts.dart::TotalAccounts"

class "skorlife::screens::dashboard::segmentation.dart::SegmentationScreen" {
  +State<SegmentationScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::segmentation.dart::SegmentationScreen"

class "skorlife::screens::dashboard::segmentation.dart::_SegmentationScreenState" {
  +GlobalKey<ScratcherState> scratchKey
  +String queue
  +String text
  +String title
  +String desc
  +String date
  +String isScratched
  +String phoneNumber
  +void initState()
  +dynamic segmentationAllowedInfo()
  +Future<void> checkIfUserScratched()
  +Widget build()
}

"skorlife::screens::dashboard::segmentation.dart::_SegmentationScreenState" o-- "flutter::src::widgets::framework.dart::GlobalKey<ScratcherState>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::segmentation.dart::_SegmentationScreenState"

class "skorlife::screens::dashboard::account_dispute_type_selection.dart::AccountDisputeTypeSelection" {
  +dynamic paylaterIndex
  +String? disputeType
  +String? accType
  +dynamic list
  +State<AccountDisputeTypeSelection> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::account_dispute_type_selection.dart::AccountDisputeTypeSelection"

class "skorlife::screens::dashboard::account_dispute_type_selection.dart::_AccountDisputeTypeSelectionState" {
  +List<RadioModel> sampleData
  +dynamic selectedItem
  +int i
  +AppProvider appProvider
  +void initState()
  +Widget build()
}

"skorlife::screens::dashboard::account_dispute_type_selection.dart::_AccountDisputeTypeSelectionState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::account_dispute_type_selection.dart::_AccountDisputeTypeSelectionState"

class "skorlife::screens::dashboard::skor_share.dart::SkorShare" {
  +State<SkorShare> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::skor_share.dart::SkorShare"

class "skorlife::screens::dashboard::skor_share.dart::_SkorShareState" {
  +ValueNotifier<int> agentfilter
  +ValueNotifier<int> customerfilter
  +bool selectedItem
  +List<AgentScoreData> agentScoreData
  +List<AgentScoreData> filterAgentScoreData
  +List<CustomerData> agentCustomerData
  +List<CustomerData> filterAgentCustomerData
  +List<String> statusFilter
  +void initState()
  +Future<void> getAgentData()
  +Future<void> getCustomerData()
  +void refreshCustomerData()
  +void refreshagentData()
  +void disconnectCustomerData()
  +void approveCustomerData()
  +void searchFilter()
  +void filterStatus()
  +Widget build()
}

"skorlife::screens::dashboard::skor_share.dart::_SkorShareState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::skor_share.dart::_SkorShareState"

class "skorlife::screens::dashboard::account_view.dart::AccountView" {
  +AccountsMapList? account
  +String? userConfirmKey
  +String? accType
  +String? disputeType
  +String? image
  +dynamic paylaterIndex
  +dynamic Function() refreshCall
  +State<AccountView> createState()
}

"skorlife::screens::dashboard::account_view.dart::AccountView" o-- "skorlife::maps::common.dart::AccountsMapList"
"skorlife::screens::dashboard::account_view.dart::AccountView" o-- "null::dynamic Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::account_view.dart::AccountView"

class "skorlife::screens::dashboard::account_view.dart::_AccountViewState" {
  +NumberFormat formatCurrency
  +ValueNotifier<bool> yesNoBtn
  +ValueNotifier<String> errorVal
  +ValueNotifier<String> message
  +dynamic appProvider
  +ValueNotifier<bool> isUserConfirmDataAvailable
  -bool _isWidgetLoaded
  +bool reminderRoute
  +ValueNotifier<bool> shouldShowInactiveAccounts
  +void initState()
  -dynamic _getUserConfirmationData()
  +Widget build()
  +dynamic launchAccountDetailsSheet()
  +String? getAccountType()
  +Column buildAccountSummeryWidget()
  +Widget buildConfirmationContainer()
  +dynamic launchAccountDisputeTypeSelectionBottomSheet()
  +dynamic getErrorValue()
}

"skorlife::screens::dashboard::account_view.dart::_AccountViewState" o-- "intl::src::intl::number_format.dart::NumberFormat"
"skorlife::screens::dashboard::account_view.dart::_AccountViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::account_view.dart::_AccountViewState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::account_view.dart::_AccountViewState"

class "skorlife::screens::dashboard::profile_help.dart::ProfileHelp" {
  +State<ProfileHelp> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::profile_help.dart::ProfileHelp"

class "skorlife::screens::dashboard::profile_help.dart::_ProfileHelpState" {
  +bool show
  +String errorText
  +String reason
  +ValueNotifier<bool> enableBtn
  +Widget build()
}

"skorlife::screens::dashboard::profile_help.dart::_ProfileHelpState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::profile_help.dart::_ProfileHelpState"

class "skorlife::screens::dashboard::account_age.dart::AccountAge" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::account_age.dart::AccountAge"

class "skorlife::screens::dashboard::score_refresh_process.dart::ScoreRefreshProcess" {
  +State<ScoreRefreshProcess> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::score_refresh_process.dart::ScoreRefreshProcess"

class "skorlife::screens::dashboard::score_refresh_process.dart::_ScoreRefreshProcessState" {
  +String fromPage
  +bool kycLoading
  +bool kycSuccess
  +ValueNotifier<bool> proceed
  +ValueNotifier<int> timer
  +void initState()
  +dynamic initKyc()
  -dynamic _navigateToInitPageOfSDK()
  +Widget build()
  +void kycCompleted()
  -dynamic _closeRefreshLoading()
  +void kycFailed()
  +void kycInitStatus()
  +void kycStepStatus()
  +Future<void> scoreRefreshCompleted()
  +void scoreRefreshInProgress()
  +Future<void> scoreRefreshRequestFailed()
  +void scoreRefreshStop()
  +void stepStatus()
}

"skorlife::screens::dashboard::score_refresh_process.dart::_ScoreRefreshProcessState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::score_refresh_process.dart::_ScoreRefreshProcessState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::score_refresh_process.dart::_ScoreRefreshProcessState"
"kyc::kyc.dart::KycStatusListener" <|-- "skorlife::screens::dashboard::score_refresh_process.dart::_ScoreRefreshProcessState"

class "skorlife::screens::dashboard::payment_consistency.dart::RePaymentConsistency" {
  +dynamic toColor()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::payment_consistency.dart::RePaymentConsistency"

class "skorlife::screens::dashboard::score_credit_error.dart::ScoreCreditError" {
  +ValueNotifier<bool> show
  +ValueNotifier<bool> yesNoBtn
  +ValueNotifier<String> errorVal
  +dynamic appProvider
  +Widget build()
  +dynamic dateDifference()
  +void getStatus()
}

"skorlife::screens::dashboard::score_credit_error.dart::ScoreCreditError" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::score_credit_error.dart::ScoreCreditError" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::score_credit_error.dart::ScoreCreditError"

class "skorlife::screens::dashboard::dashboard_refresh_consent.dart::RefreshConsentPage" {
  +State<RefreshConsentPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::dashboard::dashboard_refresh_consent.dart::RefreshConsentPage"

class "skorlife::screens::dashboard::dashboard_refresh_consent.dart::_RefreshConsentPageState" {
  +ValueNotifier<bool> consentGiven
  +void initState()
  +Widget build()
}

"skorlife::screens::dashboard::dashboard_refresh_consent.dart::_RefreshConsentPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::dashboard::dashboard_refresh_consent.dart::_RefreshConsentPageState"

class "skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" {
  +AccountOverviewList? taDtOverview
  +List<AccountTypes>? accountTypeList
  +dynamic Function(int) onClick
  +bool historyView
  +NumberFormat formatCurrency
  +ValueNotifier<bool> yesNoBtn
  +ValueNotifier<String> errorVal
  +ValueNotifier<String> message
  +AppProvider appProvider
  +dynamic appCarouselData
  +ValueNotifier<bool> isUserConfirmDataAvailable
  -bool _isWidgetLoaded
  +Widget build()
  +dynamic getErrorValue()
  +dynamic launchAccountTypeSelectionBottomSheet()
}

"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "skorlife::maps::common.dart::AccountOverviewList"
"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "null::dynamic Function(int)"
"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "intl::src::intl::number_format.dart::NumberFormat"
"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::dashboard::overview_account_details.dart::OverviewAccountDetails"

class "skorlife::screens::budget_setup_screen::budget_setup_screen.dart::BudgetSetupScreen" {
  +State<BudgetSetupScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::budget_setup_screen::budget_setup_screen.dart::BudgetSetupScreen"

class "skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState" {
  +BudgetSetupModel budgetSetupModelObj
  +int selectedtab
  +int sliderValue
  +int totalIncome
  +int minValue
  +int maxValue
  +dynamic savingsAmount
  +AppProvider appProvider
  +List<String> tabTitles
  +bool isGoalCalculatedLocally
  +FinancialGoalData? financialGoalDataLocal
  +RecommendedPayments? paymentArrearsInfo
  +dynamic onSelected()
  +void initState()
  -dynamic _calculateTotalIncome()
  +Widget build()
  -dynamic _sliderContainer()
  +CustomOutlinedButton buildSelanjutnyaButton()
  +CustomOutlinedButton buildTambahTujuanFinansialButton()
  -Padding _buildPemasukanWidget()
  -Container _estimasiTabunganWidget()
  -dynamic _calculateTargetDate()
  -dynamic _sliderWidget()
  +dynamic showPaymentRecommendationBtSheet()
  +Future<void> onDataSet()
}

"skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState" o-- "skorlife::screens::budget_setup_screen::models::budget_setup_model.dart::BudgetSetupModel"
"skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState" o-- "skorlife::maps::dashboard.dart::FinancialGoalData"
"skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState" o-- "skorlife::maps::recommended_payments.dart::RecommendedPayments"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState"
"skorlife::utils::listener.dart::DataSetListener" <|-- "skorlife::screens::budget_setup_screen::budget_setup_screen.dart::_BudgetSetupScreenState"

class "skorlife::screens::budget_setup_screen::models::budget_setup_model.dart::BudgetSetupModel" {
  +List<SelectionPopupModel> dropdownItemList
  +List<AccountlistItemModel> accountlistItemList
}

class "skorlife::screens::budget_setup_screen::models::accountlist_item_model.dart::AccountlistItemModel" {
  +String? kartuKreditText
  +String? twoAkunText
  +String? rp25000000text
  +String? id
}

class "skorlife::screens::budget_setup_screen::models::selectionPopupModel::selection_popup_model.dart::SelectionPopupModel" {
  +int? id
  +String title
  +dynamic value
  +bool isSelected
}

class "skorlife::screens::budget_setup_screen::budget_management_screen.dart::BudgetManagementScreen" {
  +State<BudgetManagementScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::budget_setup_screen::budget_management_screen.dart::BudgetManagementScreen"

class "skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" {
  +bool isChecked
  +ValueNotifier<bool> isButtonEnabled
  +Map<String, List<Map<String, String>>> jsonData
  +Income fixedExpenseTypes
  +ValueNotifier<List<Map<String, dynamic>>> fixedExpenses
  +int savingBudgetAmount
  +int totalIncome
  +int remainingBudget
  +int fixedExpenseTotal
  +int fixedExpenseTotalForAddExpense
  +Map<dynamic, dynamic> savingsBudgetAmountObj
  +bool loading
  +bool editData
  +ValueNotifier<int> sliderValue
  +int sliderOriginalValue
  +int minValue
  +int maxValue
  +Map<String, dynamic> selectedItem
  +AppProvider appProvider
  +ValueNotifier<dynamic> selectedCode
  +ValueNotifier<bool> resetDisable
  +ValueNotifier<bool> buttonDisable
  +TextEditingController incomeController
  +TextEditingController nameController
  +FocusNode budgetFocusNode
  +FocusNode nameFocusNode
  +bool isDataUpdated
  +int savingBudgetAmountAfterRefreshLocal
  +void initState()
  -dynamic _calculateTotalIncome()
  +dynamic getTotalFixedExpense()
  +Future<void> getFixesExpenseTypes()
  +dynamic setBudgetData()
  +dynamic forceNavigateToExpenses()
  +dynamic getBudgetData()
  +Widget build()
  -Container _cardWidget()
  +CustomOutlinedButton buildKonfirmasiBudgetButton()
  +CustomOutlinedButton buildTambahTujuanFinansialButton()
  -Padding _buildSisaBudgetWidget()
  -Padding _buildTotalPemasukanWidget()
  +dynamic validate()
  +dynamic reset()
  +void showFixedBedgetSelectionBottomSheet()
  +void editBudgetBottomSheet()
  -dynamic _sliderWidget()
  +Future<void> onDataSet()
}

"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "skorlife::screens::pfm::set_income.dart::Income"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<Map<String, dynamic>>>"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<dynamic>"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState"
"skorlife::utils::listener.dart::DataSetListener" <|-- "skorlife::screens::budget_setup_screen::budget_management_screen.dart::_BudgetManagementScreenState"

class "skorlife::screens::budget_setup_screen::completion_stepup_indicator_widget.dart::CompletionStepupIndicatorWidget" {
  +int steupIndicatorCount
  +String stepupMessage
  +int highlightTill
  +State<CompletionStepupIndicatorWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::budget_setup_screen::completion_stepup_indicator_widget.dart::CompletionStepupIndicatorWidget"

class "skorlife::screens::budget_setup_screen::completion_stepup_indicator_widget.dart::_CompletionStepupIndicatorWidgetState" {
  +Widget build()
  +dynamic itemWidget()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::budget_setup_screen::completion_stepup_indicator_widget.dart::_CompletionStepupIndicatorWidgetState"

class "skorlife::screens::budget_setup_screen::Browse_to_budget_bottom_sheet.dart::AlokasiBudgetBottomSheet" {
  +PFMBudjetModelData pfmBudjetModelData
  +List<dynamic> colorList
  +dynamic setPFMCompletion()
  +Widget build()
  +dynamic buildMulaiPantauButton()
  +dynamic buildEditBudgetWidget()
  +dynamic circleWidget()
  -Container _buildLinearProgressBar()
  -Padding _buildbudgetWithColorWidget()
  +dynamic showWeeklyCalculationBottomSheet()
}

"skorlife::screens::budget_setup_screen::Browse_to_budget_bottom_sheet.dart::AlokasiBudgetBottomSheet" o-- "skorlife::maps::dashboard.dart::PFMBudjetModelData"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::budget_setup_screen::Browse_to_budget_bottom_sheet.dart::AlokasiBudgetBottomSheet"

class "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::SetupCompleteScreen1" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::SetupCompleteScreen1"

class "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::SetupCompleteScreen" {
  +_SetupCompleteScreenState createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::SetupCompleteScreen"

class "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::_SetupCompleteScreenState" {
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::budget_setup_screen::setup_complete_screen.dart::_SetupCompleteScreenState"

class "skorlife::screens::landing_page.dart::LandingPage" {
  +void Function(bool, String) onErrorMessage
  +_LandingPageState createState()
}

"skorlife::screens::landing_page.dart::LandingPage" o-- "skorlife::widgets::send_request.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::landing_page.dart::LandingPage"

class "skorlife::screens::landing_page.dart::_LandingPageState" {
  +void Function(bool, String) onErrorMessage
  +int current
  +CarouselSliderController carouselController
  +GoalEstimatedData goalEstimatedData
  +Risk risk
  +AccountOverviewList accountOverviewList
  +bool registrationEnabled
  +AppProvider appProvider
  +Future<void> getRegisterFlow()
  +void checkUnConsumedPayment()
  +dynamic getPurchaseStatus()
  +dynamic verifyPayment()
  +void initState()
  +dynamic checkIsFirstTimeLaunch()
  +dynamic navigateToRegister()
  +dynamic navigateToLogin()
  +Future<dynamic> splashScreenStatus()
  +Future<void> otherSharing()
  +Future<void> bottomSheetLoginOrRegister()
  +Future<void> bottomsheet()
  +Widget build()
  -dynamic _registerClickEvent()
  +dynamic storeDeviceDetails()
}

"skorlife::screens::landing_page.dart::_LandingPageState" o-- "skorlife::widgets::send_request.dart::void Function(bool, String)"
"skorlife::screens::landing_page.dart::_LandingPageState" o-- "carousel_slider::carousel_controller.dart::CarouselSliderController"
"skorlife::screens::landing_page.dart::_LandingPageState" o-- "skorlife::maps::dashboard.dart::GoalEstimatedData"
"skorlife::screens::landing_page.dart::_LandingPageState" o-- "skorlife::maps::dashboard.dart::Risk"
"skorlife::screens::landing_page.dart::_LandingPageState" o-- "skorlife::maps::common.dart::AccountOverviewList"
"skorlife::screens::landing_page.dart::_LandingPageState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::landing_page.dart::_LandingPageState"

class "skorlife::screens::maintenance::maintenance_screen_2.dart::MaintenanceScreen2" {
  +State<MaintenanceScreen2> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::maintenance::maintenance_screen_2.dart::MaintenanceScreen2"

class "skorlife::screens::maintenance::maintenance_screen_2.dart::_MaintenanceScreen2State" {
  +ValueNotifier<bool> successShow
  +String message
  +EbookModel? ebookModel
  +void initState()
  +Future<void> getEbooks()
  +Widget build()
}

"skorlife::screens::maintenance::maintenance_screen_2.dart::_MaintenanceScreen2State" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::maintenance::maintenance_screen_2.dart::_MaintenanceScreen2State" o-- "skorlife::maps::common.dart::EbookModel"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::maintenance::maintenance_screen_2.dart::_MaintenanceScreen2State"

class "skorlife::screens::maintenance::maintenance_screen_2.dart::EbookWidget" {
  +Ebooks? ebook
  +Widget build()
}

"skorlife::screens::maintenance::maintenance_screen_2.dart::EbookWidget" o-- "skorlife::maps::common.dart::Ebooks"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::screens::maintenance::maintenance_screen_2.dart::EbookWidget"

class "skorlife::screens::maintenance::maintenance_screen.dart::MaintenanceScreen" {
  +State<MaintenanceScreen> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::maintenance::maintenance_screen.dart::MaintenanceScreen"

class "skorlife::screens::maintenance::maintenance_screen.dart::_MaintenanceScreenState" {
  +ValueNotifier<bool> checkClicked
  +ValueNotifier<bool> disabled
  +TextEditingController emailController
  +String errorText
  +FocusNode focusNode
  +void initState()
  +Widget build()
  +dynamic getFcmToken()
  +dynamic setEmailForMaintenance()
}

"skorlife::screens::maintenance::maintenance_screen.dart::_MaintenanceScreenState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::maintenance::maintenance_screen.dart::_MaintenanceScreenState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::maintenance::maintenance_screen.dart::_MaintenanceScreenState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::maintenance::maintenance_screen.dart::_MaintenanceScreenState"

class "skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::UserPersonalisationSubTypePage" {
  +UserDescribeTypes? userDescribeType
  +State<UserPersonalisationSubTypePage> createState()
}

"skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::UserPersonalisationSubTypePage" o-- "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserDescribeTypes"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::UserPersonalisationSubTypePage"

class "skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::_UserPersonalisationSubTypePageState" {
  +dynamic optionSelected
  +TextEditingController textController
  +String? subType
  +String? additionInfo
  +FocusNode textFocusNode
  +void initState()
  +Widget build()
  +dynamic userPersonalisationSubTypeRadioItem()
}

"skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::_UserPersonalisationSubTypePageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::_UserPersonalisationSubTypePageState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::UserPersonalisation::user_personalisation_sub_type_page.dart::_UserPersonalisationSubTypePageState"

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisationPage" {
  +State<UserPersonalisationPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisationPage"

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" {
  +ValueNotifier<bool> isUserDescribeTypeOther
  +dynamic selectedItem
  +ValueNotifier<bool> textFieldFilled
  +int i
  +TextEditingController textController
  +UserPersonalisation userPersonalisationData
  +AppProvider appProvider
  +FocusNode textFocusNode
  +bool isPageLoaded
  +int selectedIndex
  +int globalIndex
  +void initState()
  +void didChangeDependencies()
  +Widget build()
  +dynamic getUserPersonalisationData()
  +dynamic userPersonalisationRadioItem()
  +dynamic shuffleItems()
}

"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" o-- "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisation"
"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::_UserPersonalisationPageState"

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisationRadioModel" {
  +bool isSelected
  +String heading
  +String text
}

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisationApiResponse" {
  +int? code
  +UserPersonalisation? data
  +String? message
  +Map<String, dynamic> toJson()
}

"skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisationApiResponse" o-- "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisation"

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserPersonalisation" {
  +String? heading
  +String? subHeading
  +String? description
  +List<UserDescribeTypes>? userDescribeTypes
  +String? buttonText
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::UserDescribeTypes" {
  +String? label
  +String? type
  +String? desc
  +bool? isSelected
  +List<SubType>? subType
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::UserPersonalisation::user_personalisation_page.dart::SubType" {
  +String? label
  +String? type
  +bool? isSelected
  +Map<String, dynamic> toJson()
}

class "skorlife::screens::remider::calendar_selection.dart::RemiderScreenCalendar" {
  +String name
  +String type
  +String icon
  +String accType
  +int acNum
  +int? priorDays
  +int? selectedDate
  +bool? add
  +bool fromDashboard
  +bool fromBtsheet
  +State<RemiderScreenCalendar> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::screens::remider::calendar_selection.dart::RemiderScreenCalendar"

class "skorlife::screens::remider::calendar_selection.dart::_RemiderScreenCalendarState" {
  +ValueNotifier<int> selected
  +ValueNotifier<int> remindBefore
  +AppProvider appProvider
  +Widget build()
  +dynamic remindItem()
  +dynamic containerWithMargin()
  +dynamic showDelete()
  +dynamic showError()
  +dynamic showSuccess()
}

"skorlife::screens::remider::calendar_selection.dart::_RemiderScreenCalendarState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::screens::remider::calendar_selection.dart::_RemiderScreenCalendarState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::screens::remider::calendar_selection.dart::_RemiderScreenCalendarState"

class "skorlife::push_notification_handler.dart::PushNotificationHandler" {
  +SendPushNotifEventUsecase usecase
  +PushNotificationNavigator navigator
  +SkorlifePushNotificationService skorlifePushNotificationService
  +SharedLocalStorageService sharedLocalStorageService
  +PushNotificationUiService pushNotificationUiService
  +void onGetMessageFromBackgroundState()
  +void onGetMessageFromForegroundState()
  +void onGetMessageFromKilledState()
  +void onNotificationClicked()
  +String removeHtmlTags()
}

"skorlife::push_notification_handler.dart::PushNotificationHandler" o-- "push_notification_domain::usecase::send_push_notif_event_usecase.dart::SendPushNotifEventUsecase"
"skorlife::push_notification_handler.dart::PushNotificationHandler" o-- "push_notification_view::push_notification_navigator.dart::PushNotificationNavigator"
"skorlife::push_notification_handler.dart::PushNotificationHandler" o-- "push_notification_data::data::skorlife_push_notification_service.dart::SkorlifePushNotificationService"
"skorlife::push_notification_handler.dart::PushNotificationHandler" o-- "shared::services::local_storage::shared_local_storage_service.dart::SharedLocalStorageService"
"skorlife::push_notification_handler.dart::PushNotificationHandler" o-- "shared::widgets::services::push_notification_ui::push_notification_ui_service.dart::PushNotificationUiService"
"app_init_data::services::messaging::messaging_service.dart::MessagingServiceAdapter" <|-- "skorlife::push_notification_handler.dart::PushNotificationHandler"

class "skorlife::deeplink_listener.dart::SkorlifeDeeplinkListener" {
  +DeeplinkService deeplinkService
  +void onDeepLinkingError()
  +void onDeepLinkingFound()
  +void onDeepLinkingNotFound()
  +void onDeepLinkingParseError()
  +void onOpenAppAttribution()
}

"skorlife::deeplink_listener.dart::SkorlifeDeeplinkListener" o-- "shared::services::deeplink_service::deeplink_service.dart::DeeplinkService"
"skorlife::features::deeplink_service::deeplink_listener.dart::DeeplinkListener" <|-- "skorlife::deeplink_listener.dart::SkorlifeDeeplinkListener"

class "skorlife::api::api_wrapper.dart::ApiWrapper" {
  {static} -SkorlifeHeaderInterceptorService _skorlifeHeaderInterceptorService
  {static} +bool httpFailureLoggingRequired
  {static} -Future<Map<String, String>> _getHeaders()
  {static} +Future<ApiResponse> get()
  {static} +Future<dynamic> deviceError()
  {static} +Future<ApiResponse> put()
  {static} +Future<ApiResponse> delete()
  {static} +Future<void> uploadFileWithProgress()
  {static} +Future<ApiResponse> post()
  {static} +Future<ApiResponse> uploadDoc()
  {static} +dynamic timeout()
  {static} +bool isAPIError()
  {static} +dynamic logoutApp()
  {static} +void logResponse()
}

"skorlife::api::api_wrapper.dart::ApiWrapper" o-- "shared::services::api::skorlife_header_interceptor_service.dart::SkorlifeHeaderInterceptorService"

class "skorlife::app.dart::App" {
  +ValueNotifier<String?> pushNotificationDeeplinkData
  +RouteObserver<PageRoute<dynamic>> routeObserver
  +State<App> createState()
}

"skorlife::app.dart::App" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::app.dart::App" o-- "flutter::src::widgets::routes.dart::RouteObserver<PageRoute<dynamic>>"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::app.dart::App"

class "skorlife::app.dart::_AppState" {
  +AppDeeplinkService appDeeplinkService
  +EnvironmentService environmentService
  +AppProvider provider
  +Map<dynamic, dynamic>? deepLinkData
  +String? pushNotificationDeeplinkData
  +bool shouldShowNavBar
  +PermissionLifeCycleEventHandler? permissionHandler
  +void initState()
  +Future<void> handleGeolocation()
  +void dispose()
  +dynamic appInit()
  +Widget buildAppContent()
  +Widget build()
  +Widget appContent()
  +void onResume()
}

"skorlife::app.dart::_AppState" o-- "skorlife::features::deeplink_service::app_deeplink_service.dart::AppDeeplinkService"
"skorlife::app.dart::_AppState" o-- "shared::services::environment::environment_service.dart::EnvironmentService"
"skorlife::app.dart::_AppState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::app.dart::_AppState" o-- "skorlife::app.dart::PermissionLifeCycleEventHandler"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::app.dart::_AppState"

class "skorlife::app.dart::PermissionLifeCycleEventHandler" {
  +LifecycleEventHandler handler
  +BuildContext? context
  +BuildContext? Function(BuildContext?) onResume
}

"skorlife::app.dart::PermissionLifeCycleEventHandler" o-- "shared::widgets::life_cycler_event_handler.dart::LifecycleEventHandler"
"skorlife::app.dart::PermissionLifeCycleEventHandler" o-- "flutter::src::widgets::framework.dart::BuildContext"
"skorlife::app.dart::PermissionLifeCycleEventHandler" o-- "null::BuildContext Function(BuildContext)"

class "skorlife::widgets::problem.dart::Problem" {
  +String message
  +String buttontext
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::problem.dart::Problem"

class "skorlife::widgets::horizontal_line_chart.dart::HorizontalLineChart" {
  +double score
  +double minScore
  +bool? hideIndicator
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::horizontal_line_chart.dart::HorizontalLineChart"

class "skorlife::widgets::horizontal_line_chart.dart::CursorPointer1" {
  +double score
  +double width
  +bool? hideIndicator
  +dynamic kurangbaikmin
  +dynamic kurangbaikmax
  +dynamic sedangmin
  +dynamic sedangmax
  +dynamic baikmin
  +dynamic baikmax
  +dynamic sangatmin
  +dynamic sangatmax
  +dynamic kurangbaikWidth
  +dynamic sedangWidth
  +dynamic baikWidth
  +dynamic sangatWidth
  +dynamic kurangcolor
  +dynamic sedangcolor
  +dynamic baikcolor
  +dynamic sangatcolor
  +bool shouldRepaint()
  +void paint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::horizontal_line_chart.dart::CursorPointer1"

class "skorlife::widgets::horizontal_line_chart.dart::CursorPointer" {
  +double score
  +double width
  +bool? hideIndicator
  +double offset
  +dynamic color
  +bool shouldRepaint()
  +void paint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::horizontal_line_chart.dart::CursorPointer"

class "skorlife::widgets::emi_calendar.dart::EmiCalendar" {
  +List<dynamic>? emiData
  +Widget getMonthRow()
  +Widget getEmiRow()
  +List<Widget> getDynamicRows()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::emi_calendar.dart::EmiCalendar"

class "skorlife::widgets::calendar.dart::Calendar" {
  +String title
  +String? initialValue
  +String? initialLabel
  +DateTime? lastDate
  +DateTime? firstDate
  +dynamic Function(dynamic) onTap
  +_CalendarState createState()
}

"skorlife::widgets::calendar.dart::Calendar" o-- "null::dynamic Function(dynamic)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::calendar.dart::Calendar"

class "skorlife::widgets::calendar.dart::_CalendarState" {
  +DateTime date
  +bool isInitialValue
  +void initState()
  +void selectDate()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::calendar.dart::_CalendarState"

class "skorlife::widgets::dashboard_widgets::score_refresh.dart::ScoreRefreshWidget" {
  +String fromRoute
  +bool isFirstTimeUser
  +bool toConsent
  +State<ScoreRefreshWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::dashboard_widgets::score_refresh.dart::ScoreRefreshWidget"

class "skorlife::widgets::dashboard_widgets::score_refresh.dart::_ScoreRefreshWidgetState" {
  -ValueNotifier<bool> _isPositionedRight
  +ValueNotifier<bool> toRight
  +void startPeriodicAnimation()
  +void initState()
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::score_refresh.dart::_ScoreRefreshWidgetState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::dashboard_widgets::score_refresh.dart::_ScoreRefreshWidgetState"

class "skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionBtn" {
  +String title
  +void Function() action
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionBtn" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionBtn"

class "skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionWithStrikeBtn" {
  +Widget title
  +void Function() action
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionWithStrikeBtn" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionWithStrikeBtn" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::score_refresh.dart::SlideActionWithStrikeBtn"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::RiskGraphWidget" {
  +Risk? risk
  +AppProvider? appProvider
  +Function clicked
  +Function refreshCallback
  +bool showSocialProf
  +void Function()? staticAction
  +Widget build()
  +dynamic showGoals()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::RiskGraphWidget" o-- "skorlife::maps::dashboard.dart::Risk"
"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::RiskGraphWidget" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::RiskGraphWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::RiskGraphWidget"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::LoanApprovalProgressBar" {
  +double? progressbarWidth
  +int? score
  +Color? progressBarColor
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::LoanApprovalProgressBar" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::LoanApprovalProgressBar"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::GraphWidget" {
  +List<StickerModel> list
  +Widget? icon
  +bool haveTitle
  +bool haveIcon
  +double right
  +double top
  +double upperTop
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::GraphWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::GraphWidget"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::DynamicStickers" {
  +List<StickerModel> list
  +double right
  +double top
  +double upperTop
  +bool haveTitle
  +Widget? icon
  +bool haveIcon
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::DynamicStickers" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::DynamicStickers"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerModel" {
  +String? title
  +String? leftLabel
  +int percentage
  +Color color
  +Widget? icon
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerModel" o-- "dart::ui::Color"
"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerModel" o-- "flutter::src::widgets::framework.dart::Widget"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::Arrow" {
  +double width
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::Arrow"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWithTextWidget" {
  +bool haveTitle
  +Color stickerColor
  +String title
  +String leftLabel
  +bool haveIcon
  +Widget? icon
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWithTextWidget" o-- "dart::ui::Color"
"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWithTextWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWithTextWidget"

class "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWidget" {
  +Widget? icon
  +Color? color
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWidget" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::risk_graph_widget.dart::StickerWidget"

class "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::BiScoreAndKolWidget" {
  +AppProvider appProvider
  +bool pfmSet
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::BiScoreAndKolWidget" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::BiScoreAndKolWidget"

class "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmNotSet" {
  +AppProvider appProvider
  +Kol kol
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmNotSet" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmNotSet" o-- "skorlife::maps::dashboard.dart::Kol"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmNotSet"

class "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmSet" {
  +AppProvider appProviderOld
  +Kol kol
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmSet" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmSet" o-- "skorlife::maps::dashboard.dart::Kol"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol2PfmSet"

class "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol1Widget" {
  +Kol kol
  +bool pfmSet
  +Widget build()
}

"skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol1Widget" o-- "skorlife::maps::dashboard.dart::Kol"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_widgets::bi_score_kol_widget.dart::Kol1Widget"

class "skorlife::widgets::dash_line_painter.dart::DashedLineVerticalPainter" {
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::dash_line_painter.dart::DashedLineVerticalPainter"

class "skorlife::widgets::account_card.dart::AccountCard" {
  +String title
  +String description
  +String accountNumber
  +String icon
  +void Function()? onTap
  +String? tag
  +Color? color
  +String? amount
  +String? amountType
  +String? type
  +String? paymentStatus
  +String? paymentStatusText
  +int? creditUsagePercentage
  +Color? creditUsageColor
  +String? accountAge
  +bool? hasInActiveAccounts
  +bool? isPaylaterData
  +String? providerCode
  +Future<void> paylaterpopup()
  +Widget build()
}

"skorlife::widgets::account_card.dart::AccountCard" o-- "dart::ui::void Function()"
"skorlife::widgets::account_card.dart::AccountCard" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::account_card.dart::AccountCard"

class "skorlife::widgets::blog_card_list.dart::BlogCardList" {
  +State<BlogCardList> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::blog_card_list.dart::BlogCardList"

class "skorlife::widgets::blog_card_list.dart::_BlogCardListState" {
  +dynamic blogListHandler()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::blog_card_list.dart::_BlogCardListState"

class "skorlife::widgets::blog_card_list.dart::BlogCard" {
  +BuildContext context
  +String url
  +String imageUrl
  +String title
  +String writer
  +String writerProfole
  +String date
  +String category
  +String readingTime
  +Widget build()
}

"skorlife::widgets::blog_card_list.dart::BlogCard" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::blog_card_list.dart::BlogCard"

class "skorlife::widgets::line_chart.dart::Score" {
  +String x
  +double y
}

class "skorlife::widgets::line_chart.dart::LineChart" {
  +bool isKolScoreChart
  +List<String?>? xLabels
  +List<int?>? yLabels
  +bool reverse
  +double minVal
  +bool blurIndicator
  +List<dynamic> values
  +Color lineColor
  +Color backgroundColor
  +Color textColor
  +double horizontalStrokWidth
  +int dashSpace
  +State<LineChart> createState()
}

"skorlife::widgets::line_chart.dart::LineChart" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::line_chart.dart::LineChart"

class "skorlife::widgets::line_chart.dart::_LineChartState" {
  -GlobalKey<State<StatefulWidget>> _paintKey
  -Offset? _offset
  +Widget build()
}

"skorlife::widgets::line_chart.dart::_LineChartState" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"skorlife::widgets::line_chart.dart::_LineChartState" o-- "dart::ui::Offset"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::line_chart.dart::_LineChartState"

class "skorlife::widgets::line_chart.dart::ChartPainter" {
  +List<String?>? x
  +List<int?>? y
  +List<dynamic> values
  +double min
  +double max
  +Color lineColor
  +Color bgColor
  +Color textColor
  +bool reverse
  +bool isKolScoreChart
  +bool blurIndicator
  +double horizontalStrokWidth
  +int dashSpace
  -Offset? _offset
  {static} +double border
  +void paint()
  -List<dynamic> _normalizeValues()
  -void _drawXLabels()
  -void _drawYLabels()
  -void _drawDataPoints()
  -Path _computePath()
  -List<Offset> _computePoints()
  +bool shouldRepaint()
  -void _drawOutline()
  +TextPainter measureText()
  +Size drawTextCentered()
  -List<String>? _computLabels()
}

"skorlife::widgets::line_chart.dart::ChartPainter" o-- "dart::ui::Color"
"skorlife::widgets::line_chart.dart::ChartPainter" o-- "dart::ui::Offset"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::line_chart.dart::ChartPainter"

class "skorlife::widgets::custom_stepper.dart::ControlsDetails" {
  +int currentAppStep
  +int stepIndex
  +void Function()? onAppStepContinue
  +void Function()? onAppStepCancel
  +bool isActive
}

"skorlife::widgets::custom_stepper.dart::ControlsDetails" o-- "dart::ui::void Function()"

class "skorlife::widgets::custom_stepper.dart::AppStep" {
  +Widget title
  +Widget? subtitle
  +Widget content
  +AppStepState state
  +bool isActive
  +Widget? label
}

"skorlife::widgets::custom_stepper.dart::AppStep" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::custom_stepper.dart::AppStep" o-- "skorlife::widgets::custom_stepper.dart::AppStepState"

class "skorlife::widgets::custom_stepper.dart::AppStepper" {
  +List<AppStep> steps
  +ScrollPhysics? physics
  +AppStepperType type
  +int currentAppStep
  +void Function(int)? onAppStepTapped
  +void Function()? onAppStepContinue
  +void Function()? onAppStepCancel
  +Widget Function(BuildContext, ControlsDetails)? controlsBuilder
  +double? elevation
  +EdgeInsetsGeometry? margin
  +State<AppStepper> createState()
}

"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "flutter::src::widgets::scroll_physics.dart::ScrollPhysics"
"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "skorlife::widgets::custom_stepper.dart::AppStepperType"
"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "flutter::src::foundation::basic_types.dart::void Function(int)"
"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "dart::ui::void Function()"
"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "skorlife::widgets::custom_stepper.dart::Widget Function(BuildContext, ControlsDetails)"
"skorlife::widgets::custom_stepper.dart::AppStepper" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::custom_stepper.dart::AppStepper"

class "skorlife::widgets::custom_stepper.dart::_AppStepperState" {
  -List<GlobalKey<State<StatefulWidget>>> _keys
  -Map<int, AppStepState> _oldStates
  +void initState()
  +void didUpdateWidget()
  -bool _isFirst()
  -bool _isLast()
  -bool _isCurrent()
  -bool _isDark()
  -bool _isLabel()
  -Widget _buildLine()
  -Widget _buildCircleChild()
  -Color _circleColor()
  -Widget _buildCircle()
  -Widget _buildTriangle()
  -Widget _buildIcon()
  -Widget _buildVerticalControls()
  -TextStyle _titleStyle()
  -TextStyle _subtitleStyle()
  -TextStyle _labelStyle()
  -Widget _buildHeaderText()
  -Widget _buildLabelText()
  -Widget _buildVerticalHeader()
  -Widget _buildVerticalBody()
  -Widget _buildVertical()
  -Widget _buildHorizontal()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::custom_stepper.dart::_AppStepperState"
"flutter::src::widgets::ticker_provider.dart::TickerProviderStateMixin" <|-- "skorlife::widgets::custom_stepper.dart::_AppStepperState"

class "skorlife::widgets::custom_stepper.dart::_TrianglePainter" {
  +Color color
  +bool hitTest()
  +bool shouldRepaint()
  +void paint()
}

"skorlife::widgets::custom_stepper.dart::_TrianglePainter" o-- "dart::ui::Color"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::custom_stepper.dart::_TrianglePainter"

class "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavBloc" {
  +GetBottomNavBarTextFromConfig usecase
}

"skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavBloc" o-- "dashboard_domain::usecases::get_bottom_nav_texts.dart::GetBottomNavBarTextFromConfig"
"bloc::src::bloc.dart::Bloc" <|-- "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavBloc"

abstract class "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavEvent" {
}

class "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::LoadBottomNavEvent" {
}

"skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavEvent" <|-- "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::LoadBottomNavEvent"

abstract class "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavState" {
}

class "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavInitial" {
}

"skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavState" <|-- "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavInitial"

class "skorlife::widgets::border_button.dart::BorderButton" {
  +String title
  +void Function() onTap
  +double radius
  +Color? color
  +bool isDisabled
  +Widget build()
}

"skorlife::widgets::border_button.dart::BorderButton" o-- "dart::ui::void Function()"
"skorlife::widgets::border_button.dart::BorderButton" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::border_button.dart::BorderButton"

class "skorlife::widgets::noticed_error_bottom_sheet.dart::NoticedBottomSheet" {
  +void share()
  +Widget build()
  +void showNoMailAppsDialog()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::noticed_error_bottom_sheet.dart::NoticedBottomSheet"

class "skorlife::widgets::ktp_guide_slider.dart::KtpGuideSlider" {
  +State<KtpGuideSlider> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::ktp_guide_slider.dart::KtpGuideSlider"

class "skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" {
  +ValueNotifier<bool> loading
  +ValueNotifier<int> selfieState
  +String imagePath
  +int currentIndex
  +bool isPaused
  +Timer? timer
  +PageController pageController
  +ValueNotifier<String> nikVal
  +ValueNotifier<String> nameVal
  +ValueNotifier<String> dobVal
  +List<Map<String, dynamic>> pageviewData
  +void initState()
  +void startTimer()
  +void dispose()
  +Widget build()
}

"skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<int>"
"skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" o-- "dart::async::Timer"
"skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" o-- "flutter::src::widgets::page_view.dart::PageController"
"skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::ktp_guide_slider.dart::_KtpGuideSliderState"

class "skorlife::widgets::creditcard_line_chart.dart::CreditCardtLineChart" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::creditcard_line_chart.dart::CreditCardtLineChart"

class "skorlife::widgets::creditcard_line_chart.dart::LinePainter" {
  +dynamic color
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::creditcard_line_chart.dart::LinePainter"

class "skorlife::widgets::selfie_retake_photo.dart::SelfieRetakePhoto" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::selfie_retake_photo.dart::SelfieRetakePhoto"

class "skorlife::widgets::error_show.dart::ErrorShow" {
  +String message
  +Function onTapClose
  +State<ErrorShow> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::error_show.dart::ErrorShow"

class "skorlife::widgets::error_show.dart::_ErrorShowState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::error_show.dart::_ErrorShowState"

class "skorlife::widgets::totalaccounts_card.dart::TotalAmountCard" {
  +String? title
  +String? prize
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::totalaccounts_card.dart::TotalAmountCard"

class "skorlife::widgets::refresh_score_bottom_sheet.dart::RefreshScoreBottomSheet" {
  +BuildContext ctx
  +State<RefreshScoreBottomSheet> createState()
}

"skorlife::widgets::refresh_score_bottom_sheet.dart::RefreshScoreBottomSheet" o-- "flutter::src::widgets::framework.dart::BuildContext"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::refresh_score_bottom_sheet.dart::RefreshScoreBottomSheet"

class "skorlife::widgets::refresh_score_bottom_sheet.dart::_RefreshScoreBottomSheetState" {
  +bool showCloseButton
  +int secondsRemaining
  +Timer timer
  +int initialTimeOut
  +int extendedTimeOut
  +int timeout
  +AppProvider appProvider
  +List<Map<dynamic, dynamic>> creditReportList
  +Map<dynamic, dynamic> selectedItem
  +int index
  +void initState()
  +Widget build()
  -dynamic _getProgressBar()
  +Future<void> countDown()
  +dynamic updateContent()
}

"skorlife::widgets::refresh_score_bottom_sheet.dart::_RefreshScoreBottomSheetState" o-- "dart::async::Timer"
"skorlife::widgets::refresh_score_bottom_sheet.dart::_RefreshScoreBottomSheetState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::refresh_score_bottom_sheet.dart::_RefreshScoreBottomSheetState"

class "skorlife::widgets::user_credit_repory_widget.dart::UserCreditReportByWidget" {
  +void Function()? makeComplaintOnTap
  +Widget? ticketRaised
  +bool isTicketRaised
  +bool isShowIncorrectData
  +Color? readMoreColor
  +String? curentLoanConditions
  +String? label
  +Widget build()
}

"skorlife::widgets::user_credit_repory_widget.dart::UserCreditReportByWidget" o-- "null::void Function()"
"skorlife::widgets::user_credit_repory_widget.dart::UserCreditReportByWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::user_credit_repory_widget.dart::UserCreditReportByWidget" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::user_credit_repory_widget.dart::UserCreditReportByWidget"

class "skorlife::widgets::navigation_bottom_space.dart::BottomSpace" {
  +double height
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::navigation_bottom_space.dart::BottomSpace"

class "skorlife::widgets::carosuel_identity_monitoring.dart::CarouselIdentity" {
  +String carouselImBtnText
  +String carouselImHeading
  +String carouselImText
  +String carouselImDesc1
  +String carouselImDesc2
  +String? carouselImAsper
  +String? carouselImColor
  +String? carouselImDesc
  +String? iconPath
  +bool carouselImBtnDisplay
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::carosuel_identity_monitoring.dart::CarouselIdentity"

class "skorlife::widgets::option_bottom_sheet.dart::OptionBottomSheet" {
  +ValueNotifier<List<dynamic>> filteredList
  +ValueNotifier<String> searchText
  +TextEditingController searchController
  +String title
  +List<Map<String, dynamic>> options
  +String optionKey
  +Function onClick
  +String? selectedOption
  +bool dropDownDisabled
  +String? hint
  +bool shouldShowSearchBox
  +void onChangeHandler()
  +Widget build()
}

"skorlife::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<dynamic>>"
"skorlife::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<String>"
"skorlife::widgets::option_bottom_sheet.dart::OptionBottomSheet" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::option_bottom_sheet.dart::OptionBottomSheet"

class "skorlife::widgets::success_show.dart::SucessShow" {
  +int current
  +String message
  +State<SucessShow> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::success_show.dart::SucessShow"

class "skorlife::widgets::success_show.dart::_SucessShowState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::success_show.dart::_SucessShowState"

class "skorlife::widgets::carousel_payment_button.dart::CarouselButton" {
  +String title
  +void Function()? onTap
  +Color? bgcolor
  +Color? textcolor
  +Color? borderColor
  +double? height
  +double? width
  +double? fontSize
  +FontWeight? fontWeight
  +BorderRadiusGeometry? borderRadius
  +Widget build()
}

"skorlife::widgets::carousel_payment_button.dart::CarouselButton" o-- "dart::ui::void Function()"
"skorlife::widgets::carousel_payment_button.dart::CarouselButton" o-- "dart::ui::Color"
"skorlife::widgets::carousel_payment_button.dart::CarouselButton" o-- "dart::ui::FontWeight"
"skorlife::widgets::carousel_payment_button.dart::CarouselButton" o-- "flutter::src::painting::border_radius.dart::BorderRadiusGeometry"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::carousel_payment_button.dart::CarouselButton"

class "skorlife::widgets::bg_button.dart::BGButton" {
  +String title
  +bool isDisable
  +bool isIconEnable
  +bool leadingIcon
  +void Function()? onTap
  +Color? bgcolor
  +double? borderRadius
  +double? fontSize
  +Color? borderColor
  +Color? textColor
  +IconData iconData
  +Widget build()
}

"skorlife::widgets::bg_button.dart::BGButton" o-- "dart::ui::void Function()"
"skorlife::widgets::bg_button.dart::BGButton" o-- "dart::ui::Color"
"skorlife::widgets::bg_button.dart::BGButton" o-- "flutter::src::widgets::icon_data.dart::IconData"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::bg_button.dart::BGButton"

class "skorlife::widgets::profile_input_box.dart::ProfileInputBox" {
  +TextEditingController controller
  +String hintText
  +bool emptyValidation
  +String title
  +String? errorText
  +TextInputFormatter? inputFormatters
  +bool validationborder
  +int? maxLength
  +int? maxLines
  +TextInputType? keyboardType
  +Widget build()
}

"skorlife::widgets::profile_input_box.dart::ProfileInputBox" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::widgets::profile_input_box.dart::ProfileInputBox" o-- "flutter::src::services::text_formatter.dart::TextInputFormatter"
"skorlife::widgets::profile_input_box.dart::ProfileInputBox" o-- "flutter::src::services::text_input.dart::TextInputType"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::profile_input_box.dart::ProfileInputBox"

class "skorlife::widgets::bulletListWidget.dart::BulletList" {
  +List<String> strings
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::bulletListWidget.dart::BulletList"

class "skorlife::widgets::carousel_account.dart::CarouselAccount" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::carousel_account.dart::CarouselAccount"

class "skorlife::widgets::credit_score_bottom_sheet.dart::CreditScoreBottomSheet" {
  +String title
  +String description
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::credit_score_bottom_sheet.dart::CreditScoreBottomSheet"

class "skorlife::widgets::grid_card.dart::GridCard" {
  +String percentage
  +String text
  +Color color
  +void Function()? onTap
  +bool? isItalic
  +Widget build()
}

"skorlife::widgets::grid_card.dart::GridCard" o-- "dart::ui::Color"
"skorlife::widgets::grid_card.dart::GridCard" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::grid_card.dart::GridCard"

class "skorlife::widgets::in_page_toast.dart::InPageToast" {
  +String title
  +double topPosition
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::in_page_toast.dart::InPageToast"

class "skorlife::widgets::credit_factor_card.dart::CreditFactorCard" {
  +String tag
  +String title
  +String description
  +Color color
  +String icon
  +void Function()? onTap
  +Widget build()
}

"skorlife::widgets::credit_factor_card.dart::CreditFactorCard" o-- "dart::ui::Color"
"skorlife::widgets::credit_factor_card.dart::CreditFactorCard" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::credit_factor_card.dart::CreditFactorCard"

class "skorlife::widgets::radio_item.dart::RadioModel" {
  +bool isSelected
  +String text
}

class "skorlife::widgets::radio_item.dart::RadioItem" {
  +RadioModel item
  +State<RadioItem> createState()
}

"skorlife::widgets::radio_item.dart::RadioItem" o-- "skorlife::widgets::radio_item.dart::RadioModel"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::radio_item.dart::RadioItem"

class "skorlife::widgets::radio_item.dart::_RadioItemState" {
  +dynamic groupValue
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::radio_item.dart::_RadioItemState"

class "skorlife::widgets::send_request.dart::SendRequest" {
  +void Function(bool, String) onErrorMessage
  +State<SendRequest> createState()
}

"skorlife::widgets::send_request.dart::SendRequest" o-- "skorlife::widgets::send_request.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::send_request.dart::SendRequest"

class "skorlife::widgets::send_request.dart::_SendRequestState" {
  +ValueNotifier<bool> isButtonEnabled
  +ValueNotifier<bool> validNum
  +String searchQuery
  +TextEditingController searchController
  +void Function(bool, String) onErrorMessage
  +List<Contact> contacts
  +List<Contact> selectedContacts
  +List<Contact> filterContacts
  -RegExp _numeric
  +void initState()
  +Future<dynamic> contactPermission()
  +void getContact()
  +Future<dynamic> redirect()
  +Widget build()
  +bool isNumeric()
}

"skorlife::widgets::send_request.dart::_SendRequestState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::widgets::send_request.dart::_SendRequestState" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::widgets::send_request.dart::_SendRequestState" o-- "skorlife::widgets::send_request.dart::void Function(bool, String)"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::send_request.dart::_SendRequestState"

class "skorlife::widgets::kyc_maintenance.dart::KYCMaintenance" {
  +State<KYCMaintenance> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::kyc_maintenance.dart::KYCMaintenance"

class "skorlife::widgets::kyc_maintenance.dart::_KYCMaintenanceState" {
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::kyc_maintenance.dart::_KYCMaintenanceState"

class "skorlife::widgets::horizontal_chart.dart::HorizontalChart" {
  +int score
  +bool? hideIndicator
  +bool isBiScore
  +bool isScoreCredit
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::horizontal_chart.dart::HorizontalChart"

class "skorlife::widgets::horizontal_chart.dart::CursorPointer" {
  +double score
  +double width
  +bool? hideIndicator
  +bool shouldRepaint()
  +void paint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::horizontal_chart.dart::CursorPointer"

class "skorlife::widgets::bg_button_vector.dart::BGButtonVector" {
  +String title
  +bool isDisable
  +dynamic Function() onTap
  +Color? bgcolor
  +double? borderRadius
  +bool isIcon
  +bool autoPop
  +EdgeInsetsGeometry? btnMargin
  +Widget build()
}

"skorlife::widgets::bg_button_vector.dart::BGButtonVector" o-- "null::dynamic Function()"
"skorlife::widgets::bg_button_vector.dart::BGButtonVector" o-- "dart::ui::Color"
"skorlife::widgets::bg_button_vector.dart::BGButtonVector" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::bg_button_vector.dart::BGButtonVector"

class "skorlife::widgets::score_credit.dart::ScoreCredit" {
  +AppProvider appProvider
  +Color? scoreColor
  +Widget build()
}

"skorlife::widgets::score_credit.dart::ScoreCredit" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::score_credit.dart::ScoreCredit" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::score_credit.dart::ScoreCredit"

class "skorlife::widgets::score_credit.dart::PathPainter" {
  +dynamic score
  +dynamic width
  +dynamic strokeWidth
  +dynamic xSpacing
  +dynamic ySpacing
  +dynamic color
  +double xCalc()
  +double yCalc()
  +List<double> calcPath()
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::score_credit.dart::PathPainter"

class "skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" {
  +String title
  +bool isDisable
  +bool isSearch
  +bool isPassword
  +Widget? suffixIcon
  +TextEditingController controller
  +String? subTitle
  +String? infoString
  +int? maxLines
  +int? maxLength
  +TextInputType? keyboardType
  +TextInputFormatter? inputFormatters
  +Function? onChange
  +TextInputAction? inputAction
  +Function? onTap
  +Function? onTapOutside
  +dynamic Function()? suffixIconClick
  +String? placeholder
  +Widget? prefix
  +IconData? prefixIcon
  +String? errorText
  +String prefixText
  +bool emptyValidation
  +bool validationborder
  +bool prefixIsText
  +FocusNode? focusNode
  +bool obscureText
  +State<InputBoxLabeledInside> createState()
}

"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::services::text_input.dart::TextInputType"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::services::text_formatter.dart::TextInputFormatter"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::services::text_input.dart::TextInputAction"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "null::dynamic Function()"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::widgets::icon_data.dart::IconData"
"skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside" o-- "flutter::src::widgets::focus_manager.dart::FocusNode"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::input_box_labled_inside.dart::InputBoxLabeledInside"

class "skorlife::widgets::input_box_labled_inside.dart::_InputBoxLabeledInsideState" {
  +bool showErrorOrClear
  +bool showErrorIcon
  +bool readonly
  +void initState()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::input_box_labled_inside.dart::_InputBoxLabeledInsideState"

class "skorlife::widgets::custom_appbar.dart::CustomAppBar" {
  +String? title
  +String? subTitle
  +Color? backgroundColor
  +Color? color
  +double? titleFontSize
  +FontWeight? titleFontWeight
  +double? subtitleFontSize
  +FontWeight? subtitleFontWeight
  +Widget? backIcon
  +void Function()? onPressed
  +double? elevation
  +Size preferredSize
  {static} -dynamic _onPressed()
  +Widget build()
}

"skorlife::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::Color"
"skorlife::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::FontWeight"
"skorlife::widgets::custom_appbar.dart::CustomAppBar" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::void Function()"
"skorlife::widgets::custom_appbar.dart::CustomAppBar" o-- "dart::ui::Size"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::custom_appbar.dart::CustomAppBar"
"flutter::src::widgets::preferred_size.dart::PreferredSizeWidget" <|-- "skorlife::widgets::custom_appbar.dart::CustomAppBar"

class "skorlife::widgets::image::custom_outlined_button.dart::CustomOutlinedButton" {
  +BoxDecoration? decoration
  +Widget? leftIcon
  +Widget? rightIcon
  +Widget? label
  +Widget buildOutlinedButtonWidget
  +Widget build()
}

"skorlife::widgets::image::custom_outlined_button.dart::CustomOutlinedButton" o-- "flutter::src::painting::box_decoration.dart::BoxDecoration"
"skorlife::widgets::image::custom_outlined_button.dart::CustomOutlinedButton" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::image::base_button.dart::BaseButton" <|-- "skorlife::widgets::image::custom_outlined_button.dart::CustomOutlinedButton"

class "skorlife::widgets::image::custom_elevated_button.dart::CustomElevatedButton" {
  +BoxDecoration? decoration
  +Widget? leftIcon
  +Widget? rightIcon
  +Widget buildElevatedButtonWidget
  +Widget build()
}

"skorlife::widgets::image::custom_elevated_button.dart::CustomElevatedButton" o-- "flutter::src::painting::box_decoration.dart::BoxDecoration"
"skorlife::widgets::image::custom_elevated_button.dart::CustomElevatedButton" o-- "flutter::src::widgets::framework.dart::Widget"
"skorlife::widgets::image::base_button.dart::BaseButton" <|-- "skorlife::widgets::image::custom_elevated_button.dart::CustomElevatedButton"

class "skorlife::widgets::image::custom_image_view.dart::CustomImageView" {
  +String? url
  +String? imagePath
  +String? svgPath
  +File? file
  +double? height
  +double? width
  +Color? color
  +BoxFit? fit
  +String placeHolder
  +Alignment? alignment
  +void Function()? onTap
  +EdgeInsetsGeometry? margin
  +BorderRadius? radius
  +BoxBorder? border
  +Widget build()
  -Widget _buildWidget()
  -dynamic _buildCircleImage()
  -dynamic _buildImageWithBorder()
  -Widget _buildImageView()
}

"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "dart::io::File"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "dart::ui::Color"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "flutter::src::painting::box_fit.dart::BoxFit"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "flutter::src::painting::alignment.dart::Alignment"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "dart::ui::void Function()"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "flutter::src::painting::edge_insets.dart::EdgeInsetsGeometry"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "flutter::src::painting::border_radius.dart::BorderRadius"
"skorlife::widgets::image::custom_image_view.dart::CustomImageView" o-- "flutter::src::painting::box_border.dart::BoxBorder"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::image::custom_image_view.dart::CustomImageView"

class "skorlife::widgets::image::base_button.dart::BaseButton" {
  +String text
  +void Function()? onTap
  +ButtonStyle? buttonStyle
  +TextStyle? buttonTextStyle
  +bool? isDisabled
  +double? height
  +double? width
  +EdgeInsets? margin
  +Alignment? alignment
  +Widget build()
}

"skorlife::widgets::image::base_button.dart::BaseButton" o-- "dart::ui::void Function()"
"skorlife::widgets::image::base_button.dart::BaseButton" o-- "flutter::src::material::button_style.dart::ButtonStyle"
"skorlife::widgets::image::base_button.dart::BaseButton" o-- "flutter::src::painting::text_style.dart::TextStyle"
"skorlife::widgets::image::base_button.dart::BaseButton" o-- "flutter::src::painting::edge_insets.dart::EdgeInsets"
"skorlife::widgets::image::base_button.dart::BaseButton" o-- "flutter::src::painting::alignment.dart::Alignment"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::image::base_button.dart::BaseButton"

class "skorlife::widgets::dashboard_carousel.dart::DashboardCarousel" {
  +void Function(bool) onSecondaryStatus
  +BuildContext context
  +bool accountstatus
  +bool carouselError
  +bool identityMonitoringStatus
  +bool paymentStreakStatus
  +bool missedPaymentStatus
  +bool creditCardStatus
  +bool ageAccountstatus
  +dynamic creditUtilization
  +dynamic ageAccount
  +AppProvider appProvider
  +ValueNotifier<bool> isUserConfirmDataAvailable
  +ValueNotifier<bool> yesNoBtn
  +Widget build()
  +dynamic errorCarouselView()
  +dynamic refreshCarouselView()
  +dynamic getListLength()
}

"skorlife::widgets::dashboard_carousel.dart::DashboardCarousel" o-- "skorlife::widgets::dashboard_carousel.dart::void Function(bool)"
"skorlife::widgets::dashboard_carousel.dart::DashboardCarousel" o-- "flutter::src::widgets::framework.dart::BuildContext"
"skorlife::widgets::dashboard_carousel.dart::DashboardCarousel" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::dashboard_carousel.dart::DashboardCarousel" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::dashboard_carousel.dart::DashboardCarousel"

class "skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPayment" {
  +void Function(bool) onSecondaryStatus
  +CarouselMissedPaymentState createState()
}

"skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPayment" o-- "skorlife::widgets::carosuel_missed_payment.dart::void Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPayment"

class "skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPaymentState" {
  +void Function(bool) onSecondaryStatus
  +int expanded
  +String displayE02Button
  +String altText
  +void initState()
  +Future<dynamic> gete02ButtonStatus()
  +Widget build()
}

"skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPaymentState" o-- "skorlife::widgets::carosuel_missed_payment.dart::void Function(bool)"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::carosuel_missed_payment.dart::CarouselMissedPaymentState"

class "skorlife::widgets::late_loan.dart::LateLoanWidget" {
  +ValueNotifier<List<CarouselMissedDataDetail>?> missedDataDetailsList
  +Widget build()
  +dynamic launchAccountDetailsSheet()
}

"skorlife::widgets::late_loan.dart::LateLoanWidget" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<List<CarouselMissedDataDetail>>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::late_loan.dart::LateLoanWidget"

class "skorlife::widgets::late_loan.dart::LateLoanCard" {
  +String? title
  +String? description
  +String? icon
  +Function? onTap
  +Function? onTapReminder
  +void Function()? onTapCalendar
  +String? amount
  +String? accountType
  +String? latePaymentDay
  +String? carouselKolScore
  +String? carouselKolScoreColor
  +String? carouselKolScoreImg
  +String? carouselMissedDataDetailsAmountLabel
  +String? carouselMissedDataDetailsBillingDateLabel
  +String? carouselMissedDataDetailsBillingDay
  +String? carouselMissedDataDetailsLatePaymentDays
  +String? carouselMissedDataDetailsLatePaymentLabel
  +String? carouselMissedDataDetailsReminderLebal
  +String? carouselTopLabel
  +String? carouselMissedDataDetailsTypeImg
  +bool? carouselMissedDataDetailsIsReminderRequired
  +Reminder? carouselMissedDataDetailsReminder
  +bool? haveReminder
  +String? nextDueDate
  +int? priorDays
  +Widget build()
}

"skorlife::widgets::late_loan.dart::LateLoanCard" o-- "dart::ui::void Function()"
"skorlife::widgets::late_loan.dart::LateLoanCard" o-- "skorlife::maps::common.dart::Reminder"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::late_loan.dart::LateLoanCard"

class "skorlife::widgets::carousel_creditcard.dart::CarouselCreditCard" {
  +dynamic dynamicData
  +bool iscreditUtilization
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::carousel_creditcard.dart::CarouselCreditCard"

class "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupJailbroken" {
}

"skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" <|-- "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupJailbroken"

class "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupRemoteConfigError" {
}

"skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" <|-- "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupRemoteConfigError"

class "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupVersionOutdated" {
}

"skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" <|-- "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupVersionOutdated"

class "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupLocationAccessDenied" {
}

"skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" <|-- "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupLocationAccessDenied"

class "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupMaintenanceMode" {
}

"skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" <|-- "skorlife::widgets::app_startup::app_startup_errors.dart::AppStartupMaintenanceMode"

class "skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen" {
  +String title
  +String text
  +MapEntry<String, dynamic Function()>? onPrimaryClick
  +State<StatefulWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::app_startup::app_startup.dart::AppStartupFailScreen"

class "skorlife::widgets::app_startup::app_startup.dart::_AppStartupFailScreenState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::app_startup::app_startup.dart::_AppStartupFailScreenState"

class "skorlife::widgets::app_startup::app_loading.dart::AppLoading" {
  +State<StatefulWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::app_startup::app_loading.dart::AppLoading"

class "skorlife::widgets::app_startup::app_loading.dart::_AppLoading" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::app_startup::app_loading.dart::_AppLoading"

class "skorlife::widgets::horizontal_steps.dart::HorizontalSteps" {
  +int steps
  +int maxSteps
  +Color? stepColor
  +Widget build()
}

"skorlife::widgets::horizontal_steps.dart::HorizontalSteps" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::horizontal_steps.dart::HorizontalSteps"

class "skorlife::widgets::kyc_footer.dart::KycFooter" {
  +int? height
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::kyc_footer.dart::KycFooter"

class "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalInnerWidget" {
  +String? header
  +String title
  +String widgetTitle
  +String subtitle
  +String sliderMinText
  +String sliderMaxText
  +double sliderMinVal
  +double sliderMaxVal
  +double sliderActualVal
  +String sliderValText
  +String estLabel
  +String estOldValLabel
  +String estNewValLabel
  +String message
  +String messageColor
  +bool fromDashboard
  +dynamic parentContext
  +State<FinancialGoalInnerWidget> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalInnerWidget"

class "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::_FinancialGoalInnerWidgetState" {
  +double sliderVal
  +void initState()
  +Widget build()
  +void onDataSet()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::_FinancialGoalInnerWidgetState"
"skorlife::utils::listener.dart::DataSetListener" <|-- "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::_FinancialGoalInnerWidgetState"

class "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalWidget" {
  +FinancialGoalData? financialGoalData
  +bool fromDashboard
  +AppProvider appProvider
  +dynamic parentContext
  +Widget build()
  +dynamic setSavings()
}

"skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalWidget" o-- "skorlife::maps::dashboard.dart::FinancialGoalData"
"skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalWidget" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::finantial_goal_widget.dart::FinancialGoalWidget"

class "skorlife::widgets::pfm_widgets::line_chart.dart::LineChartWidget" {
  +List<int> showingTooltipOnSpots
  +List<String> tooltipDataOnSpots
  +List<String> xAxisText
  +Map<int, String> yAxisText
  +List<FlSpot> allSpots
  +List<Color> tooltipColorOnSpots
  +Color? tooltipBottomTextColor
  +State<LineChartWidget> createState()
}

"skorlife::widgets::pfm_widgets::line_chart.dart::LineChartWidget" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::line_chart.dart::LineChartWidget"

class "skorlife::widgets::pfm_widgets::line_chart.dart::_LineChartState" {
  +Gradient gradient
  +Widget bottomTitleWidgets()
  +Widget leftTitleWidgets()
  +void initstate()
  +Widget build()
}

"skorlife::widgets::pfm_widgets::line_chart.dart::_LineChartState" o-- "flutter::src::painting::gradient.dart::Gradient"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::line_chart.dart::_LineChartState"

class "skorlife::widgets::pfm_widgets::kol2_line_chart.dart::KOL2LineChartWidget" {
  +List<int> showingTooltipOnSpots
  +List<String> tooltipDataOnSpots
  +List<String> xAxisText
  +Map<int, String> yAxisText
  +List<FlSpot> allSpots
  +Color tooltipColorOnSpots
  +Color tooltipTextColorOnSpots
  +int highlightXaxisText
  +State<KOL2LineChartWidget> createState()
}

"skorlife::widgets::pfm_widgets::kol2_line_chart.dart::KOL2LineChartWidget" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::kol2_line_chart.dart::KOL2LineChartWidget"

class "skorlife::widgets::pfm_widgets::kol2_line_chart.dart::_KOL2LineChartState" {
  +Widget bottomTitleWidgets()
  +Widget leftTitleWidgets()
  +void initstate()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::kol2_line_chart.dart::_KOL2LineChartState"

class "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalNotSetWidget" {
  +void Function() onTap
  +List<String> tooltipData
  +List<Color> tooltipColors
  +List<int> showTooltips
  +List<String> xLabels
  +List<FlSpot> spots
  +Widget build()
}

"skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalNotSetWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalNotSetWidget"

class "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalSetWidget" {
  +void Function() onTap
  +GoalEstimatedData? goalEstimated
  +State<Kol1GraphGoalSetWidget> createState()
}

"skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalSetWidget" o-- "dart::ui::void Function()"
"skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalSetWidget" o-- "skorlife::maps::dashboard.dart::GoalEstimatedData"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::Kol1GraphGoalSetWidget"

class "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::_Kol1GraphGoalSetWidgetState" {
  +int amount
  +List<String> tooltipData
  +List<Color> tooltipColors
  +List<int> showTooltips
  +List<String> xLabels
  +List<FlSpot> spots
  +void initState()
  +dynamic calculateData()
  +int differenceInMonths()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::kol1_graph_widget.dart::_Kol1GraphGoalSetWidgetState"

class "skorlife::widgets::pfm_widgets::expenses_summary.dart::ExpensesSummary" {
  +TotalExpenditureData? totalExpenditureData
  +AppProvider appProvider
  +Widget build()
  +dynamic setExpenses()
}

"skorlife::widgets::pfm_widgets::expenses_summary.dart::ExpensesSummary" o-- "skorlife::maps::dashboard.dart::TotalExpenditureData"
"skorlife::widgets::pfm_widgets::expenses_summary.dart::ExpensesSummary" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::expenses_summary.dart::ExpensesSummary"

class "skorlife::widgets::pfm_widgets::expenses_summary.dart::CircleWidgetBudget" {
  +String value
  +String totalValue
  +String title
  +Color color
  +dynamic fillPercent
  +Widget build()
}

"skorlife::widgets::pfm_widgets::expenses_summary.dart::CircleWidgetBudget" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::expenses_summary.dart::CircleWidgetBudget"

class "skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::ArrearsFreeTimelineWidget" {
  +bool isPFMPreSetUP
  +RecommendedPayments? paymentArrearsInfo
  +Container? sliderWidget
  +State<ArrearsFreeTimelineWidget> createState()
}

"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::ArrearsFreeTimelineWidget" o-- "skorlife::maps::recommended_payments.dart::RecommendedPayments"
"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::ArrearsFreeTimelineWidget" o-- "flutter::src::widgets::container.dart::Container"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::ArrearsFreeTimelineWidget"

class "skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" {
  +ValueNotifier<DateTime> selectedDate
  +ValueNotifier<bool> recommendedVisibility
  +List<String> months
  +AppProvider appProvider
  +Map<String, List<Map<String, Object>>> jsonData
  +bool isDataAvailable
  +RecommendedPayments recommendedPayments
  +ValueNotifier<PaymentReccomendation> selectedRecommendedMonth
  +int selectedIndex
  +int maxIndex
  +List<String> getMonthsList()
  +List<String> getMonthYearList()
  +void initState()
  +dynamic prepareDataForUI()
  +dynamic getPaymentRecommendationData()
  +Widget build()
  +dynamic monthSelectionWidget()
}

"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<DateTime>"
"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" o-- "skorlife::constants::provider.dart::AppProvider"
"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" o-- "skorlife::maps::recommended_payments.dart::RecommendedPayments"
"skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<PaymentReccomendation>"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::arrears_free_timeline_widget.dart::_ArrearsFreeTimelineWidgetState"

class "skorlife::widgets::pfm_widgets::payment_recommendation.dart::PaymentRecommendationWidget" {
  +PaymentReccomendation recommendedPayments
  +bool isPFMSetUp
  +Widget build()
  +dynamic showPaymentRecommendationBtSheet()
  +Widget getDueWidget()
}

"skorlife::widgets::pfm_widgets::payment_recommendation.dart::PaymentRecommendationWidget" o-- "skorlife::maps::recommended_payments.dart::PaymentReccomendation"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::payment_recommendation.dart::PaymentRecommendationWidget"

class "skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::Kol2GraphWidget" {
  +void Function() onTap
  +State<Kol2GraphWidget> createState()
}

"skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::Kol2GraphWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::Kol2GraphWidget"

class "skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::_Kol2GraphWidgetState" {
  +int amount
  +String endTime
  +List<String> tooltipData
  +List<Color> tooltipColor
  +List<int> showTooltips
  +List<String> xLabels
  +List<FlSpot> spots
  +AppProvider appProvider
  +void initState()
  +dynamic calculateData()
  +int differenceInMonths()
  -dynamic _resetDataVariables()
  +Widget build()
}

"skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::_Kol2GraphWidgetState" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::kol2_graph_widget.dart::_Kol2GraphWidgetState"

class "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::PFMWidgetForDashboard" {
  +AppProvider appProvider
  +Widget build()
}

"skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::PFMWidgetForDashboard" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::PFMWidgetForDashboard"

class "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::EstimatedWidget" {
  +AppProvider appProvider
  +State<EstimatedWidget> createState()
}

"skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::EstimatedWidget" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::EstimatedWidget"

class "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::_EstimatedWidgetState" {
  +int selectedtab
  +int totalIncome
  +int estimatedSaving
  +void initState()
  +Widget build()
  -Container _estimasiTabunganWidget()
  -Container _tabsWidget()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::pfm_widgets::pfm_widget_for_dashboard.dart::_EstimatedWidgetState"

class "skorlife::widgets::collectibility_bottom_sheet.dart::CollectibilityBottomSheet" {
  +String? title
  +String? description
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::collectibility_bottom_sheet.dart::CollectibilityBottomSheet"

class "skorlife::widgets::collectibility_bottom_sheet.dart::StatusCollectibilityBottomSheet" {
  +String? title
  +String? description
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::collectibility_bottom_sheet.dart::StatusCollectibilityBottomSheet"

abstract class "skorlife::widgets::shake_widget.dart::AnimationControllerState" {
  +Duration animationDuration
  +AnimationController animationController
  +void dispose()
}

"skorlife::widgets::shake_widget.dart::AnimationControllerState" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::shake_widget.dart::AnimationControllerState"
"flutter::src::widgets::ticker_provider.dart::SingleTickerProviderStateMixin" <|-- "skorlife::widgets::shake_widget.dart::AnimationControllerState"

class "skorlife::widgets::shake_widget.dart::ShakeWidget" {
  +Widget child
  +double shakeOffset
  +int shakeCount
  +Duration shakeDuration
  +ShakeWidgetState createState()
}

"skorlife::widgets::shake_widget.dart::ShakeWidget" o-- "flutter::src::widgets::framework.dart::Widget"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::shake_widget.dart::ShakeWidget"

class "skorlife::widgets::shake_widget.dart::ShakeWidgetState" {
  +void initState()
  +void dispose()
  -void _updateStatus()
  +void shake()
  +Widget build()
}

"skorlife::widgets::shake_widget.dart::AnimationControllerState" <|-- "skorlife::widgets::shake_widget.dart::ShakeWidgetState"

class "skorlife::widgets::account_line_chart.dart::AccountLineChart" {
  +String score
  +bool? hideIndicator
  +double offset
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::account_line_chart.dart::AccountLineChart"

class "skorlife::widgets::title_with_button.dart::TWB" {
  +String title
  +String btnText
  +String icon
  +bool btnIcon
  +dynamic Function() onClick
  +Widget build()
}

"skorlife::widgets::title_with_button.dart::TWB" o-- "null::dynamic Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::title_with_button.dart::TWB"

class "skorlife::widgets::input_box.dart::InputBox" {
  +String title
  +bool isDisable
  +bool isSearch
  +bool suffixIconPresent
  +IconData? suffixIcon
  +TextEditingController controller
  +String? subTitle
  +String? infoString
  +int? maxLines
  +int? maxLength
  +TextInputType? keyboardType
  +TextInputFormatter? inputFormatters
  +Function? onChange
  +dynamic Function()? suffixIconClick
  +String? placeholder
  +String? errorText
  +bool emptyValidation
  +Color? iconColor
  +int rotateIcon
  +double bp
  +bool obscureText
  +bool validationborder
  {static} -dynamic _onChange()
  +Widget build()
}

"skorlife::widgets::input_box.dart::InputBox" o-- "flutter::src::widgets::icon_data.dart::IconData"
"skorlife::widgets::input_box.dart::InputBox" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"skorlife::widgets::input_box.dart::InputBox" o-- "flutter::src::services::text_input.dart::TextInputType"
"skorlife::widgets::input_box.dart::InputBox" o-- "flutter::src::services::text_formatter.dart::TextInputFormatter"
"skorlife::widgets::input_box.dart::InputBox" o-- "null::dynamic Function()"
"skorlife::widgets::input_box.dart::InputBox" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::input_box.dart::InputBox"

class "skorlife::widgets::toggle_switch.dart::ToggleSwitch" {
  +Function onChange
  +bool isLastName
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::toggle_switch.dart::ToggleSwitch"

class "skorlife::widgets::accoutn_credit_usage_meter.dart::AccountCreditUsageMeter" {
  +int percentage
  +Color color
  +double size
  +double strokeWidth
  +double? fontSize
  +Color? fontColor
  +Widget build()
}

"skorlife::widgets::accoutn_credit_usage_meter.dart::AccountCreditUsageMeter" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::accoutn_credit_usage_meter.dart::AccountCreditUsageMeter"

class "skorlife::widgets::accoutn_credit_usage_meter.dart::PathPainter" {
  +dynamic percentage
  +Color color
  +dynamic width
  +dynamic strokeWidth
  +void paint()
  +bool shouldRepaint()
}

"skorlife::widgets::accoutn_credit_usage_meter.dart::PathPainter" o-- "dart::ui::Color"
"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::accoutn_credit_usage_meter.dart::PathPainter"

class "skorlife::widgets::custom_image.dart::CustomImage" {
  +String icon
  +double? height
  +double padding
  +double? width
  +double? scale
  +Color? color
  +BoxFit? fit
  +AlignmentGeometry? alignment
  +Widget build()
}

"skorlife::widgets::custom_image.dart::CustomImage" o-- "dart::ui::Color"
"skorlife::widgets::custom_image.dart::CustomImage" o-- "flutter::src::painting::box_fit.dart::BoxFit"
"skorlife::widgets::custom_image.dart::CustomImage" o-- "flutter::src::painting::alignment.dart::AlignmentGeometry"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::custom_image.dart::CustomImage"

class "skorlife::widgets::account_card_v2.dart::AccountCardDetails" {
  +String title
  +String description
  +String accountNumber
  +String icon
  +Function onTap
  +dynamic Function(bool) onTapReminder
  +void Function()? onTapCalendar
  +String? tag
  +Color? color
  +String? amount
  +String? amountType
  +String? type
  +String? paymentStatus
  +String? paymentStatusText
  +int? creditUsagePercentage
  +int? priorDays
  +Color? creditUsageColor
  +String? accountAge
  +String? nextDueDate
  +bool? hasInActiveAccounts
  +bool? isReminderRequired
  +bool? isPaylaterData
  +bool? haveReminder
  +String? providerCode
  +String? accountType
  +String? limit
  +String? activeStatus
  +bool? isBottomTextRequired
  +Widget build()
}

"skorlife::widgets::account_card_v2.dart::AccountCardDetails" o-- "null::dynamic Function(bool)"
"skorlife::widgets::account_card_v2.dart::AccountCardDetails" o-- "dart::ui::void Function()"
"skorlife::widgets::account_card_v2.dart::AccountCardDetails" o-- "dart::ui::Color"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::account_card_v2.dart::AccountCardDetails"

class "skorlife::widgets::bi_score.dart::BiScore" {
  +AppProvider provider
  +List<String> colors
  +Widget build()
}

"skorlife::widgets::bi_score.dart::BiScore" o-- "skorlife::constants::provider.dart::AppProvider"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::bi_score.dart::BiScore"

class "skorlife::widgets::bi_score.dart::ScoreNotDefineBiScore" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::bi_score.dart::ScoreNotDefineBiScore"

class "skorlife::widgets::bi_score.dart::ScoreNotDefineRefresh" {
  +void Function()? onTap
  +State<ScoreNotDefineRefresh> createState()
}

"skorlife::widgets::bi_score.dart::ScoreNotDefineRefresh" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::bi_score.dart::ScoreNotDefineRefresh"

class "skorlife::widgets::bi_score.dart::_ScoreNotDefineRefreshState" {
  -ValueNotifier<bool> _isPositionedRight
  +ValueNotifier<bool> toRight
  +Timer? globalTimer
  +void initState()
  +void startPeriodicAnimation()
  +void didChangeDependencies()
  +void dispose()
  +Widget build()
}

"skorlife::widgets::bi_score.dart::_ScoreNotDefineRefreshState" o-- "flutter::src::foundation::change_notifier.dart::ValueNotifier<bool>"
"skorlife::widgets::bi_score.dart::_ScoreNotDefineRefreshState" o-- "dart::async::Timer"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::bi_score.dart::_ScoreNotDefineRefreshState"

class "skorlife::widgets::age_account_line_chart.dart::AgeAccountLineChart" {
  +dynamic carouselLimit
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::age_account_line_chart.dart::AgeAccountLineChart"

class "skorlife::widgets::age_account_line_chart.dart::LinePainter" {
  +dynamic color
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::age_account_line_chart.dart::LinePainter"

class "skorlife::widgets::bottom_navigation_bar.dart::CustomBottomNavigationBar" {
  +bool shouldShowNavBar
  +dynamic Function(bool) onSetShouldShowNavBar
  +State<StatefulWidget> createState()
}

"skorlife::widgets::bottom_navigation_bar.dart::CustomBottomNavigationBar" o-- "null::dynamic Function(bool)"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::bottom_navigation_bar.dart::CustomBottomNavigationBar"

class "skorlife::widgets::bottom_navigation_bar.dart::_CustomBottonNavBarState" {
  +BottomNavBloc bloc
  +Map<int, BottomNavMenu> bottomNavBarTexts
  +GetBottomNavBarTextFromConfig getBottomNavBarText
  +Widget build()
  +void initState()
  +dynamic getTexts()
  +dynamic homeMenu()
  +dynamic expenditureMenu()
  +dynamic akunMenu()
  +dynamic skorMenu()
  +dynamic skorCardMenu()
  +void navigateToSkorcardEligible()
}

"skorlife::widgets::bottom_navigation_bar.dart::_CustomBottonNavBarState" o-- "skorlife::widgets::bottom_navigation_bar_bloc::bottom_nav_bloc.dart::BottomNavBloc"
"skorlife::widgets::bottom_navigation_bar.dart::_CustomBottonNavBarState" o-- "dashboard_domain::usecases::get_bottom_nav_texts.dart::GetBottomNavBarTextFromConfig"
"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::bottom_navigation_bar.dart::_CustomBottonNavBarState"

class "skorlife::widgets::blue_line_chart.dart::ChartData" {
  +String x
  +double y
}

class "skorlife::widgets::blue_line_chart.dart::BlueLineChart" {
  +AccountDetailsResp accountDetails
  +Widget build()
}

"skorlife::widgets::blue_line_chart.dart::BlueLineChart" o-- "skorlife::maps::common.dart::AccountDetailsResp"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::blue_line_chart.dart::BlueLineChart"

class "skorlife::widgets::maintenance_error_page.dart::MaintenanceError" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::maintenance_error_page.dart::MaintenanceError"

class "skorlife::widgets::credit_factor_details.dart::CreditFactorDetails" {
  +String icon
  +String title
  +String influence
  +String scoreStatus
  +Color scoreStatusColor
  +bool shouldShowPaymentStatus
  +String description
  +void Function()? onSharePressed
  +String? latePaymnet
  +String? onTimePaymnet
  +bool? shouldShowAccountAge
  +String? accountAge
  +Widget build()
}

"skorlife::widgets::credit_factor_details.dart::CreditFactorDetails" o-- "dart::ui::Color"
"skorlife::widgets::credit_factor_details.dart::CreditFactorDetails" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::credit_factor_details.dart::CreditFactorDetails"

class "skorlife::widgets::account_history_view.dart::AccountHistoryView" {
  +Color? statusBgColor
  +Color? statusTextColor
  +bool isAppIntroWidgetsToBeDisplayed
  +bool isCreditReportSubmitWidgetToBeShown
  +AccountOverviewList? accountsOverview
  +void Function()? staticAction
  +void Function()? disclaimerAction
  +dynamic Function(int)? onAccountClick
  +dynamic Function(int)? onClick
  +Widget build()
}

"skorlife::widgets::account_history_view.dart::AccountHistoryView" o-- "dart::ui::Color"
"skorlife::widgets::account_history_view.dart::AccountHistoryView" o-- "skorlife::maps::common.dart::AccountOverviewList"
"skorlife::widgets::account_history_view.dart::AccountHistoryView" o-- "dart::ui::void Function()"
"skorlife::widgets::account_history_view.dart::AccountHistoryView" o-- "null::dynamic Function(int)"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::account_history_view.dart::AccountHistoryView"

class "skorlife::widgets::error_button.dart::ErrorButton" {
  +String? title
  +String? accountType
  +int view
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::error_button.dart::ErrorButton"

class "skorlife::widgets::sliding_app_bar.dart::SlidingAppBar" {
  +PreferredSizeWidget child
  +AnimationController controller
  +bool visible
  +Size preferredSize
  +Widget build()
}

"skorlife::widgets::sliding_app_bar.dart::SlidingAppBar" o-- "flutter::src::widgets::preferred_size.dart::PreferredSizeWidget"
"skorlife::widgets::sliding_app_bar.dart::SlidingAppBar" o-- "flutter::src::animation::animation_controller.dart::AnimationController"
"skorlife::widgets::sliding_app_bar.dart::SlidingAppBar" o-- "dart::ui::Size"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::sliding_app_bar.dart::SlidingAppBar"
"flutter::src::widgets::preferred_size.dart::PreferredSizeWidget" <|-- "skorlife::widgets::sliding_app_bar.dart::SlidingAppBar"

class "skorlife::widgets::credit_score_meter.dart::CreditScoreMeter" {
  +CibilChart? cibilChart
  +GlobalKey<State<StatefulWidget>>? one
  +Widget build()
}

"skorlife::widgets::credit_score_meter.dart::CreditScoreMeter" o-- "skorlife::maps::dashboard.dart::CibilChart"
"skorlife::widgets::credit_score_meter.dart::CreditScoreMeter" o-- "flutter::src::widgets::framework.dart::GlobalKey<State<StatefulWidget>>"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::credit_score_meter.dart::CreditScoreMeter"

class "skorlife::widgets::credit_score_meter.dart::PathPainter" {
  +dynamic score
  +dynamic width
  +dynamic strokeWidth
  +dynamic xSpacing
  +dynamic ySpacing
  +double xCalc()
  +double yCalc()
  +List<double> calcPath()
  +void paint()
  +bool shouldRepaint()
}

"flutter::src::rendering::custom_paint.dart::CustomPainter" <|-- "skorlife::widgets::credit_score_meter.dart::PathPainter"

class "skorlife::widgets::carousel_payment_streak.dart::CarouselPaymentStreak" {
  +dynamic toColor()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::carousel_payment_streak.dart::CarouselPaymentStreak"

class "skorlife::widgets::splash_screen.dart::SplashScreen" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::splash_screen.dart::SplashScreen"

class "skorlife::widgets::kyc_scane_bottom_sheet.dart::KycScaneBottomSheet" {
  +State<KycScaneBottomSheet> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::kyc_scane_bottom_sheet.dart::KycScaneBottomSheet"

class "skorlife::widgets::kyc_scane_bottom_sheet.dart::_KycScaneBottomSheetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::kyc_scane_bottom_sheet.dart::_KycScaneBottomSheetState"

class "skorlife::widgets::kyc_footer_v2.dart::KycFooterV2" {
  +int? height
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "skorlife::widgets::kyc_footer_v2.dart::KycFooterV2"

class "skorlife::widgets::user_data_confirmation_widget.dart::UserDataConfirmationWidget" {
  +String text
  +String yesText
  +String noText
  +void Function()? onTapYes
  +void Function()? onTapNo
  +double? borderRadius
  +double margin
  +State<UserDataConfirmationWidget> createState()
}

"skorlife::widgets::user_data_confirmation_widget.dart::UserDataConfirmationWidget" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "skorlife::widgets::user_data_confirmation_widget.dart::UserDataConfirmationWidget"

class "skorlife::widgets::user_data_confirmation_widget.dart::_UserDataConfirmationWidgetState" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "skorlife::widgets::user_data_confirmation_widget.dart::_UserDataConfirmationWidgetState"


@enduml